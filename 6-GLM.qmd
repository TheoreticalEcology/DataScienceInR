---
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
set.seed(42)
```

# Generalized linear models

## Classroom demo

```{r}


# options(na.action = "na.omit") # reset conditions after model selection
library(EcoData)
library(effects)
library(DHARMa)



# Logistic ----------------------------------------------------------------


# save pclass as.factor
str(titanic) #from EcoData package
titanic$Fpclass = as.factor(titanic$pclass)


# another way of getting a mosaic plot (no table required)
mosaicplot(  ~  survived + sex + pclass, data = titanic)


# lm will not give you an error, but residuals are clearly not normal
fit <- lm(survived ~ age, data = titanic)
summary(fit)
par(mfrow = c(2,2))
plot(fit)

# logistic regression with categorial predictor
m1 = glm(survived ~ sex, data = titanic, family = "binomial")
summary(m1)

# 2 groups: sexmale = difference of mean for male from mean for female
# intercept = linear term for female: 
0.98 
#but: this has to be transformed back to original scale before being interpreted!!!
# survival probability for females
plogis(0.98)
# applies inverse logit function


# linear term for male
0.98 - 2.43
# survival probability
plogis(0.98 - 2.43)

# predicted linear term
table(predict(m1))
# predicted response
table(predict(m1, type = "response"))


plot(allEffects(m1))

# more predictors
m2 = glm(survived ~ sex + age, titanic, family = binomial)
summary(m2)


# Calculate Pseudo R2: 1 - Residual deviance / Null deviance
1 - 1101.3/1414.6 # Pseudo R2 of model

# Anova
anova(m2, test = "Chisq")


plot(allEffects(m2))

# Model diagnostics
# do not use the plot(model) residual checks
# use DHARMa package
library(DHARMa)
res = simulateResiduals(m2)
plot(res)





# Poisson -----------------------------------------------------------------

head(birdfeeding)

plot(feeding ~ attractiveness, birdfeeding)

fit = glm(feeding ~ attractiveness, birdfeeding, family = "poisson")
summary(fit)

# feeding for a bird with attractiveness 3
# linear term
1.47 + 0.148 * 3
# pieces of food, using inverse of the link function, log --> exp
exp(1.47 + 0.148 * 3)


plot(allEffects(fit))



# checking residuals
res = simulateResiduals(fit)
plot(res, quantreg = F)
# the warning is because of a recent change in DHARMa 
# qgam requires more data points



# test for overdispersion
testDispersion(fit)


# Dispersion test is necessary for all poisson or binomial models with k/n 
# if positive, you can chose family = quasi-poisson or quasi-binomial
# or use negative binomial distribution instead of poisson
```

## Exercises

In this exercise you will practice to:

-   choose the correct model for your data
-   interpret the model output of generalized linear models
-   check the residuals using the DHARMa package

Before you start, remember to clean your global environment (if you haven't already) using *rm(list=ls())*.

For your analyses, you will use the datasets *nitrofen* and *melanoma* which are both implemented in the *boot* package. You will also need the packages *DHARMa* and *effects*. Please install and load these packages, if you haven't done this yet:

```{r, eval=T}
library(boot)
library(DHARMa)
library(effects)
```

### Analyzing the *nitrofen* dataset

The Ministry of Agriculture has appointed your university to investigate the toxicity of the herbicide nitrofen on the fertility of the waterflea species *Ceriodaphnia dubia* in order to asses the implications of the herbicide for ecosystems.\
In an experiment conducted by your fellow researchers, the offspring of the waterflea species *Ceriodaphnia dubia* were counted as a function of different concentrations of the herbicide. Your job is to do the analysis.

::: {.callout-caution icon="false"}
#### Question

Carry out the following tasks:

-   Convert the variable *conc* into a factor.
-   Fit a suitable model for the relationship between total amount of offspring (*total*) and nitrofen concentration (*conc*).
-   Test for overdispersion.
-   Interpret and plot the effect.
-   Test for the overall effect of nitrofen concentration.

You may need the following functions:

-   str()
-   as.factor()
-   glm()
-   summary()
-   testDispersion()
-   plot()
-   allEffects()
-   anova(..., test = "Chisq")
:::

::: {.callout-tip collapse="true" appearance="minimal" icon="false"}
#### Solution

```{r nitrofen}
nitrofen$conc <- as.factor(nitrofen$conc) # change variable conc to a factor

fit <- glm(total ~ conc, family = "poisson", data=nitrofen)
summary(fit)

# test for overdispersion
testDispersion(fit)

# plot effect
plot(allEffects(fit))

# log link to calculate predicted values at the response scale:
# predicted response = exp(Intercept + Estimate * predictor)
exp(3.44681) # or
exp(coef(fit)[1])

# test the overall effect of *conc* on the total number of offspring
anova(fit, test = "Chisq")
```
:::

### Analyzing the *melanoma* dataset

In the following, you will investigate the *melanoma* dataset provided by the University Hospital of Odense, Denmark. The data are of patients with malignant melanomas. You can find a more detailed description in the help of *melanoma*. The question you want to investigate is whether the occurance of ulceration (*ulcer*, yes = 1, no = 0) is related to the thickness of the tumour (*thickness* in mm) and the sex of the patient (*sex*, male = 1, female = 0) and the interaction of the two.

::: {.callout-caution icon="false"}
#### Question

Carry out the following tasks:

-   Fit an appropriate model to answer the research question.
-   Check the model residuals.
-   Interpret and plot all effects including an analysis of the deviance.

You may need the following functions:

-   str()
-   glm()
-   summary()
-   anova()
-   simulateResiduals()
-   plot()
-   allEffects()

Use your results to **answer the questions on elearning-extern**.
:::

::: {.callout-tip collapse="true" appearance="minimal" icon="false"}
#### Solution

```{r melanoma}
dat <- melanoma
dat$sex <- as.factor(dat$sex) # change variable sex to factor, facultative: with 0 1 not necessary
fit <- glm(ulcer ~ thickness * sex, family = "binomial", data=dat)

# residuals
res <- simulateResiduals(fit, n = 500)
plot(res)

# model interpretation
summary(fit)
anova(fit, test = "Chisq")

# Calculate Pseudo R2: 1 - Residual deviance / Null deviance
1 - 234.04/281.13 # Pseudo R2 of model

# plot effects
plot(allEffects(fit))
```

As the residuals look quite suspicious and all quantile regressions significantly deviate, we can try to improve the model with a quadratic term for thickness.

```{r}
fit <- glm(ulcer ~ thickness * sex + I(thickness^2), family = "binomial", data=dat)
summary(fit)
res <- simulateResiduals(fit)
plot(res)

# plot effects
plot(allEffects(fit))
```

The quadratic term solves the problem of the residuals. The effects plots look quite different. There seems to be a maximum of ulcer around a thickness of 10 that we would have missed without the quadratic term.
:::
