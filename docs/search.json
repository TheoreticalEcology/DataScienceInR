[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction to Data Science with R",
    "section": "",
    "text": "Preface\nMaterial for a first 1-week course in Data Science, taught at the University of Regensburg.\nDay 1: Getting started, descriptive statistics\nDay2: Hypothesis tests\nDay3: Linear regression (simple, multivariate)\nDay4: Generalised linear models (GLM), Multivariate statistics\nDay5: Machine Learning, Data organisation"
  },
  {
    "objectID": "1-GettingStarted.html#your-r-system",
    "href": "1-GettingStarted.html#your-r-system",
    "title": "1  Getting Started with R",
    "section": "1.1 Your R System",
    "text": "1.1 Your R System\nIn this course, we work with the combination of R + RStudio.\n\nR is the calculation engine that performs the computations.\nRStudio is the editor that helps you sending inputs to R and collect outputs.\n\nMake sure you have a recent version of R + RStudio installed on your computer. If you have never used RStudio, here is a good video introducing the basic system and how R and RStudio interact."
  },
  {
    "objectID": "1-GettingStarted.html#libraries-that-you-will-need",
    "href": "1-GettingStarted.html#libraries-that-you-will-need",
    "title": "1  Getting Started with R",
    "section": "1.2 Libraries that you will need",
    "text": "1.2 Libraries that you will need\nThe R engine comes with a number of base functions, but one of the great things about R is that you can extend these base functions by libraries that can be programmed by anyone. In principle, you can install libraries from any website or file. In practice, however, most commonly used libraries are distributed via two major repositories. For statistical methods, this is CRAN, and for bioinformatics, this is Bioconductor.\n\n\n\n\n\n\nClick to see more on installing libraries in R\n\n\n\n\n\nTo install a package from a library, use the command\n\ninstall.packages(LIBRARY)\n\nExchange “LIBRARY” with the name of the library you want to install. The default is to search the package in CRAN, but you can specify other repositories or file locations in the function. For Windows / Mac, R should work out of the box. For other UNIX based systems, may also need to install\nbuild-essential\ngfortran\nlibmagick++-dev\nr-base-dev\ncmake\nIf you are new to installing packages on Debian / Ubuntu, etc., type the following:\nsudo apt update && sudo apt install -y --install-recommends build-essential gfortran libmagick++-dev r-base-dev cmake\n\n\n\nIn this book, we will often use data sets from the EcoData package, which is not on CRAN, but on a GitHub page. To install the package, if you don’t have the devtools package installed already, first install devtools from CRAN by running\n\ninstall.packages(\"devtools\")\n\nThen install the EcoData package via\n\ndevtools::install_github(repo = \"TheoreticalEcology/EcoData\",\n                         dependencies = T, build_vignettes = T)\n\nFor your convenience, the EcoData installation also forces the installation of most of the packages needed in this book, so this may take a while. If you want to load only the EcoData package, or if you encounter problems during the install, set dependencies = F, build_vignettes = F."
  },
  {
    "objectID": "1-GettingStarted.html#data",
    "href": "1-GettingStarted.html#data",
    "title": "1  Getting Started with R",
    "section": "1.3 Data",
    "text": "1.3 Data\nData typically consist of a table with several observations with one or more variables:\n\n##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n## 1          5.1         3.5          1.4         0.2  setosa\n## 2          4.9         3.0          1.4         0.2  setosa\n## 3          4.7         3.2          1.3         0.2  setosa\n## 4          4.6         3.1          1.5         0.2  setosa\n## 5          5.0         3.6          1.4         0.2  setosa\n## 6          5.4         3.9          1.7         0.4  setosa\n\nOne row per observation is the standard format for most programs. There are different types of variables (with respect to the analysis):\n\nDependent / response variable variable of interest we want to know what it is influenced by. Typically, there is one variable of particular interest.\nExplanatory or independent variables, aka. predictors / covariates / treatments variables that potentially influence the response variable\n\n\n\n\n\n\n\nTip\n\n\n\nExample: We measure plant growth and nitrogen in the soil. Growth is the dependent variable and nitrogen is the explanatory variable\n\n\nVariables differ in range and scale:\n\nScale of measure: nominal (unordered), ordinal (ordered), metric (differences can be interpreted)\nNumeric or metric variables Examples: Body size, conductivity\nNon-numeric = categorial variables\n\nunordered / nominal (red, green, blue) ordered /\nordinal (tiny, small, large) Attention: categories small = 1m, medium = 1.5m, large = 2m would be interpreted as numeric, because their relative differences are defined\nSpecial case: binary variable (0,1), technically it is also categorial, but with two levels only we call in binary\n\n\n\n\n\n\n\n\nRemarks on data handling\n\n\n\n\n\nTypically, data will be recorded electronically with a measurement device, or you have to enter it manually using a spreadsheet program, e.g. MS Excel. The best format for data storage is csv (comma separated values) because it is long-term compatibility with all kinds of programs / systems (Excel can export to csv).\nAfter raw data is entered, it should never be manipulated by hand! If you modify data by hand, make a copy and document all changes (additional text file). Better: Make changes using a script\nData handling in R:\n\ncreate R script “dataprep.R” or similar and import dataset\npossibly combine different datasets\nclean data (remove NAs, impossible values etc.)\nsave as Rdata (derived data)"
  },
  {
    "objectID": "1-GettingStarted.html#data-manipulation-in-r",
    "href": "1-GettingStarted.html#data-manipulation-in-r",
    "title": "1  Getting Started with R",
    "section": "1.4 Data manipulation in R",
    "text": "1.4 Data manipulation in R\nR works like a calculator:\n\n2+2\n## [1] 4\n5*4\n## [1] 20\n2^2\n## [1] 4\n\nWe can also use functions that perform specific calculations:\n\nsqrt(4)\n## [1] 2\nsum(c(2,2))\n## [1] 4\n\nWe can assign values/data to variables:\n\nobject.name <- 1\n\nNote that both operators ‘<-’ or “=” work. Functions in R (e.g. sum(), mean(), etc.) have arguments that control/change their behavior and are also used to pass the data to the function:\n\nmean(x = c(2, 2))\n## [1] 2\n\n\n\n\n\n\n\nHelp\n\n\n\nA list and description of all arguments can be found in the help of a function (which can be accessed via ?mean or if you place the cursor on the function and press F1)\n\n\n\n1.4.1 Data types and data structures\nThere are four important data types in R (there are more but we focus on these 5):\n\nNumeric: 1, 2, 3, 4\nLogical: TRUE or FALSE\nCharacters: “A”, “B”,…\nFactors which are characters but we have to tell R explicitly that they are factors\nNot a number: NA, NaN (empty value)\n\nBased on the data types we can build data structures which contain either only specific data types or a mixture of data types:\n\nVector: Several values of one data type, can be created with the c function:\n\nc(5, 3, 5, 6) # numeric vector\nc(TRUE, TRUE, FALSE, TRUE) # logical vector\nc(\"A\", \"B\", \"C\") # character vector\nas.factor(c(\"A\", \"B\", \"C\")) # factor vector\n\nMatrix: two-dimensional data structure of one data type, can be created with the matrix function (we can pass a vector to the matrix function and tell it via arguments how the matrix should be constructed):\n\nmatrix(c(1, 2, 3, 4, 5, 6), nrow = 3, ncol = 2)\n##      [,1] [,2]\n## [1,]    1    4\n## [2,]    2    5\n## [3,]    3    6\n\nData.frame: Often our data has variables of different types which makes a matrix unsuitable data structure. Data.frames can handle different data types and is organized in columns (one column = one variables) and can be created with the data.frame function:\n\ndata.frame(A = c(1, 2, 3), B = c(\"A\", \"B\", \"C\"), C = c(TRUE, FALSE, FALSE))\n##   A B     C\n## 1 1 A  TRUE\n## 2 2 B FALSE\n## 3 3 C FALSE\n\n\n\n\n1.4.2 Data manipulation\nA vector is a one dimensional data structure and we can access the values by using [ ]:\n\nvec = c(1, 2, 3, 4, 5)\nvec[1] # access first element\n## [1] 1\nvec[5] # access last element\n## [1] 5\n\nA data.frame is a two dimensional data structure. Let’s define a data.frame from two vectors:\n\ndf = data.frame(\n  x = c(2,2,2,3,2,2,1), #add column named x with 2 elements\n  y = c(4,5,5,4,5,3,5) #add a second column named y\n)\n#Let's see how this looks like:\ndf\n##   x y\n## 1 2 4\n## 2 2 5\n## 3 2 5\n## 4 3 4\n## 5 2 5\n## 6 2 3\n## 7 1 5\n\nAccess parts of the data.frame:\n\ndf[1,2] #get element in row 1, column 1\n## [1] 4\ndf[7,1] #get element in row 7, column 1\n## [1] 1\ndf[2,] #get row 2\n##   x y\n## 2 2 5\ndf[,2] #get column 2\n## [1] 4 5 5 4 5 3 5\n#or use the $ sign to access columns:\ndf$y\n## [1] 4 5 5 4 5 3 5\ndf[2:4,1:2] #get rows 2 to 4 and only columns 1 and 2\n##   x y\n## 2 2 5\n## 3 2 5\n## 4 3 4\n\nWe can also set filters:\n\ndf[df$x > 2,] # show only data where x is larger than 2\n##   x y\n## 4 3 4\ndf[df$y == 5,] #show only data where y equals 5\n##   x y\n## 2 2 5\n## 3 2 5\n## 5 2 5\n## 7 1 5\ndf[df$y == 5 & df$x == 1,] #show only data where y equals 5 AND x equals 1\n##   x y\n## 7 1 5\ndf[df$y == 5 | df$x == 3,] #show data where y equals 5 OR x equals 3\n##   x y\n## 2 2 5\n## 3 2 5\n## 4 3 4\n## 5 2 5\n## 7 1 5\n\n\n\n\n\n\n\nLogical operators\n\n\n\n\n\n\nLogical operators in R\n\n\nOperators\nMeaning\n\n\n\n\n<\nLess than\n\n\n<=\nLess than or equal to\n\n\n>\nMore than\n\n\n>=\nMore than or equal to\n\n\n==\nEqual to\n\n\n!=\nNot equal to\n\n\n!a\nNot a\n\n\na|b\na or b\n\n\na & b\na and b\n\n\nisTRUE(a)\nTest if a is true\n\n\n\n\n\n\nAdd an additional column with NA values:\n\ndf$NAs = NA #fills up a new column named NAs with all NA values\ndf\n##   x y NAs\n## 1 2 4  NA\n## 2 2 5  NA\n## 3 2 5  NA\n## 4 3 4  NA\n## 5 2 5  NA\n## 6 2 3  NA\n## 7 1 5  NA\n\n\n\n1.4.3 Data analysis workflow\nThis is a simple version of what you’re going to learn during this course:\n\nLet’s say we measured the size of individuals in two different treatment groups\n\ngroup1 = c(2,2,2,3,2,2,1.1)\ngroup2 = c(4,5,5,4,5,3,5.1) \n\nclass(group2)\n## [1] \"numeric\"\n\nDescriptive statistics and visualization\n\nmean(group1)\n## [1] 2.014286\nmean(group2)\n## [1] 4.442857\n\nboxplot(group1, group2)\n\n\n\n\nTesting for differences. Question: Is there a difference between group1 and group2?\n\nt.test(group1, group2)\n## \n##  Welch Two Sample t-test\n## \n## data:  group1 and group2\n## t = -6.6239, df = 10.628, p-value = 4.413e-05\n## alternative hypothesis: true difference in means is not equal to 0\n## 95 percent confidence interval:\n##  -3.238992 -1.618151\n## sample estimates:\n## mean of x mean of y \n##  2.014286  4.442857\n\nInterpretation of the results. Individuals in Group 2 were larger than those in group 1 (t test, t = -6.62, p < 0.0001)\n\nIn the course we will work a lot with datasets implemented in R or in R packages which can be accessed via their name:\n\ndat = airquality\nhead(dat)\n##   Ozone Solar.R Wind Temp Month Day\n## 1    41     190  7.4   67     5   1\n## 2    36     118  8.0   72     5   2\n## 3    12     149 12.6   74     5   3\n## 4    18     313 11.5   62     5   4\n## 5    NA      NA 14.3   56     5   5\n## 6    28      NA 14.9   66     5   6"
  },
  {
    "objectID": "1-GettingStarted.html#exercises",
    "href": "1-GettingStarted.html#exercises",
    "title": "1  Getting Started with R",
    "section": "1.5 Exercises",
    "text": "1.5 Exercises\nIn this exercise you will practice:\n\nto set up your working environment (project) in RStudio\nto write R scripts and execute code\nto access data in dataframes (the most important data class in R)\nto query (filter) dataframes\nto spot typical mistakes in R code\n\nPlease carefully follow the instructions for setting up your working environment and ask other participants or use the forum if you face any problems.\n\n1.5.1 Setting up the working environment in RStudio\nYour first task is to open RStudio and create a new project for the course.\n\nClick the ‘File’ button in the menu, then ‘New Project’ (or the second icon in the bar below the menu “Create a project”).\nClick “New Directory”.\nClick “New Project”.\nType in the name of the directory to store your project, e.g. “IntroStatsR”.\n“Browse” to the folder on your computer where you want to have your project created.\nClick the “Create Project” button.\n\n\n\n\n\n\nFor all exercises during this week, use this project! You can open it via the file system as follows (please try this out now):\n\n(Exit RStudio).\nNavigate to the directory where you created your project.\nDouble click on the “IntroStatsR.Rproj” file in that directory.\n\nYou should now be back to RStudio in your project.\nIn the directory of the R project, generate a folder “scripts” and a folder “data”. You can do this either in the file directory or in RStudio. For the latter:\n\nGo to the “Files” panel in R Studio (bottom right panel).\nClick the icon “New Folder” in the upper left corner.\nEnter the folder name.\nThe new folder is now visible in your project directory.\n\nThe idea is that you will create an R script for each exercise and save all these files in the scripts folder. You can do this as follows:\n\nClick the “File” button in the menu, then “New File” and “R Script” (or the first icon in the bar below the menu and then “R Script” in the dropdown menu).\nClick the “File” button in the menu, then “Save” (or the “Save” icon in the menu).\nNavigate to your scripts folder.\nEnter the file name, e.g. “Exercise_01.R”.\nSave the file.\n\n\n\n1.5.2 A few hints before you can start\nRemember the different ways of running code:\n\nclick the “Run” button in the top right corner of the top left panel (code editor) OR\nhit “Ctrl”+“Enter” (MAC: “Cmd”+“Return”)\n\nRStudio will then run\n\nthe code that is currently marked OR\nthe line of code where the text cursor currently is (simply click into that line)\n\nIf you face any problems with executing the code, check the following:\n\nall brackets closed?\ncapital letters instead of small letters?\ncomma is missing?\nif RStudio shows red attention signs (next to the code line number), take it seriously\ndo you see a “+” (instead of a “>”) in the console? stop executions with “esc” key and then try again.\n\nHave a look at the shortcuts by clicking “Tools” and than “Keybord Shortcuts Help”!!\n\n\n1.5.3 Getting an overview of a dataset\nWe work with the airquality dataset:\n\ndat = airquality\n\nCopy the code into your code editor and execute it.\nBefore working with a dataset, you should always get an overview of it. Helpful functions for this are:\n\nstr()\nView()\nhead() and tail()\n\nTry out these functions and provide answers to the following questions on elearning-extern (“01_Test for Exercise in R”):\n\n\n\n\n\n\nQuestion\n\n\n\n\nWhat is the most common atomic class in the airquality dataset?\nHow many rows does the dataset have?\nWhat is the last value in the column “Temp”?\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nWhat is the most common atomic class in the airquality dataset?\n\ninteger\nfunction str() helps to find this out\n\nHow many rows does the dataset have?\n\n153\nthis is easiest to see when using the function str(dat)\ndim(dat) or nrow(dat) give the same information\n\nWhat is the last value in the column “Temp”?\n\n68\ntail(dat) helps to find this out very fast\n\nTo see all this, run\n\ndat = airquality\nView(dat)\nstr(dat)\nhead(dat)\ntail(dat)\n\n\n\n\n\n\n1.5.4 Accessing rows and columns of a data frame\nYou have seen how you can use squared brackets [ ] and the dollar sign $ to extract parts of your data. Some people find this confusing, so let’s repeat the basic concepts:\n\nsquared brackets are used as follows: data[rowNumber, columnNumber]\nthe dollar sign helps to extract colums with their name (good for readability): data$columnName\nthis syntax can also be used to assign new columns, simply use a new column name and the assign operator: data$newColName <-)\n\nThe following lines of code assess parts of the data frame. Try out what they do and sort the code lines and their meaning on elearning-extern.\nHint: Some of the code lines actually do the same; chose the preferred way in these cases.\n\n\n\n\n\n\nQuestion\n\n\n\nWhich of the following commands\n\ndat[2, ]\ndat[, 2]\ndat[, 1]\ndat$Ozone\nnew = dat[, 3] + dat[, 4]\ndat$new = dat[, 3] + dat[, 4]\ndat$NAs = NA\nNA -> dat$NAs \n\nwill get you\n\nget the second row\nget column Ozone\ngenerate a new column with NA’s\ncalculate the sum of columns 3 and 4 and assign to a new column\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nget second row\n\ndat[2, ] is correct\ndat[, 2] gives the second column\n\nget column Ozone\n\ndat$Ozone is the best option\ndat[, 1] gives the same result, but is much harder to understand later on\n\ngenerate a new column with NA’s\n\ndat$NAs = NA is the best option\nNA -> dat$NAs does the same, but the preferred syntax in R is having the new variable on the left hand side (the arrow should face to the left not right)\n\ncalculate the sum of columns 3 and 4 and assign to a new column\n\ndat$new = dat[, 3] + dat[, 4] is correct\nnew = dat[, 3] + dat[, 4] creates a new object but not a new column in the existing data frame\n\n\n\n\n\n\n1.5.5 Filtering data\nTo use the data, you must also be able to filter it. For example, we may be interested in hot days in July and August only. Hot days are typically defined as days with a temperature equal or > 30°C (or 86°F as in the dataset here). Imagine, your colleague tried to query the data accordingly. She/he also found a mistake in each of the first 4 rows and wants to exclude these, but she/he is very new to R and made a few common errors in the following code:\n\n# Return only rows where the temperature is exactly is 86\ndat[dat$Temp = 86, ]\n\n# Return only rows where the temperature is equal or larger than 86\ndat[dat$Temp >= 86]\n\n# Exclude rows 1 through 4\ndat[-1:4, ]\n\n# Return only rows for the months 7 or 8\ndat[dat$Month == 7 | 8, ]\n\n\n\n\n\n\n\nQuestion\n\n\n\nCan you fix his/her mistakes? These hints may help you:\n\nrows or columns can be excluded, if the numbers are given as negative numbers\n== means “equals”\n& means “AND”\n“|” means “OR” (press “AltGr”+“<” to produce |, or “option”+“7” on MacOS)\nexecuting the erroneous code may help you to spot the problem\nrun parts of the code if you don’t understand what the code does\nthe last question is a bit trickier, no problem if you don’t find a solution\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThis is the corrected code:\n\n# Return only rows where the temperature is exactly is 86\ndat[dat$Temp == 86, ]\n\n# Return only rows where the temperature is equal or larger than 86\ndat[dat$Temp >= 86, ]\n\n# Exclude rows 1 through 4\ndat[-(1:4), ]\n\n# Return only rows for the months 7 or 8\ndat[dat$Month == 7 | dat$Month == 8, ]\ndat[dat$Month %in% 7:8, ] # alternative expression\n\n\n\n\n\n\n1.5.6 Last task - check if the EcoData package works for you\nDuring the course, we will use some datasets that we compiled in the \\(EcoData\\) package. You should have installed this package already(see instructions above). To check if this works, run\n\nlibrary(EcoData)\nsoep\n\nIf you see some data being displayed in your console, everything is fine."
  },
  {
    "objectID": "2-DescriptiveStatistics.html#exercises",
    "href": "2-DescriptiveStatistics.html#exercises",
    "title": "2  Plotting and describing data",
    "section": "2.1 Exercises",
    "text": "2.1 Exercises\nIn this exercise you will practice:\n\ncreating and plotting contingency tables for categorial variables (mosaicplot)\n\nplotting a numerical variable (histogram)\n\nplotting two numerical variables against each other (scatterplot)\ncalculating correlations\n\nTo perform this exercise use the help of the according functions. Also have a look at the examples at the bottom of the help page. You can obtain help for a specific function in several ways:\n\nselect the function in your script (e.g. double click it or simply place the cursor in the word) and press F1\n“?” + function name (e.g. ?hist) and execute\ngo to the “help” panel (below the environment) and search for the function\n\nLet’s get started!\n\n2.1.1 Contingency tables\nHere, we will have a look at the data set “Arthritis” from the “vcd” package. The study was conducted as a double-blind clinical trial investigating a new treatment against arthritis. The improvement was measured as a categorial variable with the possible outcomes “improved”, “some” or “none”.\nInstall and then load the package “vcd” and have a look at the data using the View() function. This will open a new tab next to your R script. To return to your script, close the new tab or click on your script.\n\nlibrary(vcd)\nView(Arthritis)\n\nAn important function for categorial data is table(). It produces a contingency table counting the occurences of the different categories of one variable or of each combination of the categories of two (or more) variables.\nWe are curious how many patients actually improved in the study and how this is influenced by the treatment. To show this graphically, we produced two plots (see below) using the following functions:\n\ntable()\nplot() and barplot()\n(str())\n(summary())\n\nYour task is now to reconstruct the two plots shown below by using these functions.\n\n\n\n\n\nHints for plot 1\nWhat kind of plot is shown here? How many variables are shown in the plot? Approach: First, create a new object consisting of the table of the variable of interest. Then use this object for plotting. Changing plot elements: Have a look at the help of the plotting-function to find out how to change the y- and x-axis labels. What do you notice on the y-axis? You can change the limits of the y-axis using “ylim = c(from, to)” as an argument in the plotting function.\n\n\n\n\n\nHints for plot 2\nWhat kind of plot can you see here? How many variables does it show? To plot this you need to create a contingency table with the variables of interest. Changing plot elements: You can name the variables in your contingency table (e.g. name = variable, othername = othervariable). The name you assign to your table will be used as the title in the plot.\nWhat do you think of the study now? Could you already draw conclusions from this plot? Provide your answer to the last question on elearning-extern (“02_Test for Exercise in R”).\n\n\n\n\n\n\nSolution\n\n\n\n\n\nPlot 1\n\nlibrary(vcd)\n\nImprovedcounts <- table(Arthritis$Improved)  # create a table which counts the occurences of the three categories in the \"Improved\" variable, the table is assigne to the name \"Improvedcounts\"\nbarplot(Improvedcounts,  # create a barplot of the table \"Improvedcounts\n        ylim = c(0,50),  # change the limits of your y axis: starting from zero to 50\n        xlab = \"Improved\",  # add the label \"Improved\" to your x axis\n        ylab = \"Frequency\")  # add the label \"Frequency\" to your y axis\n\n\n\n\nPlot 2\n\nRatios <- table(Improved = Arthritis$Improved, Treatment = Arthritis$Treatment)  # create a table with the assigned name \"ratios\", give the name \"Improved\" to the first variable which is the variable Improved from the data set Arthritis, give the name \"Treatment\" to the second variable which is the variable Treatment from the data set Arthritis\nplot(Ratios)  # create a plot of the table \"ratios\"\n\n\n\n\nTo view the tables with the names “Improvedcounts” and “ratios” you can simply execute their names:\n\nImprovedcounts\n## \n##   None   Some Marked \n##     42     14     28\nRatios\n##         Treatment\n## Improved Placebo Treated\n##   None        29      13\n##   Some         7       7\n##   Marked       7      21\n\nCould you already draw conclusions from this plot?\nNo, because this is only a descriptive plot. You can say that a large proportion of the patients that got a placebo treatment did not improve while a large proportion of the patients that got the new treatment improved markedly. However, this could also be the result of random variation and sampling. We need inferential statistics to make conclusions about the effectiveness of the treatment.\n\n\n\n\n\n2.1.2 Histogram\nNow let’s have a look at the “birdabundance” dataset, which is in the “EcoData” package. This is not stored at CRAN (the official platform for R packages, but at github where we host our own code collections). If you haven’t done this yet, use the code below to install the package (note that you also need the “devtools” package to do this. Again, to load it and make the data set accessible, execute the function library(EcoData). To view the data set you can use the View() function again.\nYou can also get more explanations on the data set via the help.\n\ninstall.packages(\"devtools\")\nlibrary(devtools)\ndevtools::install_github(repo = \"TheoreticalEcology/EcoData\", dependencies = T, build_vignettes = T)\nlibrary(EcoData)\nView(birdabundance)\n\nThe dataset has been assessed by scientists in Australia who counted birds in forest fragments and looked for drivers that influence these bird abundances, e.g. the size of a forest fragment and the distance to the next fragment. We want to see how these distances vary. A histogram is the standard figure to depict one numerical variable, such as for example distance measurements.\nYour task is now to reconstruct the following histogram including the labels, colors and lines using the functions:\n\nhist() to create a histogram\nabline() to add (vertical) lines to your histogram\n\nThink about what the histogram tells you about the distances between each forest fragment and the next forest fragment. What do the red and purple lines represent? Which site was the furthest away from forest fragments? Give your answer on elearning-extern.\n\n\n\n\n\nHints for plotting\nChange the color (look at the help to see how). You can also try other colors, e.g. your favorite color (you can find all available colors with the function colors()). Change the bar widths (breaks). Play around to see how they change. When changing the bar widths, what do you notice on the y-axis? You can change the y-axis limits using “ylim” (see examples for hist(), second last line). Change the title and the x-axis name of your histogram using the arguments “main” and “xlab”.\nTo add the lines, try the abline() function with the argument “v = 90” and look what happens. To remove the line, you have to execute the code producing your histogram again. Remember that abline() is a low level plotting function, which means it only adds an element to an existing plot! Instead of calculating the depicted values with a function and then pasting the values into your abline function, you can also directly use the function in abline().\nSee an example here:\n\nhist(airquality$Temp)\nabline(v = 90, col = \"blue\")\nabline(v = median(airquality$Temp), col = \"red\")\n\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nYou can plot the histogram like this:\n\nhist(birdabundance$DIST,  # plot a histogram of the varriable distance from the data set birdabundance\n     breaks = 20,  # change bar widths, here we make them smaller\n     col = \"blue\",  # change color to blue\n     ylim = c(0,20),  # change the range of the y axis to from 0 to 20\n     main = \"Distance distribution\",  # change title of the plot\n     xlab = \"Distance to the next forest fragment\")  # change x axis name\nabline(v = mean(birdabundance$DIST), col = \"red\")  # add a vertical line with an x value equal to the mean of the variable distance\nabline(v = median(birdabundance$DIST), col = \"purple\")  # add a vertical line with an x value equal to the median of the variable distance\n\n\n\n\nWhat do the red and purple lines represent?\nThe red line represents the mean distance between forest fragments, while the purple line represents the median.\nWhich site was the furthest away from forest fragments?\n\n# Extract the line in which the variable DIST takes its maximum\nbirdabundance[which.max(birdabundance$DIST),]\n##    Site ABUND AREA DIST LDIST YR.ISOL GRAZE ALT\n## 48   48  39.6   49 1427  1557    1972     1 180\n\nThe site number 48 was the furthest away.\n\n\n\n\n\n2.1.3 Scatterplot\nAs you’ve learned by now, plot() can create different types of plots depending on the type of the input data. It creates a scatterplot when plotting two numerical variables. Now we are interested to see how the abundance of birds is affected by the distance to the next forest fragment, and if there is another variable that is important for this relationship (visualized here by the color of the points).\nAgain, your task is to reconstruct the following plot using the following functions:\n\nplot()\n(str())\n(summary())\n\nWhat do you notice about the distribution of the colors along bird abundance?\nWhat is the mean bird abundance per color?\n\n\n\n\n\nHints for plotting:\nWhat is plotted on the x-axis, what on the y-axis?\nThere are two different ways to write the plot function. One is to stick with the “Usage” in the help of the plot function (giving coordinates along the x-axis as the first attribute and those along the y-axis as the second attribute). The other way is to write the relationship between x and y as a formula that is: “y~x, data = dataset” Use google to find out how you can change the point shapes in your plot.\nLook at the dataset to find out which variable is indicated by the color of the points in the plot. Hint: It is a variable indicating 5 intensity levels. To change the color, include the attribute “col” in your plot function and set it equal to the variable.\nTo get a color gradient you can create a function with the following code. Apply it before producing your plot and use the created function rbPal() as the color in the plot.\n\n# Palettes can be created with a function for the grDevices package\ninstall.packages(\"grDevices\")\nlibrary(grDevices)\n\n# Create a function to generate a continuous color palette from red to blue\nrbPal <- colorRampPalette(c('red','blue'))\n\n# Example for color in a plot\nplot(Ozone ~ Solar.R, data = airquality, \n     col = rbPal(12)[Month]) # you can use any number, here it's 12 because we have 12 months\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nYou can either create a scatterplot of two numerical variables like this:\n\n#Create a function to generate a continuous color palette from red to blue\nrbPal <- colorRampPalette(c('red','blue')) # rpPal for red to blue palette\n\nplot(birdabundance$DIST, birdabundance$ABUND,  # create a plot of the variables DIST against ABUND from the data set birdabundance\n     ylab = \"Distance (m)\",  # add the label \"Distance\" to the y axis\n     xlab = \"Bird abundance\",  # add the label \"Bird abundance\" to the x axis\n     col = rbPal(5)[birdabundance$GRAZE],  # color the data points according to their category in the variable GRAZE from the data set birdabundance\n     pch = 17) # change the point shape\n\n\n\n\nOr like this:\n\nplot(ABUND ~ DIST, data = birdabundance,  # create a plot of the variables DIST against ABUND from the data set birdabundance\n     xlab = \"Distance (m)\",  # add the label \"Distance\" to the x axis\n     ylab = \"Bird abundance\",  # add the label \"Bird abundance\" to the y axis\n     col = rbPal(5)[GRAZE],  # color the data points according to their category in the variable GRAZE as a gradient\n     pch = 17) # change the point shape\n\n\n\n\nThe advantage of the second version is that it uses the structure of “response variable (y) explained by (~) explanatory variable (x)”. Also, you tell the plot function which data set to use once and it will automatically draw the variables from there, while in the first version you name the data set and the respective variable each time (even for the color).\nWhat do you notice about the distribution of the colors along bird abundance?\nYou can see that the blue data points are only at the low abundances, whereas the red data points are rather at the higher abundances. Purple data points are throughout all abundances. There thus seems to be a correlation between the grazing classes and bird abundances.\nWhat is the mean bird abundance per color / level of grazing intensity?\n\n# Option 1: Using tidyverse / dplyr as shown at the end of section 2.0.1 Summary statistics:\nlibrary(dplyr)\nbird_grouped <- birdabundance %>% # define dataset to be summarized\n  group_by(GRAZE) %>% # define grouping factor\n  summarise(mean.abund = mean(ABUND)) # summarize by taking the mean of abundance\n\n# Option 2: Using base R and formula notation:\nbird_grouped <- aggregate(ABUND~GRAZE, data = birdabundance, FUN = mean)\n\nbird_grouped\n##   GRAZE     ABUND\n## 1     1 28.623077\n## 2     2 21.950000\n## 3     3 21.286667\n## 4     4 20.571429\n## 5     5  6.292308\n\n\n\n\n\n\n2.1.4 Correlation\nIn the previous plot on bird abundance you’ve seen three variables. Now we want to know, how they are correlated with each other. Remember that we can use the function cor() to calculate correlations. Which of the following correlation coefficients (Pearson) belongs to which variable pair? Can you see these correlations in your previous plot?\n\n## [1] 0.2361125\n## [1] -0.6825114\n## [1] -0.2558418\n\nGive your answer to the second last question on elearning-extern. Think about the meaning of the correlation values (positive/negative, strength). Is it what you would have expected by looking at the plot?\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ncor(birdabundance$ABUND, birdabundance$DIST)\n## [1] 0.2361125\ncor(birdabundance$ABUND, birdabundance$GRAZE)\n## [1] -0.6825114\ncor(birdabundance$GRAZE, birdabundance$DIST)\n## [1] -0.2558418\n\nThe first correlation (abundance to distance) tells us that there is a small positive correlation between the two variables, but it does not tell us whether it is significant or not. We will properly test such relationships later in the course. In the scatter plot we have seen this weak positive correlation already. The second correlation (abundance to grazing) tells us that there is a stronger negative correlation between abundance and grazing. We have already seen a pattern of the color of the data points along bird abundances (red towards higher, blue towards lower abundances). The third correlation (grazing to distance) tells us that there is a small negative correlation between the two variables. However, the color pattern along distance is not as obvious as for abundance."
  },
  {
    "objectID": "3-HypothesisTesting.html#a-recipe-for-hypothesis-testing",
    "href": "3-HypothesisTesting.html#a-recipe-for-hypothesis-testing",
    "title": "3  Hypothesis Tests",
    "section": "3.1 A recipe for hypothesis testing",
    "text": "3.1 A recipe for hypothesis testing\nAim: We want to know if there is a difference between the control and the treatment\n\nWe introduce a Null hypothesis H0 (e.g. no effect, no difference between control and treatment)\nWe invent a test statistic\nWe calculate the expected distribution of our test statistic given H0 (this is from our data-generating model)\nWe calculate the p-value = probability of getting observed test statistic or more extreme given that H0 is true (there is no effect): \\(p-value = P(d\\ge D_{obs} | H_0)\\)\n\n\n\n\n\n\n\nInterpretation of the p-value\n\n\n\n\n\np-values make a statement on the probability of the data or more extreme values given H0 (no effect exists), but not on the probability of H0 (no effect) and not on the size of the effect or on the probability of an effect!\n\n\n\nExample:\nImagine we do an experiment with two groups, one treatment and one control group. Test outcomes are binary, e.g. whether individuals are cured.\n\nWe need a test statistic. For example: number cured of total patients: treat/(treat+control)\nWe need the distribution of this test statistic under the null.\n\nLet’s create a true world without effect:\n\nset.seed(123)\n# Let's create a true world without effect:\nPperGroup = 50 # number of replicates (e.g., persons per treatment group)\npC = 0.5 #probability of being cured in control group\npT = 0.5 #probability of being cured in treatment group; = same because we want to use these to get the distribution of the test statistic we define below when H0 is true (no effect)\n\n# Let's draw a sample from this world without effect\ncontrol = rbinom(n = 1, size = PperGroup, prob = pC)\ntreat = rbinom(n = 1, size = PperGroup, prob = pT)\n#calculate the test statistic: \ntreat/(treat+control)\n## [1] 0.5490196\n#and plot\nbarplot(c(control, treat), ylim = c(0, 50))\n\n\n\n\n\nNow, let’s do this very often to get the distribution under H0\n\n\ntestStatistic = rep(NA, 100000) \nfor (i in 1:100000) {\n  control = rbinom(n = 1, size = PperGroup, prob = pC)\n  treat = rbinom(n = 1, size = PperGroup, prob = pT)\n  testStatistic[i] = control/(treat+control) # test statistic \n}\nhist(testStatistic, breaks = 50)\n\n\n\n\n\nWe now have our test statistic + the frequency distribution of our statistic if the H0 = true. Now we make an experiment: Assume that we observed the following data: C = 30, T = 23.\n\n\nhist(testStatistic, breaks = 50)\ntestStatisticData = 30/(30+23)\nabline(v = testStatisticData, col = \"red\")\n\n\n\n\nmean(testStatistic > testStatisticData)\n## [1] 0.09317\n# compare each value in our testStatistic distribution with\n# the observed value and calculate proportion of TRUE values \n# (where testStatistic > testStatisticData)\n\nBut we know actually that the test statistic follows a Chi2 distribution. So to get correct p-values we can use the prop.test for this test statistic:\n\nprop.test(c(30, 23), c(PperGroup, PperGroup))\n## \n##  2-sample test for equality of proportions with continuity correction\n## \n## data:  c(30, 23) out of c(PperGroup, PperGroup)\n## X-squared = 1.4452, df = 1, p-value = 0.2293\n## alternative hypothesis: two.sided\n## 95 percent confidence interval:\n##  -0.0737095  0.3537095\n## sample estimates:\n## prop 1 prop 2 \n##   0.60   0.46\n# other test statistic with known distribution\n# Pearson's chi-squared test statistic\n# no need to simulate\n\nWe pass the data to the function which first calculates the test statistic and then calculates the p-value using the Chi2 distribution."
  },
  {
    "objectID": "3-HypothesisTesting.html#t-test",
    "href": "3-HypothesisTesting.html#t-test",
    "title": "3  Hypothesis Tests",
    "section": "3.2 T-test",
    "text": "3.2 T-test\nOriginally developed by Wiliam Sealy Gosset (1876-1937) who has worked in the Guinness brewery. He wanted to measure which ingredients result in a better beer. The aim was to compare two beer recipes and decide whether one of the recipes was better (e.g. to test if it results in more alcohol). He published under the pseudonym ‘Student’ because the company considered his statistical methods as a commercial secret.\n\n\n\n\n\n\nT-test assumptions\n\n\n\n\nData in both groups is normally distributed\nH0 : the means of both groups are equal\n\n\n\nThe idea is that we have two normal distributions (e.g. alcohol distributions):\n\n\nCode\nset.seed(1)\nA = rnorm(100, mean = -.3)\nB = rnorm(100, mean = .3)\nplot(density(A), col = \"red\", xlim = c(-2, 2), ylim = c(0, 0.6))\nlines(density(B))\nabline(v = mean(A), col = \"red\")\nabline(v = mean(B))\n\n\n\n\n\nAnd our goals is now to test if the difference between the two means of the variables is statistically significant or not.\nProcedure:\n\nCalculate variances and means of both variables\n\nA_m = mean(A)\nB_m = mean(B)\nA_v = var(A)\nB_v = var(B)\n\nCalculate t-statistic (difference between means / (Standard deviation/sample size)\n\nt_statistic = (A_m - B_m) / sqrt( A_v  / length(A) + B_v / length(B))\nt_statistic\n## [1] -3.452108\n\nCompare observed t with t distribution under H0 (which we can do by using the CDF function of the t-distribution:\n\npt( t_statistic,  # test statistic\n   df = length(A)+length(B)-2, # degrees of freedom, roughly = n_obs - n_parameters\n   lower.tail = TRUE\n  )*2\n## [1] 0.0006799933\n\n\n\n\n\n\n\n\nOne-sided or two-sided\n\n\n\nIf we do NOT know if the dataset from one group is larger or smaller than the other, we must use two-sided tests (that’s why we multiply the p-values with 2). Only if we are sure that the effect MUST be positive / negative, we can test for greater / less. Decide BEFORE you look at the data!\n\n\nLet’s compare it to the output of the t.test function which does everything for us, we only need to pass the data to the function:\n\nt.test(A, B, var.equal = TRUE)\n## \n##  Two Sample t-test\n## \n## data:  A and B\n## t = -3.4521, df = 198, p-value = 0.00068\n## alternative hypothesis: true difference in means is not equal to 0\n## 95 percent confidence interval:\n##  -0.7122549 -0.1943542\n## sample estimates:\n##  mean of x  mean of y \n## -0.1911126  0.2621919\n\nUsually we also have to test for normality of our data, which we can do with another test.\nExample airquality\n\n# with real data\nhead(PlantGrowth)\n##   weight group\n## 1   4.17  ctrl\n## 2   5.58  ctrl\n## 3   5.18  ctrl\n## 4   6.11  ctrl\n## 5   4.50  ctrl\n## 6   4.61  ctrl\nboxplot(weight ~ group, data = PlantGrowth)\n\n\n\n\nctrl = PlantGrowth$weight[PlantGrowth$group == \"ctrl\"]\ntrt1 = PlantGrowth$weight[PlantGrowth$group == \"trt1\"]\n\n# attention: t test assumes normal dirstribution of measurements in both groups!\n# test normality before doing the t test:\nshapiro.test(ctrl)\n## \n##  Shapiro-Wilk normality test\n## \n## data:  ctrl\n## W = 0.95668, p-value = 0.7475\nshapiro.test(trt1)\n## \n##  Shapiro-Wilk normality test\n## \n## data:  trt1\n## W = 0.93041, p-value = 0.4519\n\n\nt.test(ctrl, trt1)\n## \n##  Welch Two Sample t-test\n## \n## data:  ctrl and trt1\n## t = 1.1913, df = 16.524, p-value = 0.2504\n## alternative hypothesis: true difference in means is not equal to 0\n## 95 percent confidence interval:\n##  -0.2875162  1.0295162\n## sample estimates:\n## mean of x mean of y \n##     5.032     4.661\n# note that this is a \"Welch\" t-test\n# we will have a look at the differences among t-tests in the next large exercise\n\n# What is H0? equal means\n# What is the result? test is not significant, H0 is not rejected\n# Explain the different values in the output!\n\n\n\n\n\n\n\nShapiro - Test for normality\n\n\n\nIf you have a small sample size, the shapiro.test will always be non-significant (i.e. not significantly different from a normal distribution)! This is because small sample size leads to low power for rejecting H0 of normal distribution"
  },
  {
    "objectID": "3-HypothesisTesting.html#type-i-error-rate",
    "href": "3-HypothesisTesting.html#type-i-error-rate",
    "title": "3  Hypothesis Tests",
    "section": "3.3 Type I error rate",
    "text": "3.3 Type I error rate\nLet’s start with a small simulation example:\n\nresults = replicate(1000, {\n  A = rnorm(100, mean = 0.0)\n  B = rnorm(100, mean = 0.0)\n  t.test(A, B)$p.value\n})\nhist(results)\n\n\n\n\nWhat’s happening here? We have no effect in our simulation but there are many p-values lower than \\(\\alpha = 0.05\\):\n\nmean(results < 0.05)\n## [1] 0.043\n\nSo in 0.043 of our experiments we would reject H0 even when there is no effect at all! This is called the type I error rate. Those are false positives.\n\n\n\n\n\n\nType I error rate and multiple testing\n\n\n\n\n\nIf there is no effect, the probability of having a positive test result is equal to the significance level \\(\\alpha\\). If you test 20 things that don’t have an effect, you will have one significant result on average when using a significance level of 0.05. If multiple tests are done, a correction for multiple testing should be used.\nThis problem is called multiple testing\n\ne.g.: if you try 20 different analyses (Null hypotheses), on average one of them will be significant.\ne.g.: if you test 1000 different genes for their association with cancer, and in reality, none of them is related to cancer, 50 out of the tests will still be significant.\nIf multiple tests are done, a correction for multiple testing should be used\nincreases the p-values for each test in a way that the overall alpha level is 0.05\n\n\n# conduct a t-test for each of the treatment combinations\n# save each test as a new object (test 1 to 3)\ncontrol = PlantGrowth$weight[PlantGrowth$group == \"ctrl\"]\ntrt1 = PlantGrowth$weight[PlantGrowth$group == \"trt1\"]\ntrt2 = PlantGrowth$weight[PlantGrowth$group == \"trt2\"]\n\ntest1 = t.test(control, trt1)\ntest2 = t.test(control, trt2)\ntest3 = t.test(trt1, trt2)\n\nc(test1$p.value, test2$p.value, test3$p.value)\n## [1] 0.250382509 0.047899256 0.009298405\n\n# now adjust these values\np.adjust(c(test1$p.value, test2$p.value, test3$p.value)) # standard is holm, average conservative\n## [1] 0.25038251 0.09579851 0.02789521\np.adjust(c(test1$p.value, test2$p.value, test3$p.value), method = \"bonferroni\") # conservative\n## [1] 0.75114753 0.14369777 0.02789521\np.adjust(c(test1$p.value, test2$p.value, test3$p.value), method = \"BH\") # least conservative\n## [1] 0.25038251 0.07184888 0.02789521\n# for details on the methods see help\n\n\n\n\nIf multiple testing is a problem and if we want to avoid false positives (type I errors), why don’t we use a smaller alpha level? Because if would increase the type II error rate"
  },
  {
    "objectID": "3-HypothesisTesting.html#type-ii-error-rate",
    "href": "3-HypothesisTesting.html#type-ii-error-rate",
    "title": "3  Hypothesis Tests",
    "section": "3.4 Type II error rate",
    "text": "3.4 Type II error rate\nIt can also happen the other way around:\n\nresults = replicate(1000, {\n  A = rnorm(100, mean = 0.0)\n  B = rnorm(100, mean = 0.2) # effect is there\n  t.test(A, B)$p.value\n})\nhist(results)\n\n\n\n\n\nmean(results < 0.05)\n## [1] 0.292\n\nNo we wouldn’t reject the H0 in 0.708% of our experiments. This is the type II error rate (false negatives).\nThe type II error rate (\\(\\beta\\)) is affected by\n\nsample size \\(\\uparrow\\) , decreases \\(\\beta\\)\ntrue effect size \\(\\uparrow\\), decreases \\(\\beta\\)\n\\(\\alpha\\) \\(\\uparrow\\), decreases \\(\\beta\\)\nvariability (variance) \\(\\uparrow\\), increases \\(\\beta\\)\n\nAfter the experiment, the only parameter we could change would be the significance level \\(\\alpha\\), but increasing it would result in too high Type I error rates."
  },
  {
    "objectID": "3-HypothesisTesting.html#statistical-power",
    "href": "3-HypothesisTesting.html#statistical-power",
    "title": "3  Hypothesis Tests",
    "section": "3.5 Statistical power",
    "text": "3.5 Statistical power\nWe can reduce \\(\\alpha\\) and we will get fewer type I errors (false positives), but type II errors (false negatives) will increase. So what can we do with this in practice?\n1- \\(\\beta\\) is the so called statistical power which is the rate at which a test is significant if the effect truly exists. Power increases with stronger effect, smaller variability, (larger \\(\\alpha\\) ), and more data (sample size). So, collect more data? How much data do we need?\nBefore the experiment, you can estimate the effect size and the variability. Together with alpha (known), you can calculate the power depending on the sample size:\n\n\nCode\nresults = \n  sapply(seq(10, 500, by = 20), function(n) {\n    results = replicate(100, {\n      A = rnorm(n, mean = 0.0)\n      B = rnorm(n, mean = 0.2) # effect is there\n      t.test(A, B)$p.value\n    })\n    power = 1 - mean(results > 0.05)\n    return(power)\n  })\nplot(seq(10, 500, by = 20), results, xlab = \"Sample size\", ylab = \"Power\", main = \"\")\n\n\n\n\n\nWe call that a power analysis and there’s a function in R to do that:\n\npower.t.test(n = 10, delta = 1, sd = 1, type = \"one.sample\")\n## \n##      One-sample t test power calculation \n## \n##               n = 10\n##           delta = 1\n##              sd = 1\n##       sig.level = 0.05\n##           power = 0.8030962\n##     alternative = two.sided\n\n# Power increases with sample size (effect size constant, sd constant):\npow <- function(n) power.t.test(n, delta = 1, sd = 1, type = \"one.sample\")$power\nplot(1:20, sapply(1:20, pow), xlab = \"Sample size\", ylab = \"Power\", pch = 20)\n\n\n\n\n# Power increases with effect size\npow <- function(d) power.t.test(n = 20, delta = d, sd = 1, \n                                type = \"one.sample\")$power\nplot(seq(0,1,0.05), sapply(seq(0,1,0.05), pow), xlab = \"Effect size\", \n     ylab = \"Power\", pch = 20)\n\n\n\n\n# Power decreases with increasing standard deviation (or variance):\npow <- function(s) power.t.test(n = 20, delta = 1, sd = s, \n                                type = \"one.sample\")$power\nplot(seq(0.5,1.5,0.05), sapply(seq(0.5,1.5,0.05), pow), \n     xlab = \"Standard deviation\", ylab = \"Power\", pch = 20)"
  },
  {
    "objectID": "3-HypothesisTesting.html#false-discovery-rate",
    "href": "3-HypothesisTesting.html#false-discovery-rate",
    "title": "3  Hypothesis Tests",
    "section": "3.6 False discovery rate",
    "text": "3.6 False discovery rate\nYou may have realized that if we do an experiment with a (weak) effect, we can get a significant result because of the effect but also significant results because of the Type I error rate. How to distinguish between those two? How can we decide whether a significant result is a false positive? This error rate is called the false discovery rate and to lower it we need to increase the power:\n\\[\nFDR = \\frac{p(H_0)\\cdot\\alpha}{p(H_0)\\cdot\\alpha + p(!H_0)\\cdot(1-\\beta)}\n\\]\n\\(p(H_0)\\) = probability of H0 (no effect); \\(p(!H_0)\\) = probability of not H0 (effect exists). Both are unknown and the only parameters we can influence are \\(\\alpha\\) and \\(\\beta\\). But decreasing \\(\\alpha\\) leads to too high false negatives, so \\(\\beta\\) is left."
  },
  {
    "objectID": "3-HypothesisTesting.html#statistical-tests",
    "href": "3-HypothesisTesting.html#statistical-tests",
    "title": "3  Hypothesis Tests",
    "section": "3.7 Statistical tests",
    "text": "3.7 Statistical tests\nThe following three sections provide an overview over the most important hypothesis tests, a guideline to select an appropriate test (see decision tree) and the necessary code to apply these tests in R. It is not necessary to read and understand every detail. These explanations are also meant as an advice if you want to select an appropriate hypothesis test after the course. Note that some of the examples use simulated data instead of real observation (all functions that start with r=random, e.g. rnorm() or runif()). Simulated data is useful, because then we know the true distribution and its true mean.\nIn the last section at the end of this file, you find exercises that you should solve using the explanations above. It may be helpful to use the table of content and/or the search option to find the respective example in the explanations."
  },
  {
    "objectID": "3-HypothesisTesting.html#comparison-of-mean-of-two-or-more-groups",
    "href": "3-HypothesisTesting.html#comparison-of-mean-of-two-or-more-groups",
    "title": "3  Hypothesis Tests",
    "section": "3.8 Comparison of mean of two or more groups",
    "text": "3.8 Comparison of mean of two or more groups\nMany tests aim at showing that variables are significantly different between groups, i.e. have different means/medians. In all these tests, H0 is that there is no difference between the groups. The following decision tree helps to select the appropriate test.\n\nRemark 1: Tests for 2 groups also work for one group only. Then they test whether the mean is equal to 0.\nRemark 2: Paired / unpaired: this means that observations in the groups are linked to each other. An example for unpaired data is a typical experiment with 10 observations in the control group and 10 observations in the treatment group. An example for paired data is when the same individuals were exposed to the treatment and to the control. The observations of each individual would belong together (pairs).\nRemark 3: Parametric: assumption of normal distribution. Non-parametric = no assumption for the distribution.\nRemark 4: Blue text: If a test for more than two groups is significant, post-hoc tests are carried out in a second step. These check all possible comparisons of groups for significant differences by adjusting p-values for multiple testing.\n\n3.8.1 Tests for 2 groups\n\n3.8.1.1 t-Test\nThe t-test can draw conclusions about the mean(s) of 1 or 2 normally-distributed groups.\n\n## Classical example: Student's sleep data\nplot(extra ~ group, data = sleep)\n\n\n\n\nBe aware: The line in the box plot does not show the mean but the median.\n\n## Formula interface\nt.test(extra ~ group, data = sleep)\n## \n##  Welch Two Sample t-test\n## \n## data:  extra by group\n## t = -1.8608, df = 17.776, p-value = 0.07939\n## alternative hypothesis: true difference in means between group 1 and group 2 is not equal to 0\n## 95 percent confidence interval:\n##  -3.3654832  0.2054832\n## sample estimates:\n## mean in group 1 mean in group 2 \n##            0.75            2.33\n\nThis output tells us, that the difference in means between the 2 groups is not significant(p-value ≥ 0.05, specifically: p-value = 0.07939), provided that our significance level is 0.05.\nThe underlying Null-hypothesis is that the true difference in means is equal to 0. In the last two lines of the output you can see the means of the respective groups. Even though the means seem to be quite different, the difference is not significant, this could be due to the small sample size of only 10 students per group.\nLet’s look at different settings of the t-test:\n\n3.8.1.1.1 t-test, H0: one group, mean = 0\nThe Null-hypothesis here is that the mean of the observed group is equal to 0.\n\nx = rnorm(20, mean = 2)\nt.test(x)\n## \n##  One Sample t-test\n## \n## data:  x\n## t = 11.224, df = 19, p-value = 7.944e-10\n## alternative hypothesis: true mean is not equal to 0\n## 95 percent confidence interval:\n##  1.786080 2.604892\n## sample estimates:\n## mean of x \n##  2.195486\n\np-value < 0.05 means we can reject the Null-hypothesis, i.e. the mean of the observed group is significantly different from 0.\n\n\n3.8.1.1.2 t-test, H0: two groups, equal means, equal variances\nThe Null-hypothesis here is that the two observed groups have the same mean and the same variance (specified by the argument var.equal = T).\n\nx1 = rnorm(20, mean = 2)\nx2 = rnorm(20, mean = 3)\nt.test(x1,x2, var.equal = T)\n## \n##  Two Sample t-test\n## \n## data:  x1 and x2\n## t = -3.1484, df = 38, p-value = 0.00319\n## alternative hypothesis: true difference in means is not equal to 0\n## 95 percent confidence interval:\n##  -1.6632472 -0.3614177\n## sample estimates:\n## mean of x mean of y \n##  2.074797  3.087130\n\n\n\n3.8.1.1.3 t-test, H0: two groups, equal means, variable variance\nThe Null-hypothesis here is that the two observed groups have the same mean and variable variances (the default setting of the argument var.equal = F).\n\nx1 = rnorm(20, mean = 2, sd = 1)\nx2 = rnorm(20, mean = 3, sd = 2)\nt.test(x1,x2, var.equal = FALSE)\n## \n##  Welch Two Sample t-test\n## \n## data:  x1 and x2\n## t = -2.1475, df = 30.4, p-value = 0.03984\n## alternative hypothesis: true difference in means is not equal to 0\n## 95 percent confidence interval:\n##  -1.9210146 -0.0487896\n## sample estimates:\n## mean of x mean of y \n##  1.930744  2.915646\n\nWhich is actually a Welch t-test and which is the default in R! (The smaller the samples, the more likely it is that the variances differ! So it is an conservative assumption to assume that the variances are unequal)\n\n\n3.8.1.1.4 t-test, H0: two groups, paired, equal means, variance can be different\nThe Null-hypothesis here is that the two groups are paired observations (e.g. group 1 before treatment and group 2 after treatment) have the same mean. Variances doesn’t matter here (but the variables must be still normally distributed). We can ignore the var.equal`argument here:\n\nx1 = rnorm(20, mean = 2)\nx2 = rnorm(20, mean = 3)\nt.test(x1,x2, paired = TRUE)\n## \n##  Paired t-test\n## \n## data:  x1 and x2\n## t = -5.5876, df = 19, p-value = 2.177e-05\n## alternative hypothesis: true mean difference is not equal to 0\n## 95 percent confidence interval:\n##  -2.222268 -1.011105\n## sample estimates:\n## mean difference \n##       -1.616686\n\nIf the variables are not normally distributed we have to use non-parametric tests which don’t assume a certain assumption regarding the distribution of the variables (=nonparametric). But the test statistic still follows a certain distribution!\n\n\n\n3.8.1.2 Wilcoxon Rank Sum and Mann-Whitney U Test\nIn R, there is only one function for both tests together: wilcox.test(). The Wilcoxon rank sum test with (paired = F) is classically called Mann-Whitney U test.\n\n3.8.1.2.1 Unpaired: Mann-Whitney U Test\n\nx1 = rnorm(20, mean = 2)\nx2 = rlnorm(20, mean = 3)\n\nwilcox.test(x1, x2)\n## \n##  Wilcoxon rank sum exact test\n## \n## data:  x1 and x2\n## W = 18, p-value = 2.317e-08\n## alternative hypothesis: true location shift is not equal to 0\n\n\n\n3.8.1.2.2 Paired: Wilcoxon signed rank test\n\nx1 = rnorm(20, mean = 2)\nx2 = rlnorm(20, mean = 3)\n\nwilcox.test(x1, x2, paired = T)\n## \n##  Wilcoxon signed rank exact test\n## \n## data:  x1 and x2\n## V = 0, p-value = 1.907e-06\n## alternative hypothesis: true location shift is not equal to 0\n\n\n\n\n\n3.8.2 Tests for > 2 groups\n\n3.8.2.1 Anova, unpaired\nH0 >2 groups, normal distribution, equal variance, equal means, unpaired\n\nx = aov(weight ~ group, data = PlantGrowth)\nsummary(x)\n##             Df Sum Sq Mean Sq F value Pr(>F)  \n## group        2  3.766  1.8832   4.846 0.0159 *\n## Residuals   27 10.492  0.3886                 \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nAn ANOVA only tests, if there is a difference, but not between which groups. To perform pairwise comparisons, you can use post-hoc tests. Common for ANOVA results is\n\nTukeyHSD(x)\n##   Tukey multiple comparisons of means\n##     95% family-wise confidence level\n## \n## Fit: aov(formula = weight ~ group, data = PlantGrowth)\n## \n## $group\n##             diff        lwr       upr     p adj\n## trt1-ctrl -0.371 -1.0622161 0.3202161 0.3908711\n## trt2-ctrl  0.494 -0.1972161 1.1852161 0.1979960\n## trt2-trt1  0.865  0.1737839 1.5562161 0.0120064\n\nAlternatively, you can also perform several tests each comparing two groups and then correct for multiple testing. This is what we did before.\nPairwise comparisons are often visualized using different letters to significantly different groups:\n\n# install.packages(\"multcomp\")\nlibrary(multcomp)\ntuk = glht(x, linfct = mcp(group = \"Tukey\")) #performs Tukey pairwise comparisons\ntuc.cld = cld(tuk) # assigns different letters to significantly different groups\n\nold.par = par(mai = c(1, 1, 1.25, 1), no.readonly = T)\nplot(tuc.cld) # draws boxplot + letters from cld function\n\n\n\npar(old.par)\n\n\n\n3.8.2.2 Anova, paired\naov is not good in doing repeated = paired ANOVA. In simple cases, you can just subtract the paired groups. In general, you should use so-called mixed models!\n\n\n3.8.2.3 Kruskal-Wallis, unpaired non-parametric\nNon-parametric test for differences in the mean of >2 groups, unpaired\n\nboxplot(Ozone ~ Month, data = airquality)\n\n\n\nkruskal.test(Ozone ~ Month, data = airquality)\n## \n##  Kruskal-Wallis rank sum test\n## \n## data:  Ozone by Month\n## Kruskal-Wallis chi-squared = 29.267, df = 4, p-value = 6.901e-06\n\n\n\n3.8.2.4 Friedmann Test, paired non-parametric\nNon-parametric test for differences in the mean of >2 groups, paired.\n\nwb <- aggregate(warpbreaks$breaks,\n                by = list(w = warpbreaks$wool,\n                          t = warpbreaks$tension),\n                FUN = mean)\n#wb\nfriedman.test(wb$x, wb$w, wb$t)\n## \n##  Friedman rank sum test\n## \n## data:  wb$x, wb$w and wb$t\n## Friedman chi-squared = 0.33333, df = 1, p-value = 0.5637\n# Alternative: friedman.test(x ~ w | t, data = wb)\n# Note that x is the response, w is the group, and t are the blocks that are paired"
  },
  {
    "objectID": "3-HypothesisTesting.html#comparison-of-variances",
    "href": "3-HypothesisTesting.html#comparison-of-variances",
    "title": "3  Hypothesis Tests",
    "section": "3.9 Comparison of variances",
    "text": "3.9 Comparison of variances\nH0 in variance tests is always that the variances are equal.\n\n3.9.1 F-Test for two normally-distributed samples\n\nx <- rnorm(50, mean = 0, sd = 2)\ny <- rnorm(30, mean = 1, sd = 1)\nvar.test(x, y)                  # Do x and y have the same variance? - Significantly different\n## \n##  F test to compare two variances\n## \n## data:  x and y\n## F = 6.1781, num df = 49, denom df = 29, p-value = 1.518e-06\n## alternative hypothesis: true ratio of variances is not equal to 1\n## 95 percent confidence interval:\n##   3.10401 11.62354\n## sample estimates:\n## ratio of variances \n##           6.178079\n\n\n\n3.9.2 Bartlett test for more than two normally-distributed samples\n\nx <- rnorm(50, mean = 0, sd = 1)\ny <- rnorm(30, mean = 1, sd = 1)\nz <- rnorm(30, mean = 1, sd = 1)\nbartlett.test(list(x, y, z))                # Do x, y and z have the same variance? - Not sigificantly different\n## \n##  Bartlett test of homogeneity of variances\n## \n## data:  list(x, y, z)\n## Bartlett's K-squared = 11.622, df = 2, p-value = 0.002994"
  },
  {
    "objectID": "3-HypothesisTesting.html#comparison-of-discrete-proportions",
    "href": "3-HypothesisTesting.html#comparison-of-discrete-proportions",
    "title": "3  Hypothesis Tests",
    "section": "3.10 Comparison of discrete proportions",
    "text": "3.10 Comparison of discrete proportions\nDiscrete proportions are typically analyzed assuming the binomial model (k/n with probability p)\n\n3.10.1 Exact Binomial Test\nH0 is that the data are binomially distributed with a fixed probability p.\n\n## Conover (1971), p. 97f.\n## Under (the assumption of) simple Mendelian inheritance, a cross\n##  between plants of two particular genotypes produces progeny 1/4 of\n##  which are \"dwarf\" and 3/4 of which are \"giant\", respectively.\n##  In an experiment to determine if this assumption is reasonable, a\n##  cross results in progeny having 243 dwarf and 682 giant plants.\n##  If \"giant\" is taken as success, the null hypothesis is that p =\n##  3/4 and the alternative that p != 3/4.\nbinom.test(c(682, 243), p = 3/4)\n## \n##  Exact binomial test\n## \n## data:  c(682, 243)\n## number of successes = 682, number of trials = 925, p-value = 0.3825\n## alternative hypothesis: true probability of success is not equal to 0.75\n## 95 percent confidence interval:\n##  0.7076683 0.7654066\n## sample estimates:\n## probability of success \n##              0.7372973\nbinom.test(682, 682 + 243, p = 3/4)   # The same.\n## \n##  Exact binomial test\n## \n## data:  682 and 682 + 243\n## number of successes = 682, number of trials = 925, p-value = 0.3825\n## alternative hypothesis: true probability of success is not equal to 0.75\n## 95 percent confidence interval:\n##  0.7076683 0.7654066\n## sample estimates:\n## probability of success \n##              0.7372973\n## => Data are in agreement with H0\n\n\n\n3.10.2 Test of Equal or Given Proportions\nbased on Chi-squared-test, H0 is that the data in two groups are binomially distributed with the same probability p.\n\n## Data from Fleiss (1981), p. 139.\n## H0: The null hypothesis is that the four populations from which\n##     the patients were drawn have the same true proportion of smokers.\n## A:  The alternative is that this proportion is different in at\n##     least one of the populations.\nsmokers  <- c( 83, 90, 129, 70 )\npatients <- c( 86, 93, 136, 82 )\nprop.test(smokers, patients)\n## \n##  4-sample test for equality of proportions without continuity correction\n## \n## data:  smokers out of patients\n## X-squared = 12.6, df = 3, p-value = 0.005585\n## alternative hypothesis: two.sided\n## sample estimates:\n##    prop 1    prop 2    prop 3    prop 4 \n## 0.9651163 0.9677419 0.9485294 0.8536585\n##  => Data are not in agreement with H0\n\n\n\n3.10.3 Contingency tables\nChi-squared-test for count data, H~0~ is that the joint distribution of the cell counts in a 2-dimensional contingency table is the product of the row and column marginals\n\n## From Agresti(2007) p.39\nM <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))\ndimnames(M) <- list(gender = c(\"F\", \"M\"),\n                    party = c(\"Democrat\",\"Independent\", \"Republican\"))\nchisq.test(M)\n## \n##  Pearson's Chi-squared test\n## \n## data:  M\n## X-squared = 30.07, df = 2, p-value = 2.954e-07"
  },
  {
    "objectID": "3-HypothesisTesting.html#distribution-tests",
    "href": "3-HypothesisTesting.html#distribution-tests",
    "title": "3  Hypothesis Tests",
    "section": "3.11 Distribution tests",
    "text": "3.11 Distribution tests\nOften we are interested in the distribution of a variable. This can be tested with distribution tests. All these tests are defined as follows: H0 is that the data follow a specific distribution. So in case H0 is rejected, the data significantly deviates from the specified distribution.\nOften, we want to know whether a variable is normally distributed because this is an important assumption for parametric hypothesis tests. But data can follow many other distributions:\n\n\n3.11.1 Shapiro-Wilk Normality Test\nBecause many tests require normal distribution, this is the test needed most often.\n\nshapiro.test(rnorm(100, mean = 5, sd = 3))\n## \n##  Shapiro-Wilk normality test\n## \n## data:  rnorm(100, mean = 5, sd = 3)\n## W = 0.97832, p-value = 0.09833\n\n\n\n3.11.2 Kolmogorov-Smirnov Test\nFor everything else, the KS test can be used. It compares two different distributions, or a distribution against a reference.\n\nx <- rnorm(50)\ny <- runif(30)\n# Do x and y come from the same distribution?\nks.test(x, y)\n## \n##  Exact two-sample Kolmogorov-Smirnov test\n## \n## data:  x and y\n## D = 0.54, p-value = 1.598e-05\n## alternative hypothesis: two-sided\n\n# Does x come from a shifted gamma distribution with shape 3 and rate 2?\nks.test(x+2, \"pgamma\", 3, 2) # two-sided, exact\n## \n##  Exact one-sample Kolmogorov-Smirnov test\n## \n## data:  x + 2\n## D = 0.26631, p-value = 0.001277\n## alternative hypothesis: two-sided\nks.test(x+2, \"pgamma\", 3, 2, exact = FALSE)\n## \n##  Asymptotic one-sample Kolmogorov-Smirnov test\n## \n## data:  x + 2\n## D = 0.26631, p-value = 0.001663\n## alternative hypothesis: two-sided\nks.test(x+2, \"pgamma\", 3, 2, alternative = \"gr\")\n## \n##  Exact one-sample Kolmogorov-Smirnov test\n## \n## data:  x + 2\n## D^+ = 0.059654, p-value = 0.6742\n## alternative hypothesis: the CDF of x lies above the null hypothesis\n\nFor an overview on distribution see here: http://www.stat.umn.edu/geyer/old/5101/rlook.html"
  },
  {
    "objectID": "3-HypothesisTesting.html#other-tests",
    "href": "3-HypothesisTesting.html#other-tests",
    "title": "3  Hypothesis Tests",
    "section": "3.12 Other tests",
    "text": "3.12 Other tests\n\n3.12.1 Correlation\nA test for the significance of a correlation:\n\ncor.test(airquality$Ozone, airquality$Wind)\n## \n##  Pearson's product-moment correlation\n## \n## data:  airquality$Ozone and airquality$Wind\n## t = -8.0401, df = 114, p-value = 9.272e-13\n## alternative hypothesis: true correlation is not equal to 0\n## 95 percent confidence interval:\n##  -0.7063918 -0.4708713\n## sample estimates:\n##        cor \n## -0.6015465\n\nInterpretation: Ozone and Wind are significantly negatively correlated with a p-value < 0.05 and a correlation coefficient of -0.6015465.\n\n\n3.12.2 Mantel test\nThe Mantel test compares two distance matrices\n\nlibrary(vegan)\n## Is vegetation related to environment?\ndata(varespec)\ndata(varechem)\nveg.dist <- vegdist(varespec) # Bray-Curtis\nenv.dist <- vegdist(scale(varechem), \"euclid\")\nmantel(veg.dist, env.dist)\n## \n## Mantel statistic based on Pearson's product-moment correlation \n## \n## Call:\n## mantel(xdis = veg.dist, ydis = env.dist) \n## \n## Mantel statistic r: 0.3047 \n##       Significance: 0.001 \n## \n## Upper quantiles of permutations (null model):\n##   90%   95% 97.5%   99% \n## 0.109 0.136 0.165 0.198 \n## Permutation: free\n## Number of permutations: 999\nmantel(veg.dist, env.dist, method=\"spear\")\n## \n## Mantel statistic based on Spearman's rank correlation rho \n## \n## Call:\n## mantel(xdis = veg.dist, ydis = env.dist, method = \"spear\") \n## \n## Mantel statistic r: 0.2838 \n##       Significance: 0.001 \n## \n## Upper quantiles of permutations (null model):\n##   90%   95% 97.5%   99% \n## 0.118 0.149 0.174 0.199 \n## Permutation: free\n## Number of permutations: 999"
  },
  {
    "objectID": "3-HypothesisTesting.html#exercises",
    "href": "3-HypothesisTesting.html#exercises",
    "title": "3  Hypothesis Tests",
    "section": "3.13 Exercises",
    "text": "3.13 Exercises\n\n3.13.1 Streams\nThe dataset ‘streams’ contains water measurements taken at different locations along 16 rivers: ‘up’ and ‘down’ are water quality measurements of the same river taken before and after a water treatment filter, respectively. We want to find out if this water filter is effective. Use the decision tree to identify the appropriate test for this situation.\n\ndat = read.table(\"https://raw.githubusercontent.com/biometry/APES/master/Data/Simone/streams.txt\", header = T)\n\nVisualize and analyze the data and answer the following questions at elearning-extern (“03_Test for Exercise in R”).\n\nFor identifying an appropriate test for the effect of the water treatment filter, what are your first two choices in the decision tree?\nThe next decision you have to make is whether you can use a parametric test or not. Apply the Shapiro-Wilk test to check if the data are normally distributed. Are the tests significant and what does that tell you?\nWhich test is appropriate for evaluating the effect of the filter?\nDoes the filter influence the water quality? (The warnings are related to identical values, i.e. ties, and zero differences; we ignore these here)\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nYou can visualize the data as follows:\n\ndat = read.table(\"https://raw.githubusercontent.com/biometry/APES/master/Data/Simone/streams.txt\", header = T)\npar(mfrow = c(1, 2))\nboxplot(dat)\nmatplot(t(dat), type = \"l\") # each line is one river, left is down and right is upstream\n\n\n\npar(mfrow = c(1, 1))\n\n\nThe number of groups to compare is two, up versus down stream. The observations are paired because the water tested up and down stream of the filter is not independent from each other, i.e. the “same” water is measured twice!\nThe Shapiro-Wilk test is significant (p < 0.05) for down stream data, i.e. we reject H0 (the data is normally distributed). Thus, the data significantly deviate from a normal distribution. The test is not significant for upstream data; the data does not significantly deviate from a normal distribution.\n\n\nshapiro.test(dat$down)\n## \n##  Shapiro-Wilk normality test\n## \n## data:  dat$down\n## W = 0.86604, p-value = 0.02367\nshapiro.test(dat$up)\n## \n##  Shapiro-Wilk normality test\n## \n## data:  dat$up\n## W = 0.93609, p-value = 0.3038\n\n\nWe select a Wilcoxon signed rank test that is appropriate to compare not-normal, paired observations in two groups.\nH0 of the Wilcoxon signed rank test is that the location shift between the two groups equals zero, i.e. the difference between the pairs follows a symmetric distribution around zero. As p < 0.05, we can reject H0. The filter significantly influences water quality. (In case of ties also see the function wilcox.test() in the package coin for exact, asymptotic and Monte Carlo conditional p-values)\n\n\nwilcox.test(dat$down, dat$up, paired = T)\n## Warning in wilcox.test.default(dat$down, dat$up, paired = T): cannot compute\n## exact p-value with ties\n## Warning in wilcox.test.default(dat$down, dat$up, paired = T): cannot compute\n## exact p-value with zeroes\n## \n##  Wilcoxon signed rank test with continuity correction\n## \n## data:  dat$down and dat$up\n## V = 8, p-value = 0.004971\n## alternative hypothesis: true location shift is not equal to 0\n\n\n\n\n\n\n3.13.2 Chicken\nThe ‘chickwts’ experiment was carried out to measure and compare the effectiveness of various feed supplements on the growth rate of chickens. We are interested in two questions: Does the feed type influence the chickens weight at all? Which feed types result in significantly different chicken weights?\n\ndat = chickwts\n\nAnalyze the data and answer the following questions at elearning-extern.\n\nVisualize the data. What is an appropriate plot for this kind of data?\nCan you apply an ANOVA to this data? What are the assumptions for an ANOVA? Remember: you have to test two things for the groups (for this exercise it is enough if you test the groups “casein” and “horsebean” only).\nApply an ANOVA or the non-parametric test. How would you describe the result in a thesis or publication?\nAlso apply the alternative test and compare p-values. Which of the tests has a higher power?\nUse the result of the ANOVA to carry out a post-hoc test. How many of the pairwise comparisons indicate significant differences between the groups?\nWhich conclusion about the feed types ‘meatmeal’ and ‘casein’ is correct?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nAn appropriate visualization for one numeric and one categorical variable is a boxplot. Using ‘notch = T’ in the function boxplot(), adds confidence interval for the median (the warning here indicates that we are not very confident in the estimates of the medians as the number of observations is rather small, you can see at the notches that go beyond the boxes).\n\n\ndat = chickwts\nboxplot(weight ~ feed, data = dat)\n\n\n\nboxplot(weight ~ feed, data = dat, notch = T)\n## Warning in (function (z, notch = FALSE, width = NULL, varwidth = FALSE, : some\n## notches went outside hinges ('box'): maybe set notch=FALSE\n\n\n\n\n\nThe two requirements for applying an ANOVA are 1) the data in each group are normally distributed, and 2) the variances of the different groups are equal. For 1) we again use a Shapiro-Wilk test. For 2) we can use the function var.test() or for all feed types the function bartlett.test(). All tests are not significant, and we thus have no indication to assume that the data is not-normally distributed or that the variances are different. We can use an ANOVA.\n\n\n# get data of each group\ncasein = dat$weight[dat$feed == \"casein\"]\nhorsebean = dat$weight[dat$feed == \"horsebean\"]\n\nshapiro.test(casein)\n## \n##  Shapiro-Wilk normality test\n## \n## data:  casein\n## W = 0.91663, p-value = 0.2592\nshapiro.test(horsebean)\n## \n##  Shapiro-Wilk normality test\n## \n## data:  horsebean\n## W = 0.93758, p-value = 0.5264\n# H0 normally distributed\n# not rejected, normality assumption is okay\n\nvar.test(casein, horsebean)\n## \n##  F test to compare two variances\n## \n## data:  casein and horsebean\n## F = 2.7827, num df = 11, denom df = 9, p-value = 0.1353\n## alternative hypothesis: true ratio of variances is not equal to 1\n## 95 percent confidence interval:\n##  0.711320 9.984178\n## sample estimates:\n## ratio of variances \n##           2.782737\n# H0 ratio of variances is 1 = groups have the same variance\n# not rejected, same variances is okay\n\n\n### Extra: testing the assumptions for all groups:\n\n# Normality test using the dplyr package\nlibrary(dplyr)\n## \n## Attaching package: 'dplyr'\n## The following object is masked from 'package:MASS':\n## \n##     select\n## The following objects are masked from 'package:stats':\n## \n##     filter, lag\n## The following objects are masked from 'package:base':\n## \n##     intersect, setdiff, setequal, union\ndat %>% \n  group_by(feed) %>% \n  summarise(p = shapiro.test(weight)$p)\n## # A tibble: 6 × 2\n##   feed          p\n##   <fct>     <dbl>\n## 1 casein    0.259\n## 2 horsebean 0.526\n## 3 linseed   0.903\n## 4 meatmeal  0.961\n## 5 soybean   0.506\n## 6 sunflower 0.360\n\n# Bartlett test for equal variances\nbartlett.test(weight ~ feed, dat)\n## \n##  Bartlett test of homogeneity of variances\n## \n## data:  weight by feed\n## Bartlett's K-squared = 3.2597, df = 5, p-value = 0.66\n\n\nH0 of the ANOVA is that feed has no influence on the chicken weight. As p < 0.05, we reject H0. In the result section, we would write something like: “The feed type significantly influenced the chicken weight (ANOVA, p = 5.94e-10).”\n\n\nfit = aov(weight ~ feed, data = dat)\nsummary(fit)\n##             Df Sum Sq Mean Sq F value   Pr(>F)    \n## feed         5 231129   46226   15.37 5.94e-10 ***\n## Residuals   65 195556    3009                     \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThe non-parametric alternative of an ANOVA is the Kruskal-Wallis test, which should be applied if the data is not normally distributed. In this example, the test comes to the same conclusion: H0 is rejected, the feed type has a significant effect on the chicken weight. The p-value, however, is not as small as in the ANOVA. The reason for this is that non-parametric tests have a lower power than parametric ones as they only use the ranks of the data. Therefore, the ANOVA is preferred over the non-parametric alternative in case its assumptions are fulfilled.\n\n\nkruskal.test(chickwts$weight, chickwts$feed)\n## \n##  Kruskal-Wallis rank sum test\n## \n## data:  chickwts$weight and chickwts$feed\n## Kruskal-Wallis chi-squared = 37.343, df = 5, p-value = 5.113e-07\n\n\nFrom the 15 comparisons among feed types, 8 are significantly different.\n\n\nTukeyHSD(fit)\n##   Tukey multiple comparisons of means\n##     95% family-wise confidence level\n## \n## Fit: aov(formula = weight ~ feed, data = dat)\n## \n## $feed\n##                            diff         lwr       upr     p adj\n## horsebean-casein    -163.383333 -232.346876 -94.41979 0.0000000\n## linseed-casein      -104.833333 -170.587491 -39.07918 0.0002100\n## meatmeal-casein      -46.674242 -113.906207  20.55772 0.3324584\n## soybean-casein       -77.154762 -140.517054 -13.79247 0.0083653\n## sunflower-casein       5.333333  -60.420825  71.08749 0.9998902\n## linseed-horsebean     58.550000  -10.413543 127.51354 0.1413329\n## meatmeal-horsebean   116.709091   46.335105 187.08308 0.0001062\n## soybean-horsebean     86.228571   19.541684 152.91546 0.0042167\n## sunflower-horsebean  168.716667   99.753124 237.68021 0.0000000\n## meatmeal-linseed      58.159091   -9.072873 125.39106 0.1276965\n## soybean-linseed       27.678571  -35.683721  91.04086 0.7932853\n## sunflower-linseed    110.166667   44.412509 175.92082 0.0000884\n## soybean-meatmeal     -30.480519  -95.375109  34.41407 0.7391356\n## sunflower-meatmeal    52.007576  -15.224388 119.23954 0.2206962\n## sunflower-soybean     82.488095   19.125803 145.85039 0.0038845\n\n\nThe experiment did not reveal a significant weight difference between the feed types ‘meatmeal’ and ‘casein’. Remember that we cannot prove or accept H0; we can only reject it.\n\n\n\n\n\n\n3.13.3 Titanic\nThe dataset ‘titanic’ from the EcoData package (not to confuse with the dataset ‘Titanic’) provides information on individual passengers of the Titanic.\n\nlibrary(EcoData) #or: load(\"EcoData.Rdata\"), if you had problems with installing the package\ndat = titanic\n\nAnswer the following questions at elearning-extern.\n\nWe are interested in first and second class differences only. Reduce the dataset to these classes only. How can you do this in R?\nDoes the survival rate between the first and second class differ? Hint: you can apply the test to a contigency table of passenger class versus survived, i.e. table(dat$pclass, dat$survived).\nIs the variable passenger age normally distributed?\nIs the variable Body Identification Number (body) uniformly distributed?\nIs the correlation between fare and age significant?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nThe dataset can be reduced in different ways. All three options result in a dataset with class 1 and 2 only.\n\n\nlibrary(EcoData)\ndat = titanic\n\ndat = dat[dat$pclass == 1 | dat$pclass == 2, ]\ndat = dat[dat$pclass %in% 1:2, ] # the same\ndat = dat[dat$pclass != 3, ] # the same\n\n\nWe use the test of equal proportions here. H0, proportions in the two groups are equal, is rejected. The survival probability in class 1 and class 2 is significantly different. Note that the estimated proportions are for mortality not for survival because 0=died is in the first column of the table. Thus it is considered the “success” in the prop.test().\n\n\ntable(dat$pclass, dat$survived)\n##    \n##       0   1\n##   1 123 200\n##   2 158 119\nprop.test(table(dat$pclass, dat$survived))\n## \n##  2-sample test for equality of proportions with continuity correction\n## \n## data:  table(dat$pclass, dat$survived)\n## X-squared = 20.772, df = 1, p-value = 5.173e-06\n## alternative hypothesis: two.sided\n## 95 percent confidence interval:\n##  -0.2717017 -0.1074826\n## sample estimates:\n##    prop 1    prop 2 \n## 0.3808050 0.5703971\n\n\nThe distribution of passenger age significantly differs from normal.\n\n\nhist(dat$age, breaks = 20)\n\n\n\nshapiro.test(dat$age)\n## \n##  Shapiro-Wilk normality test\n## \n## data:  dat$age\n## W = 0.9876, p-value = 0.00014\n\n\nThe distribution of body significantly differs from uniform.\n\n\nhist(dat$body, breaks = 20)\n\n\n\nks.test(dat$body, \"punif\")\n## \n##  Exact one-sample Kolmogorov-Smirnov test\n## \n## data:  dat$body\n## D = 1, p-value = 2.22e-16\n## alternative hypothesis: two-sided\n\n\nThe correlation between fare and age is non-significant. You can also plot the data using the scatter.smooth function.\n\n\ncor.test(dat$fare, dat$age)\n## \n##  Pearson's product-moment correlation\n## \n## data:  dat$fare and dat$age\n## t = 1.9326, df = 543, p-value = 0.0538\n## alternative hypothesis: true correlation is not equal to 0\n## 95 percent confidence interval:\n##  -0.001346105  0.165493055\n## sample estimates:\n##        cor \n## 0.08265257\nscatter.smooth(dat$fare, dat$age)\n\n\n\n\n\n\n\n\n\n3.13.4 Simulation of Type I and II error\nThis is an additional task for those who are fast! Please finish the other parts first and submit your solution in elearning-extern before you continue here!\nAnalogously to the previous example of simulating the test statistic, we can also simulate error rates. Complete the code …\n\nPperGroup = 50\npC = 0.5\npT = 0.5\n\npvalues = rep(NA, 1000)\n\nfor(i in 1:1000){\n  control = rbinom(n = 1, size = PperGroup, prob = pC)\n  treat = rbinom(n = 1, size = PperGroup, prob = pT)\n  #XXXX\n}\n\n… and answer the following questions for the prop.test in R:\n\nHow does the distribution of p-values and the number of false positive (Type I error) look like if pC = pT\nHow does the distribution of p-values and the number of true positive (Power) look like if pC != pT, e.g. 0.5, 0.6\nHow does the distribution of p-values and the number of false positive (Type I error) look like if you modify the for loop in a way that you first look at the data, and then decide if you test for greater or less?\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nAnalogously to our previous example with simulating the test statistic, we can also simulate the error rates. This is the completed code the different examples:\n\npC = pT\n\n\nPperGroup = 50\npC = 0.5\npT = 0.5\n\npvalues = rep(NA, 1000)\npositives = rep(NA, 1000)\n\nfor(i in 1:1000){\n  control = rbinom(1, PperGroup, prob = pC )\n  treatment = rbinom(1, PperGroup, prob = pT )\n  pvalues[i] = prop.test(c(control, treatment), rep(PperGroup, 2))$p.value\n  positives[i] = pvalues[i] <= 0.05\n}\nhist(pvalues)\n\n\n\ntable(positives)\n## positives\n## FALSE  TRUE \n##   952    48\nmean(positives) \n## [1] 0.048\n\n# type I error rate = false positives (if data simulation etc. is performed several times, this should be on average 0.05 (alpha))\n\n\npC != pT with difference 0.1\n\n\nPperGroup = 50\npC = 0.5\npT = 0.6\n\npvalues = rep(NA, 1000)\npositives = rep(NA, 1000)\n\nfor(i in 1:1000){\n  control = rbinom(1, PperGroup, prob = pC )\n  treatment = rbinom(1, PperGroup, prob = pT )\n  pvalues[i] = prop.test(c(control, treatment), rep(PperGroup, 2))$p.value\n  positives[i] = prop.test(c(control, treatment), rep(PperGroup, 2))$p.value < 0.05\n}\nhist(pvalues)\n\n\n\ntable(positives)\n## positives\n## FALSE  TRUE \n##   857   143\nmean(pvalues < 0.05) # = power (rate at which effect is detected by the test)\n## [1] 0.143\n# power = 1- beta > beta = 1-power = typeII error rate\n1-mean(pvalues < 0.05)\n## [1] 0.857\n\n## Factors increasing power and reducing type II errors:\n# - increase sample size\n# - larger real effect size (but this is usually fixed by the system)\n\n\nYou first look at the data, and then decide if you test for greater or less:\n\n\n# ifelse(test,yes,no)\nPperGroup = 50\npC = 0.5\npT = 0.5\n\nfor(i in 1:1000){\n  control = rbinom(1, PperGroup, prob = pC )\n  treatment = rbinom(1, PperGroup, prob = pT )\n  pvalues[i] = prop.test(c(control, treatment), rep(PperGroup, 2), \n                        alternative= ifelse(mean(control)>mean(treatment),\n                                            \"greater\",\"less\"))$p.value\n  positives[i] = prop.test(c(control, treatment), rep(PperGroup, 2),\n                     alternative= ifelse(mean(control)>mean(treatment),\n                                         \"greater\",\"less\"))$p.value < 0.05\n}\nhist(pvalues)\n\n\n\ntable(positives)\n## positives\n## FALSE  TRUE \n##   953    47\nmean(pvalues < 0.05) \n## [1] 0.047\n# higher false discovery rate"
  },
  {
    "objectID": "4-SimpleRegression.html#maximum-likelihood-estimator",
    "href": "4-SimpleRegression.html#maximum-likelihood-estimator",
    "title": "4  Simple linear regression",
    "section": "4.1 Maximum Likelihood Estimator",
    "text": "4.1 Maximum Likelihood Estimator\n\\(likelihood = P(D|model, parameter)\\)\nThe likelihood is the probability to observe the Data given a certain model (which is described by its parameter).\nIt is an approach to optimize a model/parameter to find the set of parameters that describes best the observed data.\nA simple example, we want to estimate the average of random vectors and we assume that our model is a normal distribution (so we assume that the data originated from a normal distribution). We want to optimize the two parameters that describe a normal distribution: the mean, and the sd:\n\nXobs = rnorm(100, sd = 1.0)\n# Now we assume that mean = 0, and sd = 0.2 are unknown but we want to find them, let's write the likelihood function:\nlikelihood = function(par) { # we give two parameters, mean and sd\n  lls = dnorm(Xobs, mean = par[1], sd = par[2], log = TRUE) # calculate for each observation to observe the data given our model\n  # we use the logLikilihood for numerical reasons\n  return(sum(lls))\n}\n\nlikelihood(c(0, 0.2))\n## [1] -1274.247\n# let's try all values of sd:\nlikelihood_mean = function(p) likelihood(c(p, 1.0))\nplot(seq(-5, 5.0, length.out = 100), sapply(seq(-5, 5.0, length.out = 100), likelihood_mean), xlab = 'Different mean values', ylab = \"negative logLikelihood\")\n\n\n\n\n# The optimum is at 0, which corresponds to our mean we used to sample Xobs\n\nHowever it is tedious to try all values manually to find the best value, especially if we have to optimize several values. For that we can use an optimizer in R which finds for us the best set of parameters:\n\nopt = optim(c(0.0, 1.0), fn = function(par) -likelihood(par), hessian = TRUE )\n\nWe can use the shape of the likelihood to calculate standard errors for our estimates:\n\nst_errors = sqrt(diag(solve(opt$hessian)))\n\nWith that we can calculate the confidence interval for our estimates. When the estimator is repeatedly used, 95% of the calculated confidence intervals will include the true value!\n\ncbind(opt$par-1.96*st_errors, opt$par+1.96*st_errors)\n##            [,1]      [,2]\n## [1,] -0.1706372 0.2355346\n## [2,]  0.8925465 1.1797585\n\nIn short, if we would do a t.test for our Xobs (to test whether the mean is stat. significant different from zero), the test would be non significant, and a strong indicator for that is when the 0 is within the confidence interval. Let’s compare our CI to the one calculated by the t-test:\n\nt.test(Xobs)\n## \n##  One Sample t-test\n## \n## data:  Xobs\n## t = 0.31224, df = 99, p-value = 0.7555\n## alternative hypothesis: true mean is not equal to 0\n## 95 percent confidence interval:\n##  -0.1741130  0.2391426\n## sample estimates:\n##  mean of x \n## 0.03251482\n\nAlmost the same! The t-test also calculates the MLE to get the standard error and the confidence interval."
  },
  {
    "objectID": "4-SimpleRegression.html#linear-regression",
    "href": "4-SimpleRegression.html#linear-regression",
    "title": "\n4  Simple linear regression\n",
    "section": "\n4.2 Linear Regression",
    "text": "4.2 Linear Regression\nSo, if we want to test if there is an association between two continous variables, we can calculate the correlation between the two - and with the cor.test function we can test even for significance. But, the correlation doesn’t report the magnitude, the strength, of the effect:\n\nX = runif(100)\npar(mfrow = c(1,1))\nplot(X, 0.5*X, ylim = c(0, 1), type = \"p\", pch = 15, col = \"red\", xlab = \"X\", ylab = \"Y\")\npoints(X, 1.0*X, ylim = c(0, 1), type = \"p\", pch = 15, col = \"blue\", xlab = \"X\", ylab = \"Y\")\n\n\n\ncor(X, 0.5*X)\n## [1] 1\ncor(X, 1.0*X)\n## [1] 1\n\nBoth have a correlation factor of 1.0! But we see clearly that the blue line has an stronger effect on Y then the red line.\nSolution: Linear regression models\nThey describe the relationship between a dependent variable and one or more explanatory variables:\n\\[\ny = a_0 +a_1*x\n\\]\n(x = explanatory variable; y = dependent variable; a0=intercept; a1= slope)\nExamples:\n\nplot(X, 0.5*X, ylim = c(0, 1), type = \"p\", pch = 16, col = \"black\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\npoints(X, 0.5*X, col = \"red\", type = \"l\", lwd = 1.5)\npoints(X, 1.0*X, ylim = c(0, 1), type = \"p\", pch = 16, col = \"black\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\npoints(X, 1.0*X, ylim = c(0, 1), type = \"l\", pch = 16, col = \"blue\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\nlegend(\"topleft\", col = c(\"red\", \"blue\"), lty = 1,legend = c('Y = 0.5*X+0', 'Y = 1.0**X+0'))\n\n\n\n\nWe can get the parameters (slope and intercept) with the MLE. However, we need first to make another assumptions, usually the model line doesn’t perfectly the data because there is an observational error on Y, so the points scatter around the line:\n\nplot(X, 0.5*X+rnorm(100, sd = 0.05), ylim = c(0, 1), type = \"p\", pch = 16, col = \"black\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\npoints(X, 0.5*X, col = \"red\", type = \"l\", lwd = 1.5)\npoints(X, 1.0*X+rnorm(100, sd = 0.05), ylim = c(0, 1), type = \"p\", pch = 16, col = \"black\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\npoints(X, 1.0*X, ylim = c(0, 1), type = \"l\", pch = 16, col = \"blue\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\nlegend(\"topleft\", col = c(\"red\", \"blue\"), lty = 1,legend = c('Y = 0.5*X+0', 'Y = 1.0**X+0'))\n\n\n\n\nAnd the model extends to:\n\\[\ny = a_0 + a_1*x +\\epsilon, \\epsilon \\sim N(0, sd)\n\\]\nWhich we can also rewrite into:\n\\[\ny = N(a_0 + a_1*x, sd)\n\\]\nWhich is very similar to our previous MLE, right? The only difference is now that the mean depends now on x, let’s optimize it again:\n\nXobs = rnorm(100, sd = 1.0)\nY = Xobs + rnorm(100,sd = 0.2)\nlikelihood = function(par) { # three parameters now\n  lls = dnorm(Y, mean = Xobs*par[2]+par[1], sd = par[3], log = TRUE) # calculate for each observation the probability to observe the data given our model\n  # we use the logLikilihood because of numerical reasons\n  return(sum(lls))\n}\n\nlikelihood(c(0, 0, 0.2))\n## [1] -1162.229\nopt = optim(c(0.0, 0.0, 1.0), fn = function(par) -likelihood(par), hessian = TRUE )\n\nopt$par\n## [1] 0.002927292 0.997608527 0.216189328\n\nOur true parameters are 0.0 for the intercept, 1.0 for the slope, and 0.22 for the sd of the observational error.\nNow, we want to test whether the effect (slope) is statistically significant different from 0:\n\ncalculate standard error\ncalculate t-statistic\ncalculate p-value\n\n\nst_errors = sqrt(diag(solve(opt$hessian)))\nst_errors[2]\n## [1] 0.02226489\nt_statistic = opt$par[2] / st_errors[2]\npt(t_statistic, df = 100-3, lower.tail = FALSE)*2\n## [1] 1.264962e-66\n\nThe p-value is smaller than alpha, so the effect is significant! However, it would be tedious to do that always by hand, and because it is probably one of the most used analysis, there’s a function for it in R:\n\nmodel = lm(Y~Xobs) # 1. Get estimates, MLE\nmodel\n## \n## Call:\n## lm(formula = Y ~ Xobs)\n## \n## Coefficients:\n## (Intercept)         Xobs  \n##    0.002927     0.997569\nsummary(model) # 2. Calculate standard errors, CI, and p-values\n## \n## Call:\n## lm(formula = Y ~ Xobs)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -0.49919 -0.13197 -0.01336  0.14239  0.64505 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 0.002927   0.021838   0.134    0.894    \n## Xobs        0.997569   0.022490  44.355   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.2184 on 98 degrees of freedom\n## Multiple R-squared:  0.9526, Adjusted R-squared:  0.9521 \n## F-statistic:  1967 on 1 and 98 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "4-SimpleRegression.html#classroom-demo",
    "href": "4-SimpleRegression.html#classroom-demo",
    "title": "\n4  Simple linear regression\n",
    "section": "\n4.3 Classroom demo",
    "text": "4.3 Classroom demo\n\n\n\n# Part 5\n# Simple linear regression\n\n\n\n\n# cleaning workspace ------------------------------------------------------\n\n\n# let's clean our workspace:\nls() # gives a list of objects that are currently stored\n## [1] \"likelihood\"      \"likelihood_mean\" \"model\"           \"opt\"            \n## [5] \"st_errors\"       \"t_statistic\"     \"X\"               \"Xobs\"           \n## [9] \"Y\"\nrm(cl) # remove object m1\n## Warning in rm(cl): object 'cl' not found\nrm(list = ls()) #remove all objects\n\n\n\n\n\n# Simple linear regression ------------------------------------------------\n\n\npairs(airquality)\n\n\n\n# first think about what is explanatory / predictor \n# and what is the dependent variable (e.g. in Ozone and Temp)\n\n# par(mfrow = c(1, 1))\nplot(Ozone ~ Temp, data = airquality)\n\n\n\nfit1 = lm(Ozone ~ Temp, data = airquality)\nsummary(fit1)\n## \n## Call:\n## lm(formula = Ozone ~ Temp, data = airquality)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -40.729 -17.409  -0.587  11.306 118.271 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -146.9955    18.2872  -8.038 9.37e-13 ***\n## Temp           2.4287     0.2331  10.418  < 2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 23.71 on 114 degrees of freedom\n##   (37 observations deleted due to missingness)\n## Multiple R-squared:  0.4877, Adjusted R-squared:  0.4832 \n## F-statistic: 108.5 on 1 and 114 DF,  p-value: < 2.2e-16\n# gives a negative values for the intercept = negative Ozone levels when Temp = 0\n# this does not make sense (>extrapolation)\n\n# we can also fit a model without intercept, \n# without means: intercept = 0; y = a*x \n# although this doesn't make much sense here\nfit2 = lm(Ozone ~ Temp - 1, data = airquality)\nsummary(fit2)\n## \n## Call:\n## lm(formula = Ozone ~ Temp - 1, data = airquality)\n## \n## Residuals:\n##    Min     1Q Median     3Q    Max \n## -38.47 -23.26 -12.46  15.15 121.96 \n## \n## Coefficients:\n##      Estimate Std. Error t value Pr(>|t|)    \n## Temp  0.56838    0.03498   16.25   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 29.55 on 115 degrees of freedom\n##   (37 observations deleted due to missingness)\n## Multiple R-squared:  0.6966, Adjusted R-squared:  0.6939 \n## F-statistic:   264 on 1 and 115 DF,  p-value: < 2.2e-16\n\n\nplot(Ozone ~ Temp, data = airquality, xlim = c(0,100), ylim = c(-150, 150))\nabline(fit1, col = \"green\")\nabline(fit2, col = \"red\", lty = 2)\n\n\n\n\n\n# there is no need to check normality of Ozone\nhist(airquality$Ozone) # this is not normal, and that's no problem !\n\n\n\n\n\n# instead: the residuals must be normal!!!!!!!!\nresiduals(fit1)\n##           1           2           3           4           6           7 \n##  25.2723695   8.1288530 -20.7285536  14.4158861  14.7010729  12.1297762 \n##           8           9          11          12          13          14 \n##  22.7019960   6.8445894 -25.7285536  -4.5850371  -2.2989271  -4.1563338 \n##          15          16          17          18          19          20 \n##  24.1306993   5.5584795  20.7010729  14.5594026  11.8436662   7.4158861 \n##          21          22          23          24          28          29 \n##   4.7019960 -19.2998503   2.8445894  30.8445894   7.2723695  -4.7294767 \n##          30          31          38          40          41          44 \n##  70.1279299  -0.5859602 -23.1581800  -0.5878065 -25.3016966 -29.1581800 \n##          47          48          49          50          51          62 \n## -19.0146635   9.1288530   9.1297762 -18.2998503 -24.5859602  77.9844134 \n##          63          64          66          67          68          69 \n## -10.4442899 -17.7294767   9.4131167 -14.5868833  10.2696001  20.5547869 \n##          70          71          73          74          76          77 \n##  20.5547869  15.8408968 -20.2998503 -22.7294767 -40.3007734  -1.7294767 \n##          78          79          80          81          82          85 \n## -17.1581800   3.9844134  14.6983034   3.5557101 -16.7285536  18.1270068 \n##          86          87          88          89          90          91 \n##  48.5557101 -32.1581800  -9.8729932  15.2696001 -11.8729932   9.4131167 \n##          92          93          94          95          96          97 \n##   9.2705233 -10.7294767 -40.7294767 -36.1581800  16.1270068 -24.4442899 \n##          98          99         100         101         104         105 \n##   1.6983034  52.8408968  17.4121935  38.4121935 -17.8729932 -24.1581800 \n##         106         108         109         110         111         112 \n##  17.6992266 -18.0146635  14.1279299 -14.5859602 -11.4433668   1.5566332 \n##         113         114         116         117         118         120 \n## -19.0146635 -18.8711470   0.1279299 118.2705233  11.1270068 -12.5887296 \n##         121         122         123         124         125         126 \n##  36.6973803  -2.1600263   3.6973803  21.9834902   1.5547869  -5.8739164 \n##         127         128         129         130         131         132 \n##  12.1260836 -17.3016966 -25.0155866 -27.3007734 -19.4433668 -14.1572569 \n##         133         134         135         136         137         138 \n##  -6.2998503  -5.7294767 -16.5859602 -12.0146635 -16.4424437 -12.4424437 \n##         139         140         141         142         143         144 \n##   3.5566332   2.2723695 -24.5859602   5.8436662 -36.1581800   4.5584795 \n##         145         146         147         148         149         151 \n##  -2.4424437 -13.7294767 -13.5850371   7.9871828   6.9862596 -21.1572569 \n##         152         153 \n## -19.5859602   1.8436662\nhist(residuals(fit1))\n\n\n\n# residuals are not normally distributed\n# we do not use a test for this, but instead look at the residuals visually\n\n# let's plot resiuals versus predictor\nplot(airquality$Temp[!is.na(airquality$Ozone)], residuals(fit1))\n\n\n\n\n# model checking plots\noldpar= par(mfrow = c(2,2))\nplot(fit1)\n\n\n\npar(oldpar)\n#> there's a pattern in the residuals > the model does not fit very well!\n\n\n# Quadratic term ----------------------------------------------------------\n\n## what does simple linear regression mean?\n# simple = one predictor!\n# linear = linear in the parameters\n# a0 + a1 * x + a2 * x^2 \n# even if we add a quadratic term, this is a linear combination\n# this is called polynomial\n\nfit3 = lm(Ozone ~ Temp + I(Temp^2), data = airquality)\nsummary(fit3)\n## \n## Call:\n## lm(formula = Ozone ~ Temp + I(Temp^2), data = airquality)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -37.619 -12.513  -2.736   9.676 123.909 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 305.48577  122.12182   2.501 0.013800 *  \n## Temp         -9.55060    3.20805  -2.977 0.003561 ** \n## I(Temp^2)     0.07807    0.02086   3.743 0.000288 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 22.47 on 113 degrees of freedom\n##   (37 observations deleted due to missingness)\n## Multiple R-squared:  0.5442, Adjusted R-squared:  0.5362 \n## F-statistic: 67.46 on 2 and 113 DF,  p-value: < 2.2e-16\n\noldpar= par(mfrow = c(2,2))\nplot(fit3)\n\n\n\npar(oldpar)\n\n\n# Residual vs. fitted looks okay, but Outliers are still there, and additionally\n# too wide. But for now, let's plot prediction with uncertainty (plot line plus confidence interval)\n\nplot(Ozone ~ Temp, data = airquality)\n\n# if the relationship between x and y is not linear, we cannot use abline\n# instead we predict values of x for different values of y based on the model \nnewDat = data.frame(Temp = 55:100)\npredictions = predict(fit3, newdata = newDat, se.fit = T)\n# and plot these into our figure:\nlines(newDat$Temp, predictions$fit, col= \"red\")\n# let's also plot the confidence intervals:\nlines(newDat$Temp, predictions$fit + 1.96*predictions$se.fit, col= \"red\", lty = 2)\nlines(newDat$Temp, predictions$fit - 1.96*predictions$se.fit, col= \"red\", lty = 2)\n\n# add a polygon (shading for confidence interval)\nx = c(newDat$Temp, rev(newDat$Temp))\ny = c(predictions$fit - 1.96*predictions$se.fit, \n      rev(predictions$fit + 1.96*predictions$se.fit))\n\npolygon(x,y, col=\"#99009922\", border = F )\n\n\n# alternative: use package effects\n#install.packages(\"effects\")\nlibrary(effects)\n## Loading required package: carData\n## lattice theme set by effectsTheme()\n## See ?effectsTheme for details.\n\n\n\nplot(allEffects(fit3))\n\n\n\nplot(allEffects(fit3, partial.residuals = T)) \n\n\n\n#to check patterns in residuals (plots measurements and partial residuals)\n\n# or jtools package\nlibrary(jtools)\neffect_plot(fit3, pred = Temp, interval = TRUE, plot.points = TRUE)\n\n\n\n\n\n\n# Categorial predictors ---------------------------------------------------\n\n\nsummary(chickwts)\n##      weight             feed   \n##  Min.   :108.0   casein   :12  \n##  1st Qu.:204.5   horsebean:10  \n##  Median :258.0   linseed  :12  \n##  Mean   :261.3   meatmeal :11  \n##  3rd Qu.:323.5   soybean  :14  \n##  Max.   :423.0   sunflower:12\n\nplot(weight ~ feed, chickwts)\n\n\n\nfit4 = lm(weight ~ feed, chickwts)\n\nsummary(fit4)\n## \n## Call:\n## lm(formula = weight ~ feed, data = chickwts)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -123.909  -34.413    1.571   38.170  103.091 \n## \n## Coefficients:\n##               Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)    323.583     15.834  20.436  < 2e-16 ***\n## feedhorsebean -163.383     23.485  -6.957 2.07e-09 ***\n## feedlinseed   -104.833     22.393  -4.682 1.49e-05 ***\n## feedmeatmeal   -46.674     22.896  -2.039 0.045567 *  \n## feedsoybean    -77.155     21.578  -3.576 0.000665 ***\n## feedsunflower    5.333     22.393   0.238 0.812495    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 54.85 on 65 degrees of freedom\n## Multiple R-squared:  0.5417, Adjusted R-squared:  0.5064 \n## F-statistic: 15.36 on 5 and 65 DF,  p-value: 5.936e-10\nanova(fit4) #get overall effect of feeding treatment\n## Analysis of Variance Table\n## \n## Response: weight\n##           Df Sum Sq Mean Sq F value    Pr(>F)    \n## feed       5 231129   46226  15.365 5.936e-10 ***\n## Residuals 65 195556    3009                      \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nplot(allEffects(fit4))\n\n\n\nplot(allEffects(fit4, partial.residuals = T))\n\n\n\neffect_plot(fit4, pred = feed, interval = TRUE, plot.points = F)\n\n\n\n\n\nold.par = par(mfrow = c(2, 2))\nplot(fit4)\n\n\n\npar(old.par)\n\nboxplot(residuals(fit4) ~ chickwts$feed)"
  },
  {
    "objectID": "4-SimpleRegression.html#exercises",
    "href": "4-SimpleRegression.html#exercises",
    "title": "4  Simple linear regression",
    "section": "4.4 Exercises",
    "text": "4.4 Exercises\nYou will work with the following datasets:\n\nregrowth {EcoData}\nbirdabundance {EcoData}\nsimulated data\n\n\n4.4.1 Analyzing the “regrowth” dataset\nImagine you have a garden with some fruit trees and you were thinking of adding some berry bushes between them. However, you don’t want them to suffer from malnutrition so you want to estimate the volume of root biomass as a function of the fruit biomass.\nCarry out the following tasks\n\nPerform a simple linear regression for the influence of fruit biomass on root biomass.\nVisualize the data and add the regression line to the plot.\n\nYou will need the following functions:\n\nlm()\nsummary()\nplot()\nabline()\n\n\n\n\n\n\n\nQuestion\n\n\n\nUse your results to chose the correct statement(s) on elearning-extern (Q1) (“04_Test for Exercise in R - simple regression”).\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThis is the code that you need to interpret the results.\n\nlibrary(EcoData)\n# simple linear regression\nfit <- lm(Root ~ Fruit, data = regrowth)\n\n# check summary for regression coefficient and p-value\nsummary(fit)\n## \n## Call:\n## lm(formula = Root ~ Fruit, data = regrowth)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -1.25105 -0.69970 -0.01755  0.66982  1.63933 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 4.184256   0.337987  12.380  6.6e-15 ***\n## Fruit       0.050444   0.005264   9.584  1.1e-11 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.8111 on 38 degrees of freedom\n## Multiple R-squared:  0.7073, Adjusted R-squared:  0.6996 \n## F-statistic: 91.84 on 1 and 38 DF,  p-value: 1.099e-11\n\n# plot root explained by fruit biomass\nplot(Root ~ Fruit, data = regrowth, \n     ylab = \"Root biomass in cubic meters\",\n     xlab = \"Fruit biomass in g\")\n\nabline(fit) # add regression line\nabline(v = 70, col = \"purple\") # add line at x value (here fruit biomass of 70g)\nabline(h = 4.184256 + 0.050444*70, col = \"brown\") # add line at y value according to x = 70 using the intercept and regression coefficient of x\n\n\n\n\n\n\n\n\n\n4.4.2 Analyzing the “birdabundance” dataset\nThe dataset provides bird abundances in forest fragments with different characteristics in Australia. We want to look at the relationship of the variables “abundance”, “distance” and “grazing”.\n\n\n\n\n\n\nQuestions\n\n\n\nFirst, answer the following questions on elearning-extern (Q 2-4):\n\nWhat is the most reasonable research question regarding these variables?\nWhat is the response variable?\nWhat is the predictor variable?\n\nThen, perform the following tasks:\n\nFit a simple linear regression relating the response variable to the categorical predictor (that is the one with five levels, make sure that it is indeed a factor using as.factor())\nApply an ANOVA to your model.\n\nYou may need the following functions:\n\nlm()\nsummary()\nanova()\n\nUse your results to chose the correct statement(s) on elearning-extern (Q5).\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nA reasonable research question is how abundance is influenced by distance and/or grazing. Here, the response variable is abundance, while the predictors are distance and/or grazing.\nThis is the code that you need to interpret the results.\n\n# change variable from integer to factor\nbirdabundance$GRAZE <- as.factor(birdabundance$GRAZE) \nfit <- lm(ABUND ~ GRAZE, data = birdabundance)\nsummary(fit)\n## \n## Call:\n## lm(formula = ABUND ~ GRAZE, data = birdabundance)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -18.3867  -4.1159   0.0269   5.1484  16.4133 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)   28.623      2.086  13.723  < 2e-16 ***\n## GRAZE2        -6.673      3.379  -1.975   0.0537 .  \n## GRAZE3        -7.336      2.850  -2.574   0.0130 *  \n## GRAZE4        -8.052      3.526  -2.284   0.0266 *  \n## GRAZE5       -22.331      2.950  -7.571 6.85e-10 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 7.52 on 51 degrees of freedom\n## Multiple R-squared:  0.5449, Adjusted R-squared:  0.5092 \n## F-statistic: 15.27 on 4 and 51 DF,  p-value: 2.846e-08\n\n# anova to check global effect of the factor grazing intensity\nanova(fit)\n## Analysis of Variance Table\n## \n## Response: ABUND\n##           Df Sum Sq Mean Sq F value    Pr(>F)    \n## GRAZE      4 3453.7  863.42  15.267 2.846e-08 ***\n## Residuals 51 2884.2   56.55                      \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# boxplot\nplot(ABUND ~ GRAZE, data = birdabundance)\n\n\n\n\n\n\n\n\n\n4.4.3 Model validation: Residual checks\nNow, we will have a closer look at model diagnostics and residual checks in particular. Of course, we should have done this for all models above as well (we simply didn’t do this because of time restrictions). So remember that you always have to validate your model, if you want to be sure that your conclusions are correct.\nFor this exercise, you can prepare a dataset yourself called “dat” with the variables “x” and “y”. Simply copy the following code to generate the data:\n\nset.seed(234)\nx = rnorm(40, mean = 10, sd = 5)\ny = 10 - 2*x + 0.9 * x^2 + rnorm(40, mean=5, sd = 20)\ndat <- data.frame(x, y)\nhead(dat)\n##           x          y\n## 1 13.303849 152.093910\n## 2 -0.264915   6.831275\n## 3  2.503970  45.207691\n## 4 17.356166 240.274237\n## 5 17.295693 240.917066\n## 6 10.700695 117.691234\n\nPerform the following tasks:\n\nFit a simple linear regression.\nCheck the residuals.\nPerform another simple linear regression with a modified formula, if needed.\nCreate a scatter plot of the data and add a regression line for the first fit in black and one for the second fit in red. The second model cannot be plotted with the abline() function. Use the following code instead:\n\n\nlines(sort(x), predict(fit2, newdata = data.frame(x = sort(x))), col = \"red\")\n\nYou may also need the following functions:\n\nlm()\nsummary()\npar(mfrow = c(2, 2))\nplot()\nabline()\n\nUse your results to answer the following questions on elearning-extern (Q 6-8).\n\n\n\n\n\n\nQuestion\n\n\n\n\nWhat pattern do the residuals of the first regression model show when plotted against the fitted values?\nWhat do you have to do to improve your first regression model?\nIdentify the correct statement(s) about the residuals of the modified model.\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nset.seed(234)\nx = rnorm(40, mean = 10, sd = 5)\ny = 10 - 2*x + 0.9 * x^2 + rnorm(40, mean=5, sd = 20)\ndat <- data.frame(x, y)\n\n# simple linear regression\nfit <- lm(y ~ x, dat)\n\n# check residuals\nop = par(mfrow=c(2,2))\nplot(fit) # residuals show a parabolic relationship (see first plot)  -> to improve, fit a quadratic relationship\n\n\n\npar(op)\n\n# scatter plot\nplot(y ~ x, data = dat)\nabline(fit)\n\n\n\n\nsummary(fit) # significantly positively correlated, but this doesn't tell the full story because the residuals are not okay\n## \n## Call:\n## lm(formula = y ~ x, data = dat)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -39.884 -22.208  -4.948  10.602 118.164 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)   -8.459     10.973  -0.771    0.446    \n## x             11.465      1.019  11.248 1.18e-13 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 32.11 on 38 degrees of freedom\n## Multiple R-squared:  0.769,  Adjusted R-squared:  0.763 \n## F-statistic: 126.5 on 1 and 38 DF,  p-value: 1.176e-13\n\n# improved regression model\nfit2 = lm(y ~ x + I(x^2), dat)\n\n# check residuals\nop = par(mfrow=c(2,2))\nplot(fit2) # no pattern in residuals anymore (first plot) -> fit is fine\n\n\n\npar(op)\n\n# scatter plot\nplot(y ~ x, data = dat)\nabline(fit)\nlines(sort(x), predict(fit2, newdata = data.frame(x = sort(x))), col = \"red\")\n\n\n\n\n\nsummary(fit2) # significantly negatively correlated, trustworthy now, because residuals are sufficiently uniformly distributed (first plot in plot(fit2))\n## \n## Call:\n## lm(formula = y ~ x + I(x^2), data = dat)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -33.174 -11.444   0.938  10.164  40.666 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 17.87505    6.00812   2.975  0.00513 ** \n## x           -1.10100    1.27706  -0.862  0.39417    \n## I(x^2)       0.80752    0.07526  10.730 6.49e-13 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 16.05 on 37 degrees of freedom\n## Multiple R-squared:  0.9438, Adjusted R-squared:  0.9408 \n## F-statistic: 310.9 on 2 and 37 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "5-MultipleRegression.html#classroom-demo",
    "href": "5-MultipleRegression.html#classroom-demo",
    "title": "\n5  Multiple regression\n",
    "section": "\n5.1 Classroom demo",
    "text": "5.1 Classroom demo\n\n# Multiple linear regression\n\n## first remove observations with NA values\nnewAirquality = airquality[complete.cases(airquality),]\nsummary(newAirquality)\n\n     Ozone          Solar.R           Wind            Temp      \n Min.   :  1.0   Min.   :  7.0   Min.   : 2.30   Min.   :57.00  \n 1st Qu.: 18.0   1st Qu.:113.5   1st Qu.: 7.40   1st Qu.:71.00  \n Median : 31.0   Median :207.0   Median : 9.70   Median :79.00  \n Mean   : 42.1   Mean   :184.8   Mean   : 9.94   Mean   :77.79  \n 3rd Qu.: 62.0   3rd Qu.:255.5   3rd Qu.:11.50   3rd Qu.:84.50  \n Max.   :168.0   Max.   :334.0   Max.   :20.70   Max.   :97.00  \n     Month            Day       \n Min.   :5.000   Min.   : 1.00  \n 1st Qu.:6.000   1st Qu.: 9.00  \n Median :7.000   Median :16.00  \n Mean   :7.216   Mean   :15.95  \n 3rd Qu.:9.000   3rd Qu.:22.50  \n Max.   :9.000   Max.   :31.00  \n\n# simple regression\nm0 = lm(Ozone ~ Temp , data = newAirquality)\nsummary(m0)\n\n\nCall:\nlm(formula = Ozone ~ Temp, data = newAirquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-40.922 -17.459  -0.874  10.444 118.078 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -147.6461    18.7553  -7.872 2.76e-12 ***\nTemp           2.4391     0.2393  10.192  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 23.92 on 109 degrees of freedom\nMultiple R-squared:  0.488, Adjusted R-squared:  0.4833 \nF-statistic: 103.9 on 1 and 109 DF,  p-value: < 2.2e-16\n\nplot(m0)\n\n\n\n\n\n\n\n\n\n\n\n\nplot(Ozone ~ Temp , data = newAirquality)\nabline(m0, col = \"blue\", lwd = 3)\n\n\n\n# Today: multiple linear regression\nm1 = lm(Ozone ~ Temp + Wind , data = newAirquality)\n# have a look at the residuals:\nop <- par(mfrow = c(2,2))\nplot(m1)\n\n\n\npar(op)\n\nsummary(m1)\n\n\nCall:\nlm(formula = Ozone ~ Temp + Wind, data = newAirquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-42.156 -13.216  -3.123  10.598  98.492 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -67.3220    23.6210  -2.850  0.00524 ** \nTemp          1.8276     0.2506   7.294 5.29e-11 ***\nWind         -3.2948     0.6711  -4.909 3.26e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 21.73 on 108 degrees of freedom\nMultiple R-squared:  0.5814,    Adjusted R-squared:  0.5736 \nF-statistic: 74.99 on 2 and 108 DF,  p-value: < 2.2e-16\n\n# plotting multiple regression outputs\nlibrary(effects)\n\nLoading required package: carData\n\n\nlattice theme set by effectsTheme()\nSee ?effectsTheme for details.\n\nplot(allEffects(m1))\n\n\n\n# Include interaction\nm2 = lm(Ozone ~  scale(Wind)* scale(Temp) , data = newAirquality)\n# if including interactions, always scale your predictor variables!\n# scale: subtracts the mean and divides by standard deviation\nsummary(m2)\n\n\nCall:\nlm(formula = Ozone ~ scale(Wind) * scale(Temp), data = newAirquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-40.930 -11.193  -3.034   8.193  97.456 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)               38.469      2.137  18.002  < 2e-16 ***\nscale(Wind)              -11.758      2.238  -5.253 7.68e-07 ***\nscale(Temp)               17.544      2.239   7.837 3.62e-12 ***\nscale(Wind):scale(Temp)   -7.367      1.848  -3.987 0.000123 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 20.37 on 107 degrees of freedom\nMultiple R-squared:  0.6355,    Adjusted R-squared:  0.6253 \nF-statistic: 62.19 on 3 and 107 DF,  p-value: < 2.2e-16\n\nop <- par(mfrow = c(2,2))\nplot(m2)\n\n\n\npar(op)\n\nplot(allEffects(m2))\n\nWarning in Analyze.model(focal.predictors, mod, xlevels, default.levels, : the\npredictors scale(Wind), scale(Temp) are one-column matrices that were converted\nto vectors\n\n\n\n\n# transform response values \nm3 = lm(sqrt(Ozone) ~ scale(Wind) * scale(Temp) , data = newAirquality)\nsummary(m3)\n\n\nCall:\nlm(formula = sqrt(Ozone) ~ scale(Wind) * scale(Temp), data = newAirquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.1323 -0.9484 -0.0814  0.8196  4.9871 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)               5.8135     0.1507  38.569  < 2e-16 ***\nscale(Wind)              -0.7726     0.1579  -4.893 3.52e-06 ***\nscale(Temp)               1.4441     0.1579   9.146 4.36e-15 ***\nscale(Wind):scale(Temp)  -0.4119     0.1303  -3.161  0.00205 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.437 on 107 degrees of freedom\nMultiple R-squared:  0.6628,    Adjusted R-squared:  0.6534 \nF-statistic: 70.12 on 3 and 107 DF,  p-value: < 2.2e-16\n\n# Are residuals better now?\nop <- par(mfrow = c(2,2))\nplot(m3)\n\n\n\npar(op) # a little bit better\n\n# now plot and interpret the results\nplot(allEffects(m3))\n\nWarning in Analyze.model(focal.predictors, mod, xlevels, default.levels, : the\npredictors scale(Wind), scale(Temp) are one-column matrices that were converted\nto vectors\n\n\n\n\nsummary(m3)\n\n\nCall:\nlm(formula = sqrt(Ozone) ~ scale(Wind) * scale(Temp), data = newAirquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.1323 -0.9484 -0.0814  0.8196  4.9871 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)               5.8135     0.1507  38.569  < 2e-16 ***\nscale(Wind)              -0.7726     0.1579  -4.893 3.52e-06 ***\nscale(Temp)               1.4441     0.1579   9.146 4.36e-15 ***\nscale(Wind):scale(Temp)  -0.4119     0.1303  -3.161  0.00205 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.437 on 107 degrees of freedom\nMultiple R-squared:  0.6628,    Adjusted R-squared:  0.6534 \nF-statistic: 70.12 on 3 and 107 DF,  p-value: < 2.2e-16\n\n## Omitted variable bias\n\nboth = lm(Ozone ~ Wind + Temp, newAirquality)\nwind = lm(Ozone ~ Wind , newAirquality)\ntemp = lm(Ozone ~ Temp, newAirquality)\nsummary(both)\n\n\nCall:\nlm(formula = Ozone ~ Wind + Temp, data = newAirquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-42.156 -13.216  -3.123  10.598  98.492 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -67.3220    23.6210  -2.850  0.00524 ** \nWind         -3.2948     0.6711  -4.909 3.26e-06 ***\nTemp          1.8276     0.2506   7.294 5.29e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 21.73 on 108 degrees of freedom\nMultiple R-squared:  0.5814,    Adjusted R-squared:  0.5736 \nF-statistic: 74.99 on 2 and 108 DF,  p-value: < 2.2e-16\n\nsummary(wind)\n\n\nCall:\nlm(formula = Ozone ~ Wind, data = newAirquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-43.513 -18.597  -5.035  15.814  88.437 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  99.0413     7.4724   13.25  < 2e-16 ***\nWind         -5.7288     0.7082   -8.09 9.09e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 26.42 on 109 degrees of freedom\nMultiple R-squared:  0.3752,    Adjusted R-squared:  0.3694 \nF-statistic: 65.44 on 1 and 109 DF,  p-value: 9.089e-13\n\nslopes <- data.frame(\n  predictor = c(\"Wind\", \"Temp\"),\n  both.pred = round(coef(both)[2:3], digits = 2),\n  only.wind = c(round(coef(wind)[2], digits = 2), \"NA\"),\n  only.temp = c(\"NA\", round(coef(temp)[2], digits = 2))\n)\nslopes\n\n     predictor both.pred only.wind only.temp\nWind      Wind     -3.29     -5.73        NA\nTemp      Temp      1.83        NA      2.44\n\n## Making everything more complex\nstr(newAirquality)\n\n'data.frame':   111 obs. of  6 variables:\n $ Ozone  : int  41 36 12 18 23 19 8 16 11 14 ...\n $ Solar.R: int  190 118 149 313 299 99 19 256 290 274 ...\n $ Wind   : num  7.4 8 12.6 11.5 8.6 13.8 20.1 9.7 9.2 10.9 ...\n $ Temp   : int  67 72 74 62 65 59 61 69 66 68 ...\n $ Month  : int  5 5 5 5 5 5 5 5 5 5 ...\n $ Day    : int  1 2 3 4 7 8 9 12 13 14 ...\n\n# How does everything change, if we have factorial predictors?\nnewAirquality$MonthFactor = as.factor(newAirquality$Month)\n\nm4 = lm(sqrt(Ozone) ~ MonthFactor + scale(Wind) * scale(Temp) * scale(Solar.R) , \n        data = newAirquality)\nsummary(m4)\n\n\nCall:\nlm(formula = sqrt(Ozone) ~ MonthFactor + scale(Wind) * scale(Temp) * \n    scale(Solar.R), data = newAirquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.6096 -0.8869 -0.2067  0.7647  4.3191 \n\nCoefficients:\n                                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                             6.12172    0.37148  16.479  < 2e-16 ***\nMonthFactor6                           -0.54487    0.60633  -0.899 0.371025    \nMonthFactor7                           -0.37571    0.51347  -0.732 0.466072    \nMonthFactor8                           -0.03770    0.52839  -0.071 0.943262    \nMonthFactor9                           -0.74343    0.43308  -1.717 0.089179 .  \nscale(Wind)                            -0.76983    0.16456  -4.678 9.18e-06 ***\nscale(Temp)                             1.35350    0.20937   6.465 3.86e-09 ***\nscale(Solar.R)                          0.65689    0.16212   4.052 0.000101 ***\nscale(Wind):scale(Temp)                -0.30440    0.14655  -2.077 0.040379 *  \nscale(Wind):scale(Solar.R)             -0.07695    0.17222  -0.447 0.655999    \nscale(Temp):scale(Solar.R)              0.22985    0.15451   1.488 0.140040    \nscale(Wind):scale(Temp):scale(Solar.R)  0.03202    0.15179   0.211 0.833366    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.328 on 99 degrees of freedom\nMultiple R-squared:  0.7335,    Adjusted R-squared:  0.7039 \nF-statistic: 24.78 on 11 and 99 DF,  p-value: < 2.2e-16\n\nm5 = lm(sqrt(Ozone) ~ MonthFactor + scale(Wind) + scale(Temp) + scale(Solar.R) \n                      + scale(Wind):scale(Temp)\n                      + scale(Wind):scale(Solar.R)\n                      + scale(Temp):scale(Solar.R), \n        data = newAirquality)\nsummary(m5)\n\n\nCall:\nlm(formula = sqrt(Ozone) ~ MonthFactor + scale(Wind) + scale(Temp) + \n    scale(Solar.R) + scale(Wind):scale(Temp) + scale(Wind):scale(Solar.R) + \n    scale(Temp):scale(Solar.R), data = newAirquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.6023 -0.9182 -0.2180  0.7713  4.3209 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                 6.12350    0.36960  16.568  < 2e-16 ***\nMonthFactor6               -0.54871    0.60315  -0.910   0.3652    \nMonthFactor7               -0.39194    0.50524  -0.776   0.4397    \nMonthFactor8               -0.04701    0.52402  -0.090   0.9287    \nMonthFactor9               -0.74873    0.43028  -1.740   0.0849 .  \nscale(Wind)                -0.75588    0.14997  -5.040 2.07e-06 ***\nscale(Temp)                 1.35192    0.20823   6.492 3.29e-09 ***\nscale(Solar.R)              0.65178    0.15953   4.086 8.88e-05 ***\nscale(Wind):scale(Temp)    -0.31305    0.14002  -2.236   0.0276 *  \nscale(Wind):scale(Solar.R) -0.09259    0.15469  -0.599   0.5508    \nscale(Temp):scale(Solar.R)  0.23573    0.15126   1.558   0.1223    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.321 on 100 degrees of freedom\nMultiple R-squared:  0.7334,    Adjusted R-squared:  0.7068 \nF-statistic: 27.51 on 10 and 100 DF,  p-value: < 2.2e-16\n\n# short form for including only two-wac interactions:\n\nm5 = lm(sqrt(Ozone) ~ MonthFactor + (scale(Wind) + scale(Temp) + scale(Solar.R))^2,\n        data = newAirquality)\nsummary(m5)\n\n\nCall:\nlm(formula = sqrt(Ozone) ~ MonthFactor + (scale(Wind) + scale(Temp) + \n    scale(Solar.R))^2, data = newAirquality)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.6023 -0.9182 -0.2180  0.7713  4.3209 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                 6.12350    0.36960  16.568  < 2e-16 ***\nMonthFactor6               -0.54871    0.60315  -0.910   0.3652    \nMonthFactor7               -0.39194    0.50524  -0.776   0.4397    \nMonthFactor8               -0.04701    0.52402  -0.090   0.9287    \nMonthFactor9               -0.74873    0.43028  -1.740   0.0849 .  \nscale(Wind)                -0.75588    0.14997  -5.040 2.07e-06 ***\nscale(Temp)                 1.35192    0.20823   6.492 3.29e-09 ***\nscale(Solar.R)              0.65178    0.15953   4.086 8.88e-05 ***\nscale(Wind):scale(Temp)    -0.31305    0.14002  -2.236   0.0276 *  \nscale(Wind):scale(Solar.R) -0.09259    0.15469  -0.599   0.5508    \nscale(Temp):scale(Solar.R)  0.23573    0.15126   1.558   0.1223    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.321 on 100 degrees of freedom\nMultiple R-squared:  0.7334,    Adjusted R-squared:  0.7068 \nF-statistic: 27.51 on 10 and 100 DF,  p-value: < 2.2e-16\n\n# get overall effect of Month:\nanova(m5)\n\nAnalysis of Variance Table\n\nResponse: sqrt(Ozone)\n                            Df  Sum Sq Mean Sq F value    Pr(>F)    \nMonthFactor                  4 158.726  39.681 22.7249 2.261e-13 ***\nscale(Wind)                  1 149.523 149.523 85.6296 4.282e-15 ***\nscale(Temp)                  1 126.124 126.124 72.2290 1.899e-13 ***\nscale(Solar.R)               1  19.376  19.376 11.0961 0.0012129 ** \nscale(Wind):scale(Temp)      1  20.639  20.639 11.8198 0.0008556 ***\nscale(Wind):scale(Solar.R)   1   1.803   1.803  1.0328 0.3119518    \nscale(Temp):scale(Solar.R)   1   4.241   4.241  2.4288 0.1222856    \nResiduals                  100 174.616   1.746                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# this is doing a type I ANOVA = sequential\n# order in which you include the predictors changes the estimates and p-values\n\n# If you want to do a type II ANOVA, use ANova() from the car package\nlibrary(car)\nAnova(m5) # Anova with capital A\n\nAnova Table (Type II tests)\n\nResponse: sqrt(Ozone)\n                            Sum Sq  Df F value    Pr(>F)    \nMonthFactor                  9.557   4  1.3683 0.2503349    \nscale(Wind)                 41.993   1 24.0488 3.641e-06 ***\nscale(Temp)                 78.938   1 45.2067 1.112e-09 ***\nscale(Solar.R)              23.189   1 13.2797 0.0004276 ***\nscale(Wind):scale(Temp)      8.728   1  4.9983 0.0275955 *  \nscale(Wind):scale(Solar.R)   0.626   1  0.3582 0.5508395    \nscale(Temp):scale(Solar.R)   4.241   1  2.4288 0.1222856    \nResiduals                  174.616 100                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n#type II ANOVA: all other predictors have already been taken into account\n# Does an additional predictor explain some of the variance on top of that?\n\n\n# Model selection-----\n\n# Compare different competing models:\n# let's compare models m3 and m5 to decide which one explains our data better:\n# 1. LRT\nanova(m3, m5)\n\nAnalysis of Variance Table\n\nModel 1: sqrt(Ozone) ~ scale(Wind) * scale(Temp)\nModel 2: sqrt(Ozone) ~ MonthFactor + (scale(Wind) + scale(Temp) + scale(Solar.R))^2\n  Res.Df    RSS Df Sum of Sq      F  Pr(>F)   \n1    107 220.86                               \n2    100 174.62  7    46.242 3.7831 0.00111 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# RSS = residual sum of squares = variance not explained by the model\n# smaller RSS = better model\n# p-value\n\n#2. AIC\nAIC(m3)\n\n[1] 401.3714\n\nAIC(m5)\n\n[1] 389.2942\n\n# also here, model m5 is better\n\n\n#### Demonstration: Why interpretation of effect sizes and p-values \n### after extensive model selection is not a good idea:\nlibrary(MASS)\nset.seed(1)\n#make up predictors:\ndat = data.frame(matrix(runif(20000), ncol = 100))\n# create a response variable\ndat$y = rnorm(200)\nfullModel = lm(y ~ ., data = dat)\nsum <- summary(fullModel)\nmean(sum$coefficients[,4] < 0.05)\n\n[1] 0.01980198\n\n# 0.019: less than 2 % false positives = type I error rate\n\nselection = stepAIC(fullModel)\n\nStart:  AIC=21.85\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10 + X11 + \n    X12 + X13 + X14 + X15 + X16 + X17 + X18 + X19 + X20 + X21 + \n    X22 + X23 + X24 + X25 + X26 + X27 + X28 + X29 + X30 + X31 + \n    X32 + X33 + X34 + X35 + X36 + X37 + X38 + X39 + X40 + X41 + \n    X42 + X43 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + X51 + \n    X52 + X53 + X54 + X55 + X56 + X57 + X58 + X59 + X60 + X61 + \n    X62 + X63 + X64 + X65 + X66 + X67 + X68 + X69 + X70 + X71 + \n    X72 + X73 + X74 + X75 + X76 + X77 + X78 + X79 + X80 + X81 + \n    X82 + X83 + X84 + X85 + X86 + X87 + X88 + X89 + X90 + X91 + \n    X92 + X93 + X94 + X95 + X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS    AIC\n- X70   1    0.0008 81.253 19.850\n- X22   1    0.0012 81.253 19.851\n- X82   1    0.0013 81.253 19.851\n- X38   1    0.0024 81.254 19.854\n- X93   1    0.0044 81.256 19.858\n- X19   1    0.0045 81.257 19.859\n- X10   1    0.0048 81.257 19.860\n- X21   1    0.0054 81.257 19.861\n- X59   1    0.0054 81.257 19.861\n- X17   1    0.0079 81.260 19.867\n- X86   1    0.0128 81.265 19.879\n- X69   1    0.0256 81.278 19.911\n- X55   1    0.0258 81.278 19.911\n- X54   1    0.0374 81.289 19.940\n- X52   1    0.0378 81.290 19.941\n- X78   1    0.0386 81.291 19.943\n- X61   1    0.0438 81.296 19.955\n- X83   1    0.0460 81.298 19.961\n- X79   1    0.0475 81.300 19.965\n- X32   1    0.0478 81.300 19.965\n- X99   1    0.0577 81.310 19.990\n- X31   1    0.0615 81.314 19.999\n- X39   1    0.0627 81.315 20.002\n- X96   1    0.0631 81.315 20.003\n- X40   1    0.0642 81.316 20.006\n- X43   1    0.0659 81.318 20.010\n- X92   1    0.0666 81.319 20.012\n- X28   1    0.0741 81.326 20.030\n- X50   1    0.0755 81.328 20.034\n- X67   1    0.0894 81.341 20.068\n- X12   1    0.0935 81.346 20.078\n- X15   1    0.0982 81.350 20.089\n- X57   1    0.1012 81.353 20.096\n- X84   1    0.1016 81.354 20.098\n- X91   1    0.1147 81.367 20.130\n- X60   1    0.1296 81.382 20.166\n- X9    1    0.1329 81.385 20.174\n- X98   1    0.1519 81.404 20.221\n- X76   1    0.1570 81.409 20.234\n- X14   1    0.2006 81.453 20.341\n- X26   1    0.2222 81.474 20.394\n- X41   1    0.2370 81.489 20.430\n- X63   1    0.2372 81.489 20.431\n- X16   1    0.2554 81.507 20.476\n- X44   1    0.2567 81.509 20.479\n- X36   1    0.2588 81.511 20.484\n- X51   1    0.2592 81.511 20.485\n- X35   1    0.2695 81.522 20.510\n- X6    1    0.2811 81.533 20.538\n- X4    1    0.2979 81.550 20.580\n- X34   1    0.3073 81.559 20.603\n- X58   1    0.3217 81.574 20.638\n- X5    1    0.3353 81.587 20.671\n- X77   1    0.3377 81.590 20.677\n- X97   1    0.3409 81.593 20.685\n- X85   1    0.3452 81.597 20.696\n- X95   1    0.3488 81.601 20.704\n- X74   1    0.3669 81.619 20.749\n- X8    1    0.4267 81.679 20.895\n- X42   1    0.4722 81.724 21.006\n- X25   1    0.4972 81.749 21.068\n- X56   1    0.5234 81.775 21.132\n- X33   1    0.5292 81.781 21.146\n- X27   1    0.5394 81.791 21.171\n- X30   1    0.5662 81.818 21.237\n- X24   1    0.5671 81.819 21.239\n- X3    1    0.5750 81.827 21.258\n- X20   1    0.5784 81.830 21.266\n- X62   1    0.5972 81.849 21.312\n- X11   1    0.6222 81.874 21.373\n- X72   1    0.6507 81.903 21.443\n- X53   1    0.7050 81.957 21.576\n- X18   1    0.7409 81.993 21.663\n- X37   1    0.7514 82.003 21.689\n- X81   1    0.7558 82.008 21.699\n- X80   1    0.7764 82.028 21.750\n- X73   1    0.7900 82.042 21.783\n- X45   1    0.8081 82.060 21.827\n<none>              81.252 21.848\n- X68   1    0.8284 82.080 21.877\n- X90   1    0.9611 82.213 22.200\n- X66   1    0.9890 82.241 22.267\n- X100  1    1.0021 82.254 22.299\n- X29   1    1.0229 82.275 22.350\n- X87   1    1.0682 82.320 22.460\n- X65   1    1.1207 82.373 22.587\n- X49   1    1.1208 82.373 22.588\n- X89   1    1.1387 82.391 22.631\n- X64   1    1.2574 82.509 22.919\n- X71   1    1.7208 82.973 24.039\n- X13   1    1.7991 83.051 24.228\n- X88   1    2.0610 83.313 24.858\n- X94   1    2.0874 83.339 24.921\n- X2    1    2.1305 83.383 25.024\n- X7    1    2.1883 83.440 25.163\n- X1    1    2.5907 83.843 26.125\n- X48   1    2.7871 84.039 26.593\n- X23   1    2.8547 84.107 26.754\n- X47   1    2.9934 84.245 27.084\n- X46   1    3.2404 84.492 27.669\n- X75   1    3.4289 84.681 28.115\n\nStep:  AIC=19.85\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10 + X11 + \n    X12 + X13 + X14 + X15 + X16 + X17 + X18 + X19 + X20 + X21 + \n    X22 + X23 + X24 + X25 + X26 + X27 + X28 + X29 + X30 + X31 + \n    X32 + X33 + X34 + X35 + X36 + X37 + X38 + X39 + X40 + X41 + \n    X42 + X43 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + X51 + \n    X52 + X53 + X54 + X55 + X56 + X57 + X58 + X59 + X60 + X61 + \n    X62 + X63 + X64 + X65 + X66 + X67 + X68 + X69 + X71 + X72 + \n    X73 + X74 + X75 + X76 + X77 + X78 + X79 + X80 + X81 + X82 + \n    X83 + X84 + X85 + X86 + X87 + X88 + X89 + X90 + X91 + X92 + \n    X93 + X94 + X95 + X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS    AIC\n- X82   1    0.0014 81.254 17.853\n- X22   1    0.0017 81.255 17.854\n- X38   1    0.0021 81.255 17.855\n- X19   1    0.0042 81.257 17.860\n- X10   1    0.0043 81.257 17.860\n- X93   1    0.0043 81.257 17.860\n- X21   1    0.0050 81.258 17.862\n- X59   1    0.0050 81.258 17.862\n- X17   1    0.0084 81.261 17.870\n- X86   1    0.0121 81.265 17.880\n- X69   1    0.0248 81.278 17.911\n- X55   1    0.0271 81.280 17.916\n- X78   1    0.0378 81.291 17.943\n- X54   1    0.0379 81.291 17.943\n- X52   1    0.0383 81.291 17.944\n- X61   1    0.0456 81.298 17.962\n- X79   1    0.0474 81.300 17.966\n- X32   1    0.0483 81.301 17.969\n- X83   1    0.0492 81.302 17.971\n- X99   1    0.0575 81.310 17.991\n- X31   1    0.0623 81.315 18.003\n- X96   1    0.0631 81.316 18.005\n- X40   1    0.0641 81.317 18.007\n- X39   1    0.0643 81.317 18.008\n- X43   1    0.0678 81.321 18.017\n- X92   1    0.0689 81.322 18.019\n- X28   1    0.0733 81.326 18.030\n- X50   1    0.0747 81.328 18.034\n- X67   1    0.0901 81.343 18.071\n- X12   1    0.0927 81.346 18.078\n- X57   1    0.1008 81.354 18.098\n- X15   1    0.1020 81.355 18.101\n- X84   1    0.1022 81.355 18.101\n- X91   1    0.1142 81.367 18.131\n- X60   1    0.1290 81.382 18.167\n- X9    1    0.1340 81.387 18.179\n- X98   1    0.1526 81.405 18.225\n- X76   1    0.1585 81.411 18.239\n- X14   1    0.2020 81.455 18.346\n- X26   1    0.2226 81.475 18.397\n- X63   1    0.2365 81.489 18.431\n- X41   1    0.2486 81.501 18.461\n- X16   1    0.2547 81.508 18.476\n- X44   1    0.2561 81.509 18.479\n- X51   1    0.2591 81.512 18.486\n- X36   1    0.2632 81.516 18.497\n- X35   1    0.2696 81.522 18.512\n- X6    1    0.2813 81.534 18.541\n- X4    1    0.2972 81.550 18.580\n- X34   1    0.3078 81.561 18.606\n- X58   1    0.3290 81.582 18.658\n- X5    1    0.3347 81.588 18.672\n- X97   1    0.3404 81.593 18.686\n- X77   1    0.3458 81.599 18.699\n- X95   1    0.3502 81.603 18.710\n- X85   1    0.3506 81.603 18.711\n- X74   1    0.3660 81.619 18.749\n- X8    1    0.4284 81.681 18.901\n- X42   1    0.4797 81.733 19.027\n- X25   1    0.4978 81.751 19.071\n- X56   1    0.5242 81.777 19.136\n- X33   1    0.5290 81.782 19.148\n- X27   1    0.5434 81.796 19.183\n- X24   1    0.5681 81.821 19.243\n- X20   1    0.5776 81.830 19.267\n- X30   1    0.5796 81.832 19.271\n- X3    1    0.5889 81.842 19.294\n- X62   1    0.5999 81.853 19.321\n- X11   1    0.6218 81.875 19.375\n- X72   1    0.6507 81.904 19.445\n- X53   1    0.7108 81.964 19.592\n- X18   1    0.7401 81.993 19.663\n- X37   1    0.7539 82.007 19.697\n- X81   1    0.7709 82.024 19.738\n- X80   1    0.7809 82.034 19.763\n- X73   1    0.7906 82.043 19.786\n- X45   1    0.8080 82.061 19.829\n<none>              81.253 19.850\n- X68   1    0.8503 82.103 19.932\n- X90   1    0.9610 82.214 20.201\n- X66   1    0.9915 82.244 20.276\n- X100  1    1.0038 82.257 20.305\n- X29   1    1.0266 82.279 20.361\n- X87   1    1.0964 82.349 20.530\n- X49   1    1.1244 82.377 20.598\n- X89   1    1.1389 82.392 20.634\n- X65   1    1.1761 82.429 20.724\n- X64   1    1.2568 82.510 20.920\n- X71   1    1.7537 83.007 22.120\n- X13   1    1.8213 83.074 22.283\n- X88   1    2.0650 83.318 22.869\n- X2    1    2.1433 83.396 23.057\n- X94   1    2.1762 83.429 23.136\n- X7    1    2.1875 83.440 23.163\n- X1    1    2.6066 83.859 24.165\n- X48   1    2.8147 84.068 24.661\n- X23   1    2.8801 84.133 24.816\n- X47   1    2.9986 84.251 25.098\n- X46   1    3.2401 84.493 25.670\n- X75   1    3.4341 84.687 26.129\n\nStep:  AIC=17.85\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10 + X11 + \n    X12 + X13 + X14 + X15 + X16 + X17 + X18 + X19 + X20 + X21 + \n    X22 + X23 + X24 + X25 + X26 + X27 + X28 + X29 + X30 + X31 + \n    X32 + X33 + X34 + X35 + X36 + X37 + X38 + X39 + X40 + X41 + \n    X42 + X43 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + X51 + \n    X52 + X53 + X54 + X55 + X56 + X57 + X58 + X59 + X60 + X61 + \n    X62 + X63 + X64 + X65 + X66 + X67 + X68 + X69 + X71 + X72 + \n    X73 + X74 + X75 + X76 + X77 + X78 + X79 + X80 + X81 + X83 + \n    X84 + X85 + X86 + X87 + X88 + X89 + X90 + X91 + X92 + X93 + \n    X94 + X95 + X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS    AIC\n- X22   1    0.0014 81.256 15.857\n- X38   1    0.0022 81.256 15.859\n- X10   1    0.0034 81.258 15.861\n- X93   1    0.0040 81.258 15.863\n- X19   1    0.0041 81.258 15.863\n- X59   1    0.0045 81.259 15.864\n- X21   1    0.0050 81.259 15.866\n- X17   1    0.0092 81.263 15.876\n- X86   1    0.0133 81.268 15.886\n- X69   1    0.0260 81.280 15.917\n- X55   1    0.0274 81.282 15.921\n- X54   1    0.0372 81.291 15.945\n- X52   1    0.0379 81.292 15.947\n- X78   1    0.0386 81.293 15.948\n- X61   1    0.0452 81.299 15.964\n- X32   1    0.0480 81.302 15.971\n- X83   1    0.0488 81.303 15.973\n- X79   1    0.0495 81.304 15.975\n- X99   1    0.0580 81.312 15.996\n- X31   1    0.0619 81.316 16.005\n- X40   1    0.0630 81.317 16.008\n- X96   1    0.0644 81.319 16.012\n- X39   1    0.0651 81.319 16.013\n- X43   1    0.0672 81.321 16.018\n- X92   1    0.0676 81.322 16.020\n- X28   1    0.0769 81.331 16.042\n- X50   1    0.0807 81.335 16.052\n- X67   1    0.0890 81.343 16.072\n- X12   1    0.0919 81.346 16.079\n- X57   1    0.1013 81.356 16.102\n- X15   1    0.1029 81.357 16.106\n- X84   1    0.1041 81.358 16.109\n- X91   1    0.1151 81.369 16.136\n- X60   1    0.1278 81.382 16.167\n- X9    1    0.1388 81.393 16.195\n- X76   1    0.1597 81.414 16.246\n- X98   1    0.1718 81.426 16.276\n- X14   1    0.2053 81.460 16.358\n- X26   1    0.2217 81.476 16.398\n- X63   1    0.2377 81.492 16.438\n- X41   1    0.2488 81.503 16.465\n- X44   1    0.2563 81.511 16.483\n- X16   1    0.2680 81.522 16.512\n- X51   1    0.2693 81.524 16.515\n- X36   1    0.2700 81.524 16.517\n- X35   1    0.2763 81.531 16.532\n- X6    1    0.2821 81.536 16.546\n- X4    1    0.2958 81.550 16.580\n- X58   1    0.3301 81.584 16.664\n- X34   1    0.3317 81.586 16.668\n- X5    1    0.3333 81.588 16.672\n- X97   1    0.3403 81.595 16.689\n- X85   1    0.3505 81.605 16.714\n- X95   1    0.3507 81.605 16.715\n- X77   1    0.3559 81.610 16.727\n- X74   1    0.3665 81.621 16.753\n- X8    1    0.4275 81.682 16.903\n- X42   1    0.4828 81.737 17.038\n- X25   1    0.5189 81.773 17.126\n- X56   1    0.5259 81.780 17.143\n- X33   1    0.5280 81.782 17.148\n- X27   1    0.5457 81.800 17.192\n- X24   1    0.5698 81.824 17.251\n- X30   1    0.5782 81.832 17.271\n- X20   1    0.5827 81.837 17.282\n- X3    1    0.5876 81.842 17.294\n- X62   1    0.6008 81.855 17.326\n- X11   1    0.6473 81.902 17.440\n- X72   1    0.6557 81.910 17.461\n- X53   1    0.7219 81.976 17.622\n- X37   1    0.7625 82.017 17.721\n- X81   1    0.7796 82.034 17.763\n- X18   1    0.7920 82.046 17.793\n- X73   1    0.8012 82.055 17.816\n- X80   1    0.8053 82.060 17.826\n<none>              81.254 17.853\n- X45   1    0.8283 82.083 17.882\n- X68   1    0.8582 82.112 17.954\n- X100  1    1.0024 82.257 18.305\n- X66   1    1.0231 82.277 18.356\n- X29   1    1.0297 82.284 18.372\n- X90   1    1.0426 82.297 18.403\n- X87   1    1.0956 82.350 18.532\n- X49   1    1.1235 82.378 18.599\n- X89   1    1.1396 82.394 18.639\n- X65   1    1.1817 82.436 18.741\n- X64   1    1.2812 82.535 18.982\n- X71   1    1.7572 83.011 20.132\n- X13   1    1.8201 83.074 20.284\n- X88   1    2.0887 83.343 20.929\n- X2    1    2.1454 83.400 21.065\n- X7    1    2.1960 83.450 21.187\n- X94   1    2.2800 83.534 21.388\n- X1    1    2.6227 83.877 22.207\n- X48   1    2.8156 84.070 22.666\n- X23   1    2.8933 84.148 22.851\n- X47   1    3.0028 84.257 23.111\n- X46   1    3.2413 84.496 23.676\n- X75   1    3.4606 84.715 24.195\n\nStep:  AIC=15.86\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10 + X11 + \n    X12 + X13 + X14 + X15 + X16 + X17 + X18 + X19 + X20 + X21 + \n    X23 + X24 + X25 + X26 + X27 + X28 + X29 + X30 + X31 + X32 + \n    X33 + X34 + X35 + X36 + X37 + X38 + X39 + X40 + X41 + X42 + \n    X43 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + X51 + X52 + \n    X53 + X54 + X55 + X56 + X57 + X58 + X59 + X60 + X61 + X62 + \n    X63 + X64 + X65 + X66 + X67 + X68 + X69 + X71 + X72 + X73 + \n    X74 + X75 + X76 + X77 + X78 + X79 + X80 + X81 + X83 + X84 + \n    X85 + X86 + X87 + X88 + X89 + X90 + X91 + X92 + X93 + X94 + \n    X95 + X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS    AIC\n- X38   1    0.0021 81.258 13.862\n- X10   1    0.0035 81.259 13.865\n- X19   1    0.0044 81.260 13.867\n- X93   1    0.0044 81.260 13.867\n- X59   1    0.0046 81.260 13.868\n- X21   1    0.0050 81.261 13.869\n- X17   1    0.0088 81.264 13.878\n- X86   1    0.0131 81.269 13.889\n- X69   1    0.0284 81.284 13.927\n- X55   1    0.0286 81.284 13.927\n- X54   1    0.0361 81.292 13.945\n- X52   1    0.0368 81.292 13.947\n- X78   1    0.0380 81.294 13.950\n- X61   1    0.0461 81.302 13.970\n- X32   1    0.0466 81.302 13.971\n- X79   1    0.0484 81.304 13.976\n- X83   1    0.0488 81.304 13.977\n- X99   1    0.0578 81.313 13.999\n- X40   1    0.0628 81.318 14.011\n- X31   1    0.0647 81.320 14.016\n- X39   1    0.0659 81.322 14.019\n- X96   1    0.0659 81.322 14.019\n- X43   1    0.0660 81.322 14.019\n- X92   1    0.0677 81.323 14.023\n- X28   1    0.0768 81.332 14.046\n- X50   1    0.0843 81.340 14.064\n- X12   1    0.0916 81.347 14.082\n- X67   1    0.0920 81.348 14.083\n- X57   1    0.1001 81.356 14.103\n- X84   1    0.1028 81.358 14.110\n- X15   1    0.1111 81.367 14.130\n- X91   1    0.1170 81.373 14.144\n- X60   1    0.1267 81.382 14.168\n- X9    1    0.1374 81.393 14.195\n- X76   1    0.1612 81.417 14.253\n- X98   1    0.1819 81.438 14.304\n- X14   1    0.2039 81.460 14.358\n- X26   1    0.2295 81.485 14.421\n- X63   1    0.2406 81.496 14.448\n- X41   1    0.2474 81.503 14.465\n- X44   1    0.2616 81.517 14.499\n- X51   1    0.2708 81.526 14.522\n- X16   1    0.2708 81.526 14.522\n- X36   1    0.2719 81.528 14.525\n- X35   1    0.2791 81.535 14.542\n- X6    1    0.2810 81.537 14.547\n- X4    1    0.2969 81.553 14.586\n- X34   1    0.3304 81.586 14.668\n- X58   1    0.3312 81.587 14.670\n- X5    1    0.3328 81.588 14.674\n- X97   1    0.3407 81.596 14.693\n- X85   1    0.3496 81.605 14.715\n- X95   1    0.3503 81.606 14.717\n- X77   1    0.3569 81.613 14.733\n- X74   1    0.3658 81.621 14.755\n- X8    1    0.4264 81.682 14.903\n- X42   1    0.4841 81.740 15.045\n- X25   1    0.5187 81.774 15.129\n- X56   1    0.5301 81.786 15.157\n- X33   1    0.5326 81.788 15.163\n- X27   1    0.5443 81.800 15.192\n- X30   1    0.5788 81.834 15.276\n- X3    1    0.5862 81.842 15.294\n- X24   1    0.5989 81.855 15.325\n- X20   1    0.6026 81.858 15.334\n- X11   1    0.6460 81.902 15.440\n- X62   1    0.6612 81.917 15.477\n- X72   1    0.6706 81.926 15.500\n- X53   1    0.7408 81.996 15.672\n- X81   1    0.7786 82.034 15.764\n- X18   1    0.7929 82.049 15.799\n- X37   1    0.8042 82.060 15.826\n- X80   1    0.8137 82.069 15.849\n<none>              81.256 15.857\n- X73   1    0.8212 82.077 15.868\n- X45   1    0.8272 82.083 15.882\n- X68   1    0.8587 82.114 15.959\n- X100  1    1.0082 82.264 16.323\n- X66   1    1.0344 82.290 16.387\n- X90   1    1.0490 82.305 16.422\n- X29   1    1.0624 82.318 16.455\n- X87   1    1.0973 82.353 16.539\n- X49   1    1.1265 82.382 16.610\n- X65   1    1.1807 82.436 16.742\n- X89   1    1.1835 82.439 16.749\n- X64   1    1.2809 82.537 16.985\n- X71   1    1.7560 83.012 18.133\n- X13   1    1.9480 83.204 18.595\n- X88   1    2.1348 83.390 19.043\n- X2    1    2.1468 83.402 19.072\n- X7    1    2.2436 83.499 19.304\n- X94   1    2.2857 83.541 19.405\n- X1    1    2.7430 83.999 20.497\n- X48   1    2.8641 84.120 20.785\n- X23   1    2.8942 84.150 20.856\n- X47   1    3.0014 84.257 21.111\n- X46   1    3.2668 84.522 21.740\n- X75   1    3.4593 84.715 22.195\n\nStep:  AIC=13.86\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10 + X11 + \n    X12 + X13 + X14 + X15 + X16 + X17 + X18 + X19 + X20 + X21 + \n    X23 + X24 + X25 + X26 + X27 + X28 + X29 + X30 + X31 + X32 + \n    X33 + X34 + X35 + X36 + X37 + X39 + X40 + X41 + X42 + X43 + \n    X44 + X45 + X46 + X47 + X48 + X49 + X50 + X51 + X52 + X53 + \n    X54 + X55 + X56 + X57 + X58 + X59 + X60 + X61 + X62 + X63 + \n    X64 + X65 + X66 + X67 + X68 + X69 + X71 + X72 + X73 + X74 + \n    X75 + X76 + X77 + X78 + X79 + X80 + X81 + X83 + X84 + X85 + \n    X86 + X87 + X88 + X89 + X90 + X91 + X92 + X93 + X94 + X95 + \n    X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS    AIC\n- X93   1    0.0040 81.262 11.871\n- X19   1    0.0041 81.262 11.872\n- X10   1    0.0041 81.262 11.872\n- X21   1    0.0044 81.262 11.873\n- X59   1    0.0046 81.262 11.873\n- X17   1    0.0091 81.267 11.884\n- X86   1    0.0127 81.270 11.893\n- X69   1    0.0276 81.285 11.930\n- X55   1    0.0281 81.286 11.931\n- X54   1    0.0395 81.297 11.959\n- X52   1    0.0400 81.298 11.960\n- X78   1    0.0437 81.301 11.969\n- X32   1    0.0459 81.304 11.975\n- X79   1    0.0464 81.304 11.976\n- X61   1    0.0472 81.305 11.978\n- X83   1    0.0476 81.305 11.979\n- X99   1    0.0601 81.318 12.010\n- X40   1    0.0609 81.319 12.011\n- X39   1    0.0638 81.322 12.019\n- X31   1    0.0650 81.323 12.022\n- X92   1    0.0657 81.323 12.023\n- X43   1    0.0678 81.325 12.028\n- X96   1    0.0681 81.326 12.029\n- X28   1    0.0822 81.340 12.064\n- X50   1    0.0878 81.346 12.078\n- X12   1    0.0899 81.348 12.083\n- X67   1    0.0930 81.351 12.091\n- X57   1    0.0994 81.357 12.106\n- X84   1    0.1060 81.364 12.122\n- X15   1    0.1090 81.367 12.130\n- X91   1    0.1193 81.377 12.155\n- X60   1    0.1253 81.383 12.170\n- X9    1    0.1398 81.398 12.206\n- X76   1    0.1627 81.420 12.262\n- X98   1    0.1818 81.439 12.309\n- X14   1    0.2139 81.472 12.387\n- X26   1    0.2275 81.485 12.421\n- X63   1    0.2466 81.504 12.468\n- X41   1    0.2528 81.511 12.483\n- X44   1    0.2617 81.519 12.505\n- X51   1    0.2701 81.528 12.525\n- X16   1    0.2732 81.531 12.533\n- X35   1    0.2770 81.535 12.542\n- X6    1    0.2829 81.541 12.557\n- X36   1    0.2883 81.546 12.570\n- X4    1    0.2961 81.554 12.589\n- X58   1    0.3297 81.587 12.671\n- X34   1    0.3346 81.592 12.684\n- X97   1    0.3441 81.602 12.707\n- X85   1    0.3477 81.605 12.716\n- X5    1    0.3498 81.608 12.721\n- X77   1    0.3552 81.613 12.734\n- X95   1    0.3565 81.614 12.737\n- X74   1    0.3654 81.623 12.759\n- X8    1    0.4417 81.699 12.946\n- X42   1    0.4893 81.747 13.062\n- X25   1    0.5186 81.776 13.134\n- X56   1    0.5360 81.794 13.177\n- X33   1    0.5466 81.804 13.203\n- X27   1    0.5532 81.811 13.219\n- X30   1    0.5771 81.835 13.277\n- X3    1    0.5864 81.844 13.300\n- X24   1    0.6016 81.859 13.337\n- X20   1    0.6047 81.862 13.345\n- X11   1    0.6440 81.902 13.440\n- X62   1    0.6591 81.917 13.477\n- X72   1    0.6769 81.935 13.521\n- X53   1    0.7423 82.000 13.681\n- X18   1    0.7908 82.049 13.799\n- X81   1    0.7958 82.054 13.811\n- X37   1    0.8157 82.073 13.859\n<none>              81.258 13.862\n- X73   1    0.8209 82.079 13.872\n- X80   1    0.8241 82.082 13.880\n- X45   1    0.8359 82.094 13.909\n- X68   1    0.8723 82.130 13.997\n- X100  1    1.0177 82.275 14.351\n- X66   1    1.0507 82.308 14.431\n- X29   1    1.0654 82.323 14.467\n- X90   1    1.1064 82.364 14.566\n- X49   1    1.1510 82.409 14.675\n- X87   1    1.1553 82.413 14.685\n- X89   1    1.1816 82.439 14.749\n- X65   1    1.1880 82.446 14.764\n- X64   1    1.3150 82.573 15.072\n- X71   1    1.9338 83.192 16.566\n- X13   1    2.0537 83.311 16.854\n- X88   1    2.1329 83.391 17.044\n- X2    1    2.1631 83.421 17.116\n- X7    1    2.2431 83.501 17.308\n- X94   1    2.3156 83.573 17.481\n- X1    1    2.7772 84.035 18.583\n- X23   1    2.9172 84.175 18.916\n- X48   1    2.9649 84.223 19.029\n- X47   1    3.0061 84.264 19.127\n- X46   1    3.3369 84.595 19.911\n- X75   1    3.5086 84.766 20.316\n\nStep:  AIC=11.87\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10 + X11 + \n    X12 + X13 + X14 + X15 + X16 + X17 + X18 + X19 + X20 + X21 + \n    X23 + X24 + X25 + X26 + X27 + X28 + X29 + X30 + X31 + X32 + \n    X33 + X34 + X35 + X36 + X37 + X39 + X40 + X41 + X42 + X43 + \n    X44 + X45 + X46 + X47 + X48 + X49 + X50 + X51 + X52 + X53 + \n    X54 + X55 + X56 + X57 + X58 + X59 + X60 + X61 + X62 + X63 + \n    X64 + X65 + X66 + X67 + X68 + X69 + X71 + X72 + X73 + X74 + \n    X75 + X76 + X77 + X78 + X79 + X80 + X81 + X83 + X84 + X85 + \n    X86 + X87 + X88 + X89 + X90 + X91 + X92 + X94 + X95 + X96 + \n    X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X19   1    0.0033 81.265  9.8795\n- X10   1    0.0044 81.266  9.8823\n- X59   1    0.0047 81.266  9.8829\n- X21   1    0.0048 81.267  9.8834\n- X17   1    0.0093 81.271  9.8944\n- X86   1    0.0131 81.275  9.9037\n- X69   1    0.0270 81.289  9.9379\n- X55   1    0.0276 81.289  9.9394\n- X52   1    0.0410 81.303  9.9723\n- X54   1    0.0416 81.303  9.9738\n- X78   1    0.0432 81.305  9.9778\n- X79   1    0.0476 81.309  9.9885\n- X83   1    0.0479 81.310  9.9892\n- X61   1    0.0496 81.311  9.9934\n- X32   1    0.0516 81.313  9.9984\n- X99   1    0.0569 81.319 10.0114\n- X40   1    0.0606 81.322 10.0207\n- X39   1    0.0613 81.323 10.0224\n- X92   1    0.0658 81.327 10.0333\n- X43   1    0.0684 81.330 10.0398\n- X31   1    0.0687 81.330 10.0405\n- X96   1    0.0719 81.334 10.0484\n- X28   1    0.0853 81.347 10.0814\n- X12   1    0.0861 81.348 10.0832\n- X57   1    0.0959 81.358 10.1075\n- X50   1    0.0961 81.358 10.1078\n- X67   1    0.1001 81.362 10.1177\n- X15   1    0.1068 81.368 10.1341\n- X91   1    0.1170 81.379 10.1592\n- X84   1    0.1182 81.380 10.1623\n- X60   1    0.1296 81.391 10.1902\n- X9    1    0.1418 81.403 10.2201\n- X76   1    0.1606 81.422 10.2663\n- X98   1    0.1915 81.453 10.3422\n- X14   1    0.2186 81.480 10.4087\n- X26   1    0.2239 81.486 10.4218\n- X41   1    0.2503 81.512 10.4866\n- X44   1    0.2661 81.528 10.5254\n- X63   1    0.2700 81.532 10.5349\n- X51   1    0.2794 81.541 10.5581\n- X6    1    0.2842 81.546 10.5697\n- X36   1    0.2849 81.547 10.5714\n- X35   1    0.2921 81.554 10.5891\n- X16   1    0.2952 81.557 10.5966\n- X4    1    0.3020 81.564 10.6134\n- X58   1    0.3269 81.589 10.6743\n- X34   1    0.3351 81.597 10.6945\n- X77   1    0.3529 81.615 10.7380\n- X85   1    0.3545 81.616 10.7420\n- X5    1    0.3580 81.620 10.7506\n- X95   1    0.3584 81.620 10.7516\n- X97   1    0.3604 81.622 10.7566\n- X74   1    0.3614 81.623 10.7590\n- X8    1    0.4396 81.701 10.9506\n- X42   1    0.4857 81.747 11.0633\n- X25   1    0.5166 81.778 11.1388\n- X27   1    0.5494 81.811 11.2190\n- X33   1    0.5553 81.817 11.2336\n- X3    1    0.5826 81.844 11.3003\n- X30   1    0.5837 81.845 11.3029\n- X56   1    0.5951 81.857 11.3309\n- X24   1    0.5982 81.860 11.3385\n- X20   1    0.6209 81.883 11.3939\n- X11   1    0.6417 81.903 11.4447\n- X62   1    0.6603 81.922 11.4900\n- X72   1    0.6854 81.947 11.5513\n- X53   1    0.7698 82.032 11.7572\n- X18   1    0.7869 82.049 11.7990\n- X81   1    0.8052 82.067 11.8435\n- X37   1    0.8120 82.074 11.8600\n<none>              81.262 11.8715\n- X73   1    0.8169 82.079 11.8720\n- X80   1    0.8415 82.103 11.9318\n- X68   1    0.8728 82.134 12.0081\n- X45   1    0.8959 82.158 12.0644\n- X100  1    1.0297 82.291 12.3899\n- X66   1    1.0491 82.311 12.4369\n- X29   1    1.0872 82.349 12.5295\n- X90   1    1.1045 82.366 12.5716\n- X87   1    1.1547 82.416 12.6934\n- X49   1    1.1811 82.443 12.7574\n- X65   1    1.1840 82.446 12.7645\n- X89   1    1.1859 82.448 12.7691\n- X64   1    1.4134 82.675 13.3202\n- X71   1    1.9321 83.194 14.5710\n- X13   1    2.0575 83.319 14.8724\n- X88   1    2.1315 83.393 15.0498\n- X7    1    2.2412 83.503 15.3129\n- X94   1    2.3117 83.573 15.4817\n- X2    1    2.3311 83.593 15.5280\n- X1    1    2.7763 84.038 16.5903\n- X23   1    2.9222 84.184 16.9373\n- X47   1    3.0117 84.273 17.1497\n- X48   1    3.0360 84.298 17.2076\n- X46   1    3.3784 84.640 18.0181\n- X75   1    3.6053 84.867 18.5535\n\nStep:  AIC=9.88\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X10 + X11 + \n    X12 + X13 + X14 + X15 + X16 + X17 + X18 + X20 + X21 + X23 + \n    X24 + X25 + X26 + X27 + X28 + X29 + X30 + X31 + X32 + X33 + \n    X34 + X35 + X36 + X37 + X39 + X40 + X41 + X42 + X43 + X44 + \n    X45 + X46 + X47 + X48 + X49 + X50 + X51 + X52 + X53 + X54 + \n    X55 + X56 + X57 + X58 + X59 + X60 + X61 + X62 + X63 + X64 + \n    X65 + X66 + X67 + X68 + X69 + X71 + X72 + X73 + X74 + X75 + \n    X76 + X77 + X78 + X79 + X80 + X81 + X83 + X84 + X85 + X86 + \n    X87 + X88 + X89 + X90 + X91 + X92 + X94 + X95 + X96 + X97 + \n    X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X10   1    0.0052 81.270  7.8923\n- X21   1    0.0054 81.270  7.8927\n- X59   1    0.0055 81.270  7.8930\n- X17   1    0.0089 81.274  7.9014\n- X86   1    0.0111 81.276  7.9069\n- X69   1    0.0259 81.291  7.9433\n- X55   1    0.0277 81.293  7.9478\n- X52   1    0.0393 81.304  7.9763\n- X54   1    0.0414 81.306  7.9814\n- X78   1    0.0417 81.307  7.9822\n- X79   1    0.0466 81.312  7.9943\n- X83   1    0.0476 81.313  7.9966\n- X61   1    0.0496 81.315  8.0015\n- X32   1    0.0508 81.316  8.0045\n- X99   1    0.0545 81.319  8.0136\n- X39   1    0.0648 81.330  8.0390\n- X43   1    0.0657 81.331  8.0412\n- X40   1    0.0668 81.332  8.0438\n- X92   1    0.0687 81.334  8.0484\n- X31   1    0.0693 81.334  8.0499\n- X96   1    0.0753 81.340  8.0649\n- X28   1    0.0824 81.347  8.0821\n- X12   1    0.0837 81.349  8.0854\n- X50   1    0.0945 81.359  8.1119\n- X57   1    0.0963 81.361  8.1165\n- X67   1    0.1017 81.367  8.1296\n- X84   1    0.1150 81.380  8.1623\n- X15   1    0.1260 81.391  8.1893\n- X91   1    0.1267 81.392  8.1912\n- X60   1    0.1308 81.396  8.2012\n- X9    1    0.1531 81.418  8.2561\n- X76   1    0.1610 81.426  8.2754\n- X98   1    0.1899 81.455  8.3464\n- X14   1    0.2199 81.485  8.4200\n- X26   1    0.2242 81.489  8.4306\n- X41   1    0.2471 81.512  8.4868\n- X44   1    0.2631 81.528  8.5260\n- X63   1    0.2681 81.533  8.5382\n- X51   1    0.2762 81.541  8.5581\n- X36   1    0.2816 81.547  8.5714\n- X6    1    0.2928 81.558  8.5988\n- X4    1    0.3015 81.566  8.6202\n- X35   1    0.3031 81.568  8.6240\n- X16   1    0.3129 81.578  8.6481\n- X58   1    0.3255 81.590  8.6789\n- X34   1    0.3319 81.597  8.6946\n- X77   1    0.3500 81.615  8.7391\n- X85   1    0.3546 81.620  8.7504\n- X5    1    0.3559 81.621  8.7536\n- X97   1    0.3577 81.623  8.7578\n- X95   1    0.3587 81.624  8.7603\n- X74   1    0.3659 81.631  8.7779\n- X8    1    0.4588 81.724  9.0056\n- X42   1    0.4968 81.762  9.0986\n- X25   1    0.5142 81.779  9.1412\n- X33   1    0.5534 81.818  9.2368\n- X27   1    0.5594 81.824  9.2516\n- X3    1    0.5794 81.844  9.3003\n- X30   1    0.5811 81.846  9.3046\n- X24   1    0.5952 81.860  9.3391\n- X56   1    0.6086 81.874  9.3717\n- X20   1    0.6179 81.883  9.3945\n- X11   1    0.6389 81.904  9.4457\n- X62   1    0.6595 81.924  9.4960\n- X72   1    0.7036 81.969  9.6037\n- X53   1    0.7669 82.032  9.7582\n- X18   1    0.7863 82.051  9.8053\n- X81   1    0.8039 82.069  9.8483\n- X37   1    0.8092 82.074  9.8612\n<none>              81.265  9.8795\n- X73   1    0.8169 82.082  9.8800\n- X80   1    0.8382 82.103  9.9318\n- X68   1    0.8814 82.146 10.0372\n- X45   1    0.9152 82.180 10.1192\n- X100  1    1.0265 82.291 10.3899\n- X66   1    1.0543 82.319 10.4575\n- X29   1    1.0884 82.353 10.5405\n- X90   1    1.1016 82.367 10.5726\n- X87   1    1.1696 82.435 10.7375\n- X89   1    1.1829 82.448 10.7698\n- X49   1    1.1864 82.451 10.7783\n- X65   1    1.2412 82.506 10.9111\n- X64   1    1.4102 82.675 11.3204\n- X71   1    1.9986 83.264 12.7387\n- X13   1    2.1045 83.369 12.9930\n- X88   1    2.1447 83.410 13.0895\n- X7    1    2.2638 83.529 13.3748\n- X94   1    2.3101 83.575 13.4855\n- X2    1    2.3316 83.597 13.5371\n- X1    1    2.7788 84.044 14.6040\n- X23   1    2.9199 84.185 14.9395\n- X47   1    3.0084 84.273 15.1497\n- X48   1    3.0329 84.298 15.2079\n- X46   1    3.3755 84.640 16.0190\n- X75   1    3.6121 84.877 16.5773\n\nStep:  AIC=7.89\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X17 + X18 + X20 + X21 + X23 + X24 + \n    X25 + X26 + X27 + X28 + X29 + X30 + X31 + X32 + X33 + X34 + \n    X35 + X36 + X37 + X39 + X40 + X41 + X42 + X43 + X44 + X45 + \n    X46 + X47 + X48 + X49 + X50 + X51 + X52 + X53 + X54 + X55 + \n    X56 + X57 + X58 + X59 + X60 + X61 + X62 + X63 + X64 + X65 + \n    X66 + X67 + X68 + X69 + X71 + X72 + X73 + X74 + X75 + X76 + \n    X77 + X78 + X79 + X80 + X81 + X83 + X84 + X85 + X86 + X87 + \n    X88 + X89 + X90 + X91 + X92 + X94 + X95 + X96 + X97 + X98 + \n    X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X21   1    0.0036 81.274  5.9012\n- X59   1    0.0040 81.274  5.9022\n- X17   1    0.0097 81.280  5.9162\n- X86   1    0.0122 81.282  5.9223\n- X69   1    0.0236 81.294  5.9504\n- X55   1    0.0287 81.299  5.9630\n- X52   1    0.0358 81.306  5.9803\n- X54   1    0.0378 81.308  5.9852\n- X78   1    0.0416 81.312  5.9947\n- X61   1    0.0473 81.317  6.0087\n- X83   1    0.0477 81.318  6.0096\n- X32   1    0.0488 81.319  6.0123\n- X79   1    0.0524 81.323  6.0212\n- X99   1    0.0558 81.326  6.0295\n- X31   1    0.0658 81.336  6.0542\n- X39   1    0.0661 81.336  6.0548\n- X43   1    0.0675 81.338  6.0583\n- X96   1    0.0721 81.342  6.0696\n- X92   1    0.0738 81.344  6.0738\n- X28   1    0.0794 81.350  6.0875\n- X12   1    0.0820 81.352  6.0939\n- X40   1    0.0838 81.354  6.0983\n- X50   1    0.0940 81.364  6.1236\n- X57   1    0.0966 81.367  6.1300\n- X67   1    0.0969 81.367  6.1306\n- X84   1    0.1116 81.382  6.1668\n- X91   1    0.1262 81.396  6.2027\n- X60   1    0.1295 81.400  6.2108\n- X15   1    0.1372 81.407  6.2297\n- X9    1    0.1510 81.421  6.2634\n- X76   1    0.1565 81.427  6.2771\n- X98   1    0.2052 81.475  6.3966\n- X14   1    0.2243 81.494  6.4436\n- X26   1    0.2360 81.506  6.4721\n- X41   1    0.2462 81.516  6.4972\n- X44   1    0.2618 81.532  6.5354\n- X63   1    0.2634 81.534  6.5395\n- X51   1    0.2804 81.551  6.5812\n- X36   1    0.2843 81.554  6.5906\n- X6    1    0.2877 81.558  6.5990\n- X35   1    0.3017 81.572  6.6335\n- X4    1    0.3045 81.575  6.6402\n- X58   1    0.3203 81.590  6.6790\n- X34   1    0.3294 81.600  6.7012\n- X16   1    0.3342 81.604  6.7132\n- X97   1    0.3547 81.625  6.7632\n- X85   1    0.3550 81.625  6.7640\n- X77   1    0.3571 81.627  6.7691\n- X74   1    0.3607 81.631  6.7780\n- X5    1    0.3618 81.632  6.7806\n- X95   1    0.3707 81.641  6.8025\n- X8    1    0.4545 81.725  7.0077\n- X42   1    0.4917 81.762  7.0986\n- X25   1    0.5211 81.791  7.1705\n- X33   1    0.5544 81.825  7.2520\n- X27   1    0.5776 81.848  7.3086\n- X3    1    0.5884 81.859  7.3352\n- X30   1    0.5915 81.862  7.3427\n- X56   1    0.6098 81.880  7.3874\n- X20   1    0.6208 81.891  7.4143\n- X24   1    0.6367 81.907  7.4531\n- X62   1    0.6544 81.925  7.4962\n- X11   1    0.6676 81.938  7.5284\n- X72   1    0.7240 81.994  7.6661\n- X53   1    0.7624 82.033  7.7598\n- X18   1    0.7840 82.054  7.8125\n- X81   1    0.8007 82.071  7.8532\n- X37   1    0.8050 82.075  7.8637\n<none>              81.270  7.8923\n- X80   1    0.8337 82.104  7.9336\n- X73   1    0.8503 82.120  7.9741\n- X68   1    0.8786 82.149  8.0428\n- X45   1    0.9100 82.180  8.1192\n- X100  1    1.0214 82.292  8.3903\n- X66   1    1.0711 82.341  8.5109\n- X29   1    1.0833 82.353  8.5406\n- X90   1    1.1001 82.370  8.5813\n- X87   1    1.1695 82.440  8.7499\n- X49   1    1.1934 82.464  8.8078\n- X89   1    1.2262 82.496  8.8872\n- X65   1    1.2363 82.506  8.9118\n- X64   1    1.4134 82.684  9.3406\n- X71   1    1.9935 83.264 10.7389\n- X13   1    2.1100 83.380 11.0186\n- X88   1    2.1396 83.410 11.0896\n- X7    1    2.2652 83.535 11.3906\n- X94   1    2.3074 83.578 11.4914\n- X2    1    2.3621 83.632 11.6224\n- X1    1    2.7740 84.044 12.6050\n- X23   1    2.9761 84.246 13.0853\n- X47   1    3.0167 84.287 13.1816\n- X48   1    3.0853 84.355 13.3445\n- X46   1    3.3706 84.641 14.0198\n- X75   1    3.6069 84.877 14.5774\n\nStep:  AIC=5.9\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X17 + X18 + X20 + X23 + X24 + X25 + \n    X26 + X27 + X28 + X29 + X30 + X31 + X32 + X33 + X34 + X35 + \n    X36 + X37 + X39 + X40 + X41 + X42 + X43 + X44 + X45 + X46 + \n    X47 + X48 + X49 + X50 + X51 + X52 + X53 + X54 + X55 + X56 + \n    X57 + X58 + X59 + X60 + X61 + X62 + X63 + X64 + X65 + X66 + \n    X67 + X68 + X69 + X71 + X72 + X73 + X74 + X75 + X76 + X77 + \n    X78 + X79 + X80 + X81 + X83 + X84 + X85 + X86 + X87 + X88 + \n    X89 + X90 + X91 + X92 + X94 + X95 + X96 + X97 + X98 + X99 + \n    X100\n\n       Df Sum of Sq    RSS     AIC\n- X59   1    0.0039 81.278  3.9108\n- X17   1    0.0102 81.284  3.9262\n- X86   1    0.0117 81.285  3.9300\n- X69   1    0.0223 81.296  3.9560\n- X55   1    0.0308 81.305  3.9769\n- X52   1    0.0354 81.309  3.9882\n- X54   1    0.0384 81.312  3.9957\n- X78   1    0.0408 81.315  4.0015\n- X61   1    0.0484 81.322  4.0201\n- X83   1    0.0514 81.325  4.0275\n- X32   1    0.0515 81.325  4.0278\n- X79   1    0.0544 81.328  4.0349\n- X99   1    0.0558 81.330  4.0384\n- X39   1    0.0656 81.339  4.0625\n- X31   1    0.0656 81.339  4.0626\n- X43   1    0.0677 81.341  4.0678\n- X96   1    0.0691 81.343  4.0711\n- X92   1    0.0703 81.344  4.0741\n- X28   1    0.0808 81.355  4.0999\n- X40   1    0.0811 81.355  4.1006\n- X12   1    0.0853 81.359  4.1110\n- X67   1    0.0947 81.368  4.1340\n- X50   1    0.0961 81.370  4.1374\n- X57   1    0.0963 81.370  4.1381\n- X84   1    0.1124 81.386  4.1775\n- X91   1    0.1262 81.400  4.2114\n- X60   1    0.1265 81.400  4.2121\n- X15   1    0.1355 81.409  4.2344\n- X9    1    0.1475 81.421  4.2639\n- X76   1    0.1618 81.436  4.2990\n- X98   1    0.2024 81.476  4.3985\n- X14   1    0.2207 81.494  4.4436\n- X26   1    0.2332 81.507  4.4742\n- X41   1    0.2471 81.521  4.5083\n- X44   1    0.2586 81.532  4.5365\n- X63   1    0.2620 81.536  4.5450\n- X51   1    0.2775 81.551  4.5828\n- X36   1    0.2874 81.561  4.6072\n- X6    1    0.2907 81.564  4.6153\n- X35   1    0.2986 81.572  4.6347\n- X4    1    0.3035 81.577  4.6467\n- X58   1    0.3223 81.596  4.6927\n- X34   1    0.3261 81.600  4.7020\n- X16   1    0.3367 81.610  4.7280\n- X97   1    0.3511 81.625  4.7632\n- X85   1    0.3550 81.629  4.7729\n- X77   1    0.3559 81.630  4.7749\n- X5    1    0.3595 81.633  4.7840\n- X74   1    0.3781 81.652  4.8294\n- X95   1    0.3912 81.665  4.8615\n- X8    1    0.4619 81.736  5.0347\n- X42   1    0.4884 81.762  5.0994\n- X25   1    0.5230 81.797  5.1841\n- X33   1    0.5510 81.825  5.2525\n- X27   1    0.5785 81.852  5.3197\n- X3    1    0.5875 81.861  5.3417\n- X30   1    0.5989 81.873  5.3694\n- X20   1    0.6177 81.891  5.4154\n- X56   1    0.6226 81.896  5.4274\n- X24   1    0.6508 81.925  5.4962\n- X62   1    0.6509 81.925  5.4964\n- X11   1    0.6653 81.939  5.5316\n- X72   1    0.7350 82.009  5.7018\n- X53   1    0.7650 82.039  5.7750\n- X18   1    0.7824 82.056  5.8173\n- X81   1    0.8002 82.074  5.8607\n- X37   1    0.8022 82.076  5.8656\n<none>              81.274  5.9012\n- X80   1    0.8319 82.106  5.9380\n- X68   1    0.8917 82.165  6.0835\n- X73   1    0.8948 82.169  6.0911\n- X45   1    0.9064 82.180  6.1192\n- X100  1    1.0207 82.294  6.3973\n- X66   1    1.0675 82.341  6.5110\n- X29   1    1.0809 82.355  6.5434\n- X90   1    1.1040 82.378  6.5996\n- X49   1    1.1915 82.465  6.8120\n- X87   1    1.1927 82.466  6.8148\n- X89   1    1.2291 82.503  6.9031\n- X65   1    1.2915 82.565  7.0544\n- X64   1    1.4248 82.699  7.3769\n- X71   1    2.0236 83.297  8.8198\n- X88   1    2.1485 83.422  9.1196\n- X13   1    2.1689 83.443  9.1684\n- X7    1    2.2753 83.549  9.4233\n- X94   1    2.3039 83.578  9.4918\n- X2    1    2.3588 83.633  9.6231\n- X1    1    2.7733 84.047 10.6119\n- X47   1    3.0195 84.293 11.1970\n- X48   1    3.0825 84.356 11.3462\n- X23   1    3.2403 84.514 11.7202\n- X46   1    3.3952 84.669 12.0862\n- X75   1    3.6066 84.880 12.5851\n\nStep:  AIC=3.91\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X17 + X18 + X20 + X23 + X24 + X25 + \n    X26 + X27 + X28 + X29 + X30 + X31 + X32 + X33 + X34 + X35 + \n    X36 + X37 + X39 + X40 + X41 + X42 + X43 + X44 + X45 + X46 + \n    X47 + X48 + X49 + X50 + X51 + X52 + X53 + X54 + X55 + X56 + \n    X57 + X58 + X60 + X61 + X62 + X63 + X64 + X65 + X66 + X67 + \n    X68 + X69 + X71 + X72 + X73 + X74 + X75 + X76 + X77 + X78 + \n    X79 + X80 + X81 + X83 + X84 + X85 + X86 + X87 + X88 + X89 + \n    X90 + X91 + X92 + X94 + X95 + X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X17   1    0.0122 81.290  1.9408\n- X86   1    0.0143 81.292  1.9459\n- X69   1    0.0218 81.299  1.9644\n- X55   1    0.0279 81.306  1.9794\n- X52   1    0.0368 81.314  2.0013\n- X78   1    0.0399 81.318  2.0090\n- X54   1    0.0403 81.318  2.0100\n- X32   1    0.0492 81.327  2.0319\n- X61   1    0.0510 81.329  2.0363\n- X79   1    0.0538 81.331  2.0432\n- X99   1    0.0545 81.332  2.0449\n- X83   1    0.0552 81.333  2.0465\n- X31   1    0.0639 81.342  2.0679\n- X92   1    0.0680 81.346  2.0781\n- X39   1    0.0681 81.346  2.0783\n- X96   1    0.0692 81.347  2.0809\n- X43   1    0.0724 81.350  2.0888\n- X28   1    0.0777 81.355  2.1019\n- X40   1    0.0851 81.363  2.1202\n- X12   1    0.0875 81.365  2.1260\n- X57   1    0.0932 81.371  2.1399\n- X67   1    0.0965 81.374  2.1480\n- X50   1    0.1017 81.379  2.1609\n- X84   1    0.1109 81.389  2.1836\n- X60   1    0.1230 81.401  2.2131\n- X91   1    0.1284 81.406  2.2265\n- X15   1    0.1336 81.411  2.2392\n- X9    1    0.1515 81.429  2.2831\n- X76   1    0.1602 81.438  2.3046\n- X98   1    0.2067 81.484  2.4188\n- X14   1    0.2268 81.505  2.4682\n- X26   1    0.2322 81.510  2.4813\n- X41   1    0.2499 81.528  2.5248\n- X44   1    0.2576 81.535  2.5436\n- X63   1    0.2600 81.538  2.5494\n- X51   1    0.2756 81.553  2.5878\n- X36   1    0.2861 81.564  2.6137\n- X35   1    0.2972 81.575  2.6408\n- X6    1    0.3016 81.579  2.6517\n- X4    1    0.3066 81.584  2.6639\n- X58   1    0.3261 81.604  2.7115\n- X34   1    0.3317 81.609  2.7253\n- X16   1    0.3349 81.613  2.7331\n- X97   1    0.3488 81.627  2.7673\n- X85   1    0.3557 81.633  2.7842\n- X5    1    0.3671 81.645  2.8120\n- X77   1    0.3702 81.648  2.8197\n- X74   1    0.3761 81.654  2.8342\n- X95   1    0.3875 81.665  2.8622\n- X8    1    0.4618 81.740  3.0440\n- X42   1    0.5023 81.780  3.1429\n- X25   1    0.5191 81.797  3.1842\n- X33   1    0.5473 81.825  3.2531\n- X27   1    0.5785 81.856  3.3293\n- X3    1    0.5843 81.862  3.3434\n- X30   1    0.5949 81.873  3.3695\n- X20   1    0.6155 81.893  3.4197\n- X56   1    0.6188 81.896  3.4276\n- X62   1    0.6499 81.928  3.5038\n- X24   1    0.6603 81.938  3.5291\n- X11   1    0.6674 81.945  3.5462\n- X72   1    0.7313 82.009  3.7023\n- X53   1    0.7652 82.043  3.7848\n- X18   1    0.7790 82.057  3.8185\n- X81   1    0.7979 82.076  3.8646\n- X37   1    0.8102 82.088  3.8945\n<none>              81.278  3.9108\n- X80   1    0.8282 82.106  3.9385\n- X68   1    0.8937 82.171  4.0980\n- X45   1    0.9076 82.185  4.1317\n- X73   1    0.9092 82.187  4.1357\n- X100  1    1.0322 82.310  4.4348\n- X66   1    1.0708 82.348  4.5284\n- X29   1    1.0784 82.356  4.5470\n- X90   1    1.1101 82.388  4.6239\n- X87   1    1.1894 82.467  4.8163\n- X49   1    1.2009 82.479  4.8443\n- X89   1    1.2286 82.506  4.9115\n- X65   1    1.2946 82.572  5.0712\n- X64   1    1.4321 82.710  5.4042\n- X71   1    2.0227 83.300  6.8271\n- X88   1    2.1697 83.447  7.1798\n- X13   1    2.1761 83.454  7.1951\n- X7    1    2.2863 83.564  7.4591\n- X94   1    2.3251 83.603  7.5519\n- X2    1    2.3549 83.633  7.6231\n- X1    1    2.7703 84.048  8.6140\n- X48   1    3.0955 84.373  9.3864\n- X23   1    3.2427 84.520  9.7350\n- X47   1    3.2569 84.535  9.7687\n- X46   1    3.3915 84.669 10.0870\n- X75   1    3.6723 84.950 10.7490\n\nStep:  AIC=1.94\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X28 + X29 + X30 + X31 + X32 + X33 + X34 + X35 + X36 + \n    X37 + X39 + X40 + X41 + X42 + X43 + X44 + X45 + X46 + X47 + \n    X48 + X49 + X50 + X51 + X52 + X53 + X54 + X55 + X56 + X57 + \n    X58 + X60 + X61 + X62 + X63 + X64 + X65 + X66 + X67 + X68 + \n    X69 + X71 + X72 + X73 + X74 + X75 + X76 + X77 + X78 + X79 + \n    X80 + X81 + X83 + X84 + X85 + X86 + X87 + X88 + X89 + X90 + \n    X91 + X92 + X94 + X95 + X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X86   1    0.0133 81.303 -0.0264\n- X69   1    0.0193 81.309 -0.0116\n- X55   1    0.0220 81.312 -0.0051\n- X52   1    0.0353 81.325  0.0275\n- X54   1    0.0398 81.330  0.0388\n- X78   1    0.0450 81.335  0.0515\n- X83   1    0.0463 81.336  0.0546\n- X61   1    0.0525 81.342  0.0699\n- X32   1    0.0531 81.343  0.0714\n- X79   1    0.0552 81.345  0.0765\n- X96   1    0.0581 81.348  0.0836\n- X99   1    0.0615 81.351  0.0920\n- X39   1    0.0652 81.355  0.1012\n- X43   1    0.0663 81.356  0.1038\n- X31   1    0.0676 81.358  0.1071\n- X92   1    0.0723 81.362  0.1186\n- X40   1    0.0794 81.369  0.1360\n- X28   1    0.0820 81.372  0.1426\n- X50   1    0.0942 81.384  0.1724\n- X67   1    0.0943 81.384  0.1727\n- X57   1    0.0980 81.388  0.1817\n- X12   1    0.1024 81.392  0.1927\n- X84   1    0.1033 81.393  0.1949\n- X60   1    0.1158 81.406  0.2256\n- X91   1    0.1400 81.430  0.2848\n- X9    1    0.1422 81.432  0.2903\n- X15   1    0.1422 81.432  0.2905\n- X76   1    0.1534 81.443  0.3178\n- X98   1    0.1957 81.486  0.4218\n- X14   1    0.2176 81.507  0.4755\n- X26   1    0.2248 81.515  0.4931\n- X41   1    0.2522 81.542  0.5603\n- X63   1    0.2572 81.547  0.5725\n- X44   1    0.2702 81.560  0.6044\n- X51   1    0.2729 81.563  0.6111\n- X36   1    0.2845 81.574  0.6395\n- X35   1    0.2859 81.576  0.6430\n- X6    1    0.3069 81.597  0.6946\n- X4    1    0.3223 81.612  0.7322\n- X16   1    0.3285 81.618  0.7473\n- X58   1    0.3333 81.623  0.7591\n- X97   1    0.3453 81.635  0.7886\n- X34   1    0.3482 81.638  0.7957\n- X85   1    0.3500 81.640  0.8000\n- X5    1    0.3552 81.645  0.8129\n- X77   1    0.3721 81.662  0.8541\n- X74   1    0.3757 81.666  0.8630\n- X95   1    0.4137 81.704  0.9560\n- X8    1    0.4497 81.740  1.0442\n- X25   1    0.5238 81.814  1.2254\n- X42   1    0.5424 81.832  1.2708\n- X33   1    0.5476 81.837  1.2835\n- X56   1    0.6144 81.904  1.4467\n- X20   1    0.6148 81.905  1.4477\n- X30   1    0.6209 81.911  1.4627\n- X3    1    0.6241 81.914  1.4704\n- X27   1    0.6376 81.928  1.5035\n- X24   1    0.6493 81.939  1.5319\n- X11   1    0.6577 81.948  1.5523\n- X62   1    0.6658 81.956  1.5721\n- X72   1    0.7192 82.009  1.7025\n- X53   1    0.7538 82.044  1.7869\n- X18   1    0.7760 82.066  1.8408\n- X37   1    0.8037 82.094  1.9084\n- X81   1    0.8071 82.097  1.9168\n<none>              81.290  1.9408\n- X80   1    0.8187 82.109  1.9449\n- X68   1    0.8903 82.180  2.1192\n- X45   1    0.9213 82.211  2.1947\n- X73   1    0.9686 82.258  2.3098\n- X100  1    1.0408 82.331  2.4853\n- X29   1    1.0924 82.382  2.6106\n- X66   1    1.0992 82.389  2.6270\n- X90   1    1.1000 82.390  2.6290\n- X89   1    1.2165 82.506  2.9116\n- X49   1    1.2329 82.523  2.9515\n- X87   1    1.2603 82.550  3.0177\n- X65   1    1.3132 82.603  3.1459\n- X64   1    1.4838 82.774  3.5585\n- X71   1    2.0950 83.385  5.0300\n- X88   1    2.1625 83.452  5.1917\n- X13   1    2.1641 83.454  5.1955\n- X7    1    2.2854 83.575  5.4859\n- X94   1    2.3139 83.604  5.5543\n- X2    1    2.3543 83.644  5.6508\n- X1    1    2.7709 84.061  6.6446\n- X48   1    3.1970 84.487  7.6557\n- X23   1    3.2853 84.575  7.8646\n- X47   1    3.2887 84.579  7.8727\n- X46   1    3.3915 84.681  8.1156\n- X75   1    3.6929 84.983  8.8261\n\nStep:  AIC=-0.03\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X28 + X29 + X30 + X31 + X32 + X33 + X34 + X35 + X36 + \n    X37 + X39 + X40 + X41 + X42 + X43 + X44 + X45 + X46 + X47 + \n    X48 + X49 + X50 + X51 + X52 + X53 + X54 + X55 + X56 + X57 + \n    X58 + X60 + X61 + X62 + X63 + X64 + X65 + X66 + X67 + X68 + \n    X69 + X71 + X72 + X73 + X74 + X75 + X76 + X77 + X78 + X79 + \n    X80 + X81 + X83 + X84 + X85 + X87 + X88 + X89 + X90 + X91 + \n    X92 + X94 + X95 + X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X69   1    0.0204 81.324 -1.9761\n- X55   1    0.0291 81.332 -1.9548\n- X54   1    0.0312 81.334 -1.9495\n- X52   1    0.0361 81.339 -1.9377\n- X78   1    0.0442 81.347 -1.9176\n- X83   1    0.0489 81.352 -1.9060\n- X32   1    0.0517 81.355 -1.8993\n- X61   1    0.0520 81.355 -1.8984\n- X96   1    0.0524 81.356 -1.8974\n- X79   1    0.0577 81.361 -1.8844\n- X39   1    0.0632 81.366 -1.8711\n- X43   1    0.0642 81.367 -1.8686\n- X31   1    0.0665 81.370 -1.8630\n- X99   1    0.0727 81.376 -1.8475\n- X92   1    0.0742 81.377 -1.8440\n- X28   1    0.0817 81.385 -1.8256\n- X40   1    0.0829 81.386 -1.8225\n- X50   1    0.0838 81.387 -1.8203\n- X12   1    0.0961 81.399 -1.7901\n- X84   1    0.0997 81.403 -1.7813\n- X57   1    0.1020 81.405 -1.7757\n- X67   1    0.1031 81.406 -1.7730\n- X60   1    0.1152 81.418 -1.7433\n- X91   1    0.1384 81.442 -1.6861\n- X15   1    0.1417 81.445 -1.6780\n- X9    1    0.1569 81.460 -1.6408\n- X76   1    0.1580 81.461 -1.6381\n- X98   1    0.2054 81.509 -1.5218\n- X26   1    0.2201 81.523 -1.4856\n- X14   1    0.2343 81.538 -1.4508\n- X63   1    0.2544 81.558 -1.4015\n- X35   1    0.2729 81.576 -1.3561\n- X51   1    0.2751 81.578 -1.3509\n- X41   1    0.2783 81.582 -1.3428\n- X36   1    0.2982 81.601 -1.2941\n- X44   1    0.3008 81.604 -1.2878\n- X6    1    0.3054 81.609 -1.2764\n- X58   1    0.3234 81.627 -1.2323\n- X16   1    0.3269 81.630 -1.2238\n- X4    1    0.3397 81.643 -1.1925\n- X5    1    0.3485 81.652 -1.1710\n- X34   1    0.3524 81.656 -1.1613\n- X97   1    0.3625 81.666 -1.1367\n- X77   1    0.3732 81.676 -1.1105\n- X85   1    0.3736 81.677 -1.1093\n- X74   1    0.3772 81.680 -1.1005\n- X95   1    0.4277 81.731 -0.9770\n- X8    1    0.4481 81.751 -0.9271\n- X25   1    0.5108 81.814 -0.7738\n- X42   1    0.5511 81.854 -0.6753\n- X33   1    0.6035 81.907 -0.5472\n- X20   1    0.6122 81.915 -0.5261\n- X27   1    0.6353 81.938 -0.4697\n- X62   1    0.6554 81.959 -0.4205\n- X56   1    0.6561 81.959 -0.4188\n- X11   1    0.6600 81.963 -0.4093\n- X24   1    0.6654 81.969 -0.3962\n- X30   1    0.6724 81.976 -0.3792\n- X3    1    0.6826 81.986 -0.3542\n- X72   1    0.7102 82.013 -0.2870\n- X53   1    0.7464 82.050 -0.1986\n- X18   1    0.7714 82.075 -0.1377\n- X81   1    0.7956 82.099 -0.0787\n<none>              81.303 -0.0264\n- X37   1    0.8244 82.128 -0.0086\n- X80   1    0.8415 82.145  0.0330\n- X68   1    0.9008 82.204  0.1774\n- X45   1    0.9147 82.218  0.2112\n- X73   1    0.9605 82.264  0.3226\n- X100  1    1.0521 82.355  0.5451\n- X29   1    1.0793 82.383  0.6113\n- X90   1    1.0935 82.397  0.6457\n- X66   1    1.0991 82.402  0.6592\n- X89   1    1.2145 82.518  0.9392\n- X49   1    1.2244 82.528  0.9631\n- X87   1    1.2678 82.571  1.0684\n- X65   1    1.3086 82.612  1.1671\n- X64   1    1.5221 82.825  1.6833\n- X71   1    2.0929 83.396  3.0569\n- X88   1    2.1607 83.464  3.2193\n- X94   1    2.3037 83.607  3.5617\n- X13   1    2.3113 83.615  3.5800\n- X7    1    2.3123 83.616  3.5824\n- X2    1    2.4641 83.767  3.9450\n- X1    1    2.7723 84.076  4.6796\n- X48   1    3.1913 84.495  5.6739\n- X47   1    3.2791 84.582  5.8817\n- X23   1    3.3492 84.652  6.0472\n- X46   1    3.3857 84.689  6.1335\n- X75   1    3.6842 84.987  6.8371\n\nStep:  AIC=-1.98\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X28 + X29 + X30 + X31 + X32 + X33 + X34 + X35 + X36 + \n    X37 + X39 + X40 + X41 + X42 + X43 + X44 + X45 + X46 + X47 + \n    X48 + X49 + X50 + X51 + X52 + X53 + X54 + X55 + X56 + X57 + \n    X58 + X60 + X61 + X62 + X63 + X64 + X65 + X66 + X67 + X68 + \n    X71 + X72 + X73 + X74 + X75 + X76 + X77 + X78 + X79 + X80 + \n    X81 + X83 + X84 + X85 + X87 + X88 + X89 + X90 + X91 + X92 + \n    X94 + X95 + X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X55   1    0.0274 81.351 -3.9089\n- X54   1    0.0347 81.358 -3.8909\n- X52   1    0.0399 81.364 -3.8779\n- X83   1    0.0423 81.366 -3.8721\n- X78   1    0.0465 81.370 -3.8618\n- X79   1    0.0480 81.372 -3.8582\n- X61   1    0.0490 81.373 -3.8556\n- X32   1    0.0507 81.374 -3.8515\n- X96   1    0.0516 81.375 -3.8493\n- X43   1    0.0608 81.384 -3.8266\n- X39   1    0.0620 81.386 -3.8238\n- X31   1    0.0664 81.390 -3.8129\n- X99   1    0.0676 81.391 -3.8100\n- X28   1    0.0697 81.393 -3.8049\n- X92   1    0.0729 81.397 -3.7970\n- X50   1    0.0832 81.407 -3.7716\n- X40   1    0.0911 81.415 -3.7523\n- X84   1    0.0957 81.419 -3.7410\n- X12   1    0.0957 81.419 -3.7409\n- X67   1    0.1020 81.426 -3.7254\n- X57   1    0.1064 81.430 -3.7146\n- X60   1    0.1320 81.456 -3.6518\n- X91   1    0.1358 81.459 -3.6423\n- X15   1    0.1484 81.472 -3.6115\n- X76   1    0.1565 81.480 -3.5916\n- X9    1    0.1700 81.494 -3.5584\n- X98   1    0.2084 81.532 -3.4642\n- X26   1    0.2255 81.549 -3.4223\n- X14   1    0.2379 81.562 -3.3918\n- X51   1    0.2576 81.581 -3.3437\n- X35   1    0.2603 81.584 -3.3370\n- X63   1    0.2694 81.593 -3.3147\n- X36   1    0.2815 81.605 -3.2851\n- X44   1    0.2924 81.616 -3.2582\n- X41   1    0.2949 81.618 -3.2523\n- X58   1    0.3043 81.628 -3.2292\n- X16   1    0.3174 81.641 -3.1970\n- X6    1    0.3354 81.659 -3.1531\n- X5    1    0.3426 81.666 -3.1352\n- X34   1    0.3509 81.675 -3.1149\n- X4    1    0.3574 81.681 -3.0992\n- X74   1    0.3627 81.686 -3.0860\n- X77   1    0.3699 81.694 -3.0685\n- X85   1    0.3704 81.694 -3.0673\n- X97   1    0.3729 81.697 -3.0612\n- X95   1    0.4450 81.769 -2.8847\n- X8    1    0.4597 81.783 -2.8487\n- X25   1    0.5152 81.839 -2.7132\n- X42   1    0.5837 81.907 -2.5457\n- X33   1    0.6194 81.943 -2.4585\n- X27   1    0.6306 81.954 -2.4313\n- X20   1    0.6349 81.958 -2.4209\n- X62   1    0.6375 81.961 -2.4144\n- X11   1    0.6399 81.964 -2.4086\n- X56   1    0.6413 81.965 -2.4052\n- X24   1    0.6450 81.969 -2.3961\n- X30   1    0.6521 81.976 -2.3789\n- X72   1    0.7024 82.026 -2.2562\n- X3    1    0.7129 82.037 -2.2305\n- X53   1    0.7496 82.073 -2.1410\n- X18   1    0.7640 82.088 -2.1060\n- X81   1    0.7775 82.101 -2.0731\n<none>              81.324 -1.9761\n- X37   1    0.8350 82.159 -1.9330\n- X80   1    0.8356 82.159 -1.9317\n- X68   1    0.8828 82.206 -1.8168\n- X45   1    0.9115 82.235 -1.7469\n- X73   1    1.0125 82.336 -1.5015\n- X100  1    1.0331 82.357 -1.4514\n- X29   1    1.0762 82.400 -1.3468\n- X66   1    1.0925 82.416 -1.3072\n- X90   1    1.1261 82.450 -1.2256\n- X49   1    1.2312 82.555 -0.9708\n- X87   1    1.2640 82.588 -0.8914\n- X89   1    1.2787 82.602 -0.8559\n- X65   1    1.3871 82.711 -0.5937\n- X64   1    1.5093 82.833 -0.2983\n- X88   1    2.1544 83.478  1.2533\n- X71   1    2.2219 83.546  1.4150\n- X94   1    2.2846 83.608  1.5649\n- X13   1    2.3203 83.644  1.6504\n- X7    1    2.3858 83.709  1.8069\n- X2    1    2.4629 83.787  1.9910\n- X1    1    2.7529 84.077  2.6820\n- X47   1    3.2829 84.607  3.9388\n- X23   1    3.3407 84.664  4.0755\n- X48   1    3.3661 84.690  4.1355\n- X46   1    3.3937 84.717  4.2005\n- X75   1    3.6733 84.997  4.8596\n\nStep:  AIC=-3.91\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X28 + X29 + X30 + X31 + X32 + X33 + X34 + X35 + X36 + \n    X37 + X39 + X40 + X41 + X42 + X43 + X44 + X45 + X46 + X47 + \n    X48 + X49 + X50 + X51 + X52 + X53 + X54 + X56 + X57 + X58 + \n    X60 + X61 + X62 + X63 + X64 + X65 + X66 + X67 + X68 + X71 + \n    X72 + X73 + X74 + X75 + X76 + X77 + X78 + X79 + X80 + X81 + \n    X83 + X84 + X85 + X87 + X88 + X89 + X90 + X91 + X92 + X94 + \n    X95 + X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X54   1    0.0316 81.383 -5.8313\n- X52   1    0.0365 81.387 -5.8192\n- X96   1    0.0428 81.394 -5.8036\n- X78   1    0.0444 81.395 -5.7997\n- X83   1    0.0467 81.398 -5.7942\n- X32   1    0.0472 81.398 -5.7929\n- X43   1    0.0486 81.400 -5.7895\n- X61   1    0.0559 81.407 -5.7716\n- X39   1    0.0600 81.411 -5.7614\n- X28   1    0.0624 81.413 -5.7556\n- X79   1    0.0639 81.415 -5.7518\n- X99   1    0.0689 81.420 -5.7395\n- X92   1    0.0694 81.420 -5.7384\n- X31   1    0.0721 81.423 -5.7317\n- X84   1    0.0873 81.438 -5.6945\n- X67   1    0.0887 81.440 -5.6910\n- X40   1    0.0906 81.442 -5.6863\n- X12   1    0.0910 81.442 -5.6854\n- X50   1    0.0919 81.443 -5.6830\n- X57   1    0.1082 81.459 -5.6431\n- X60   1    0.1132 81.464 -5.6308\n- X91   1    0.1286 81.480 -5.5930\n- X76   1    0.1465 81.497 -5.5490\n- X15   1    0.1480 81.499 -5.5454\n- X9    1    0.1640 81.515 -5.5061\n- X98   1    0.1998 81.551 -5.4182\n- X26   1    0.2258 81.577 -5.3545\n- X14   1    0.2288 81.580 -5.3473\n- X35   1    0.2391 81.590 -5.3219\n- X51   1    0.2416 81.593 -5.3159\n- X63   1    0.2566 81.608 -5.2789\n- X44   1    0.2786 81.630 -5.2250\n- X36   1    0.2842 81.635 -5.2115\n- X41   1    0.3139 81.665 -5.1386\n- X58   1    0.3157 81.667 -5.1343\n- X16   1    0.3224 81.673 -5.1177\n- X6    1    0.3353 81.686 -5.0862\n- X74   1    0.3436 81.695 -5.0660\n- X4    1    0.3540 81.705 -5.0404\n- X97   1    0.3609 81.712 -5.0237\n- X34   1    0.3637 81.715 -5.0167\n- X85   1    0.3690 81.720 -5.0039\n- X77   1    0.3693 81.720 -5.0030\n- X5    1    0.3796 81.731 -4.9779\n- X8    1    0.4352 81.786 -4.8419\n- X95   1    0.4369 81.788 -4.8377\n- X25   1    0.4961 81.847 -4.6929\n- X27   1    0.6091 81.960 -4.4170\n- X56   1    0.6215 81.972 -4.3867\n- X33   1    0.6228 81.974 -4.3836\n- X62   1    0.6319 81.983 -4.3613\n- X20   1    0.6366 81.988 -4.3499\n- X30   1    0.6433 81.994 -4.3336\n- X24   1    0.6444 81.995 -4.3310\n- X42   1    0.6561 82.007 -4.3022\n- X11   1    0.6722 82.023 -4.2631\n- X72   1    0.6809 82.032 -4.2418\n- X3    1    0.7232 82.074 -4.1387\n- X18   1    0.7367 82.088 -4.1060\n- X53   1    0.7395 82.090 -4.0990\n<none>              81.351 -3.9089\n- X37   1    0.8370 82.188 -3.8616\n- X80   1    0.8538 82.205 -3.8208\n- X81   1    0.8714 82.222 -3.7780\n- X45   1    0.8868 82.238 -3.7404\n- X68   1    0.9917 82.343 -3.4856\n- X73   1    1.0016 82.353 -3.4616\n- X100  1    1.0352 82.386 -3.3799\n- X29   1    1.0598 82.411 -3.3202\n- X90   1    1.1045 82.456 -3.2117\n- X66   1    1.1163 82.467 -3.1831\n- X89   1    1.2573 82.608 -2.8415\n- X49   1    1.2629 82.614 -2.8278\n- X87   1    1.3334 82.684 -2.6573\n- X65   1    1.3648 82.716 -2.5814\n- X64   1    1.4947 82.846 -2.2676\n- X71   1    2.1978 83.549 -0.5774\n- X88   1    2.2233 83.574 -0.5163\n- X13   1    2.2992 83.650 -0.3347\n- X94   1    2.3039 83.655 -0.3236\n- X7    1    2.4052 83.756 -0.0815\n- X2    1    2.4511 83.802  0.0281\n- X1    1    2.9635 84.314  1.2472\n- X47   1    3.2584 84.609  1.9456\n- X23   1    3.3205 84.672  2.0923\n- X48   1    3.3436 84.695  2.1468\n- X46   1    3.3783 84.729  2.2289\n- X75   1    3.6894 85.040  2.9619\n\nStep:  AIC=-5.83\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X28 + X29 + X30 + X31 + X32 + X33 + X34 + X35 + X36 + \n    X37 + X39 + X40 + X41 + X42 + X43 + X44 + X45 + X46 + X47 + \n    X48 + X49 + X50 + X51 + X52 + X53 + X56 + X57 + X58 + X60 + \n    X61 + X62 + X63 + X64 + X65 + X66 + X67 + X68 + X71 + X72 + \n    X73 + X74 + X75 + X76 + X77 + X78 + X79 + X80 + X81 + X83 + \n    X84 + X85 + X87 + X88 + X89 + X90 + X91 + X92 + X94 + X95 + \n    X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X52   1    0.0338 81.416 -7.7482\n- X96   1    0.0410 81.424 -7.7304\n- X61   1    0.0433 81.426 -7.7249\n- X83   1    0.0447 81.427 -7.7214\n- X78   1    0.0510 81.434 -7.7060\n- X32   1    0.0515 81.434 -7.7047\n- X43   1    0.0552 81.438 -7.6956\n- X28   1    0.0641 81.447 -7.6739\n- X39   1    0.0646 81.447 -7.6726\n- X99   1    0.0693 81.452 -7.6610\n- X31   1    0.0726 81.455 -7.6528\n- X79   1    0.0736 81.456 -7.6504\n- X92   1    0.0755 81.458 -7.6459\n- X67   1    0.0802 81.463 -7.6341\n- X50   1    0.0862 81.469 -7.6195\n- X84   1    0.0891 81.472 -7.6123\n- X57   1    0.0892 81.472 -7.6122\n- X40   1    0.0943 81.477 -7.5996\n- X60   1    0.1055 81.488 -7.5723\n- X12   1    0.1068 81.489 -7.5689\n- X91   1    0.1232 81.506 -7.5286\n- X15   1    0.1514 81.534 -7.4596\n- X76   1    0.1581 81.541 -7.4432\n- X9    1    0.1796 81.562 -7.3903\n- X98   1    0.2181 81.601 -7.2959\n- X26   1    0.2311 81.614 -7.2641\n- X14   1    0.2360 81.619 -7.2520\n- X51   1    0.2531 81.636 -7.2102\n- X35   1    0.2545 81.637 -7.2067\n- X63   1    0.2573 81.640 -7.1999\n- X36   1    0.2896 81.672 -7.1209\n- X41   1    0.2965 81.679 -7.1039\n- X44   1    0.3125 81.695 -7.0648\n- X58   1    0.3185 81.701 -7.0501\n- X6    1    0.3346 81.717 -7.0106\n- X74   1    0.3417 81.724 -6.9933\n- X4    1    0.3565 81.739 -6.9571\n- X16   1    0.3619 81.744 -6.9439\n- X97   1    0.3682 81.751 -6.9283\n- X77   1    0.3714 81.754 -6.9206\n- X34   1    0.3904 81.773 -6.8741\n- X85   1    0.3956 81.778 -6.8615\n- X8    1    0.4170 81.800 -6.8091\n- X5    1    0.4297 81.812 -6.7781\n- X95   1    0.4367 81.819 -6.7610\n- X25   1    0.5499 81.932 -6.4845\n- X62   1    0.6080 81.991 -6.3426\n- X33   1    0.6125 81.995 -6.3318\n- X27   1    0.6184 82.001 -6.3173\n- X20   1    0.6190 82.002 -6.3157\n- X56   1    0.6215 82.004 -6.3098\n- X42   1    0.6512 82.034 -6.2372\n- X11   1    0.6560 82.039 -6.2255\n- X30   1    0.6586 82.041 -6.2191\n- X24   1    0.6827 82.065 -6.1606\n- X72   1    0.7361 82.119 -6.0305\n- X3    1    0.7409 82.123 -6.0187\n- X53   1    0.7840 82.167 -5.9138\n<none>              81.383 -5.8313\n- X18   1    0.8359 82.218 -5.7876\n- X81   1    0.8758 82.258 -5.6904\n- X37   1    0.8833 82.266 -5.6721\n- X45   1    0.8848 82.267 -5.6685\n- X80   1    0.9102 82.293 -5.6069\n- X68   1    0.9859 82.368 -5.4229\n- X73   1    0.9949 82.377 -5.4012\n- X29   1    1.0328 82.415 -5.3090\n- X100  1    1.0438 82.426 -5.2823\n- X66   1    1.1148 82.497 -5.1102\n- X90   1    1.1259 82.508 -5.0834\n- X89   1    1.2466 82.629 -4.7909\n- X49   1    1.2947 82.677 -4.6746\n- X87   1    1.3081 82.691 -4.6421\n- X65   1    1.3337 82.716 -4.5803\n- X64   1    1.6151 82.998 -3.9010\n- X71   1    2.1859 83.568 -2.5302\n- X88   1    2.2417 83.624 -2.3968\n- X13   1    2.2845 83.667 -2.2945\n- X94   1    2.3221 83.705 -2.2045\n- X2    1    2.4362 83.819 -1.9321\n- X7    1    2.5267 83.909 -1.7163\n- X1    1    2.9573 84.340 -0.6926\n- X47   1    3.2659 84.648  0.0379\n- X23   1    3.2894 84.672  0.0935\n- X48   1    3.3710 84.754  0.2861\n- X46   1    3.5608 84.943  0.7335\n- X75   1    3.6606 85.043  0.9684\n\nStep:  AIC=-7.75\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X28 + X29 + X30 + X31 + X32 + X33 + X34 + X35 + X36 + \n    X37 + X39 + X40 + X41 + X42 + X43 + X44 + X45 + X46 + X47 + \n    X48 + X49 + X50 + X51 + X53 + X56 + X57 + X58 + X60 + X61 + \n    X62 + X63 + X64 + X65 + X66 + X67 + X68 + X71 + X72 + X73 + \n    X74 + X75 + X76 + X77 + X78 + X79 + X80 + X81 + X83 + X84 + \n    X85 + X87 + X88 + X89 + X90 + X91 + X92 + X94 + X95 + X96 + \n    X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X32   1    0.0418 81.458 -9.6455\n- X83   1    0.0426 81.459 -9.6437\n- X78   1    0.0433 81.460 -9.6419\n- X96   1    0.0463 81.463 -9.6344\n- X43   1    0.0492 81.466 -9.6274\n- X28   1    0.0542 81.471 -9.6150\n- X99   1    0.0569 81.473 -9.6083\n- X61   1    0.0579 81.474 -9.6060\n- X79   1    0.0695 81.486 -9.5775\n- X84   1    0.0754 81.492 -9.5630\n- X39   1    0.0761 81.492 -9.5613\n- X67   1    0.0776 81.494 -9.5576\n- X92   1    0.0872 81.504 -9.5340\n- X31   1    0.0890 81.505 -9.5297\n- X40   1    0.0961 81.512 -9.5123\n- X57   1    0.0997 81.516 -9.5033\n- X50   1    0.1001 81.516 -9.5024\n- X60   1    0.1020 81.518 -9.4978\n- X91   1    0.1118 81.528 -9.4737\n- X12   1    0.1135 81.530 -9.4695\n- X15   1    0.1651 81.581 -9.3430\n- X76   1    0.1678 81.584 -9.3363\n- X9    1    0.1872 81.604 -9.2887\n- X98   1    0.2161 81.632 -9.2181\n- X14   1    0.2287 81.645 -9.1871\n- X51   1    0.2295 81.646 -9.1852\n- X26   1    0.2391 81.655 -9.1617\n- X63   1    0.2474 81.664 -9.1412\n- X35   1    0.2537 81.670 -9.1259\n- X36   1    0.2868 81.703 -9.0449\n- X41   1    0.2886 81.705 -9.0405\n- X44   1    0.2935 81.710 -9.0283\n- X6    1    0.3311 81.747 -8.9365\n- X58   1    0.3423 81.759 -8.9091\n- X74   1    0.3430 81.759 -8.9073\n- X77   1    0.3435 81.760 -8.9060\n- X16   1    0.3487 81.765 -8.8934\n- X4    1    0.3492 81.766 -8.8923\n- X97   1    0.3647 81.781 -8.8543\n- X5    1    0.4022 81.819 -8.7626\n- X85   1    0.4040 81.820 -8.7581\n- X8    1    0.4287 81.845 -8.6979\n- X95   1    0.4297 81.846 -8.6953\n- X34   1    0.4315 81.848 -8.6910\n- X25   1    0.5262 81.943 -8.4598\n- X27   1    0.5925 82.009 -8.2980\n- X56   1    0.6188 82.035 -8.2339\n- X62   1    0.6311 82.048 -8.2038\n- X33   1    0.6362 82.053 -8.1913\n- X11   1    0.6364 82.053 -8.1909\n- X30   1    0.6687 82.085 -8.1121\n- X42   1    0.6975 82.114 -8.0419\n- X20   1    0.7013 82.118 -8.0327\n- X24   1    0.7051 82.122 -8.0235\n- X3    1    0.7113 82.128 -8.0085\n- X72   1    0.7317 82.148 -7.9589\n<none>              81.416 -7.7482\n- X18   1    0.8318 82.248 -7.7153\n- X37   1    0.8627 82.279 -7.6400\n- X53   1    0.8735 82.290 -7.6139\n- X80   1    0.8792 82.296 -7.6001\n- X45   1    0.8891 82.305 -7.5760\n- X81   1    0.9045 82.321 -7.5386\n- X73   1    0.9747 82.391 -7.3681\n- X68   1    1.0046 82.421 -7.2954\n- X100  1    1.0188 82.435 -7.2610\n- X29   1    1.0556 82.472 -7.1716\n- X66   1    1.1165 82.533 -7.0241\n- X90   1    1.1279 82.544 -6.9964\n- X89   1    1.2422 82.659 -6.7198\n- X49   1    1.3257 82.742 -6.5178\n- X87   1    1.3811 82.798 -6.3839\n- X65   1    1.4005 82.817 -6.3372\n- X64   1    1.5845 83.001 -5.8931\n- X71   1    2.1648 83.581 -4.4997\n- X13   1    2.2511 83.667 -4.2934\n- X88   1    2.2577 83.674 -4.2776\n- X94   1    2.3499 83.766 -4.0573\n- X2    1    2.4374 83.854 -3.8486\n- X7    1    2.4994 83.916 -3.7007\n- X1    1    3.0859 84.502 -2.3078\n- X47   1    3.2402 84.657 -1.9429\n- X23   1    3.3571 84.774 -1.6668\n- X48   1    3.3605 84.777 -1.6589\n- X46   1    3.5525 84.969 -1.2063\n- X75   1    3.6748 85.091 -0.9187\n\nStep:  AIC=-9.65\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X28 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + \n    X39 + X40 + X41 + X42 + X43 + X44 + X45 + X46 + X47 + X48 + \n    X49 + X50 + X51 + X53 + X56 + X57 + X58 + X60 + X61 + X62 + \n    X63 + X64 + X65 + X66 + X67 + X68 + X71 + X72 + X73 + X74 + \n    X75 + X76 + X77 + X78 + X79 + X80 + X81 + X83 + X84 + X85 + \n    X87 + X88 + X89 + X90 + X91 + X92 + X94 + X95 + X96 + X97 + \n    X98 + X99 + X100\n\n       Df Sum of Sq    RSS      AIC\n- X43   1    0.0381 81.496 -11.5520\n- X78   1    0.0399 81.498 -11.5477\n- X28   1    0.0424 81.501 -11.5415\n- X96   1    0.0457 81.504 -11.5334\n- X61   1    0.0530 81.511 -11.5154\n- X84   1    0.0560 81.514 -11.5081\n- X79   1    0.0569 81.515 -11.5058\n- X83   1    0.0585 81.517 -11.5020\n- X99   1    0.0618 81.520 -11.4939\n- X39   1    0.0825 81.541 -11.4432\n- X67   1    0.0828 81.541 -11.4422\n- X60   1    0.0909 81.549 -11.4224\n- X31   1    0.0974 81.556 -11.4066\n- X92   1    0.0990 81.557 -11.4026\n- X40   1    0.1078 81.566 -11.3811\n- X57   1    0.1083 81.566 -11.3799\n- X50   1    0.1134 81.572 -11.3674\n- X91   1    0.1142 81.572 -11.3653\n- X12   1    0.1420 81.600 -11.2972\n- X76   1    0.1564 81.615 -11.2620\n- X15   1    0.1684 81.627 -11.2326\n- X51   1    0.2107 81.669 -11.1288\n- X9    1    0.2123 81.670 -11.1249\n- X63   1    0.2136 81.672 -11.1218\n- X98   1    0.2235 81.682 -11.0974\n- X14   1    0.2274 81.686 -11.0880\n- X35   1    0.2437 81.702 -11.0481\n- X26   1    0.2487 81.707 -11.0358\n- X44   1    0.2653 81.723 -10.9953\n- X36   1    0.2911 81.749 -10.9321\n- X74   1    0.3117 81.770 -10.8818\n- X16   1    0.3136 81.772 -10.8770\n- X41   1    0.3252 81.783 -10.8487\n- X6    1    0.3325 81.791 -10.8308\n- X58   1    0.3353 81.793 -10.8240\n- X77   1    0.3467 81.805 -10.7962\n- X97   1    0.3528 81.811 -10.7811\n- X5    1    0.3713 81.829 -10.7360\n- X4    1    0.3753 81.833 -10.7262\n- X8    1    0.4066 81.865 -10.6496\n- X85   1    0.4239 81.882 -10.6074\n- X34   1    0.4325 81.891 -10.5865\n- X95   1    0.4559 81.914 -10.5293\n- X25   1    0.5060 81.964 -10.4070\n- X27   1    0.5546 82.013 -10.2885\n- X56   1    0.5788 82.037 -10.2293\n- X11   1    0.6111 82.069 -10.1508\n- X33   1    0.6274 82.086 -10.1109\n- X30   1    0.6340 82.092 -10.0948\n- X62   1    0.7005 82.159  -9.9331\n- X20   1    0.7433 82.201  -9.8289\n- X72   1    0.7565 82.215  -9.7968\n- X3    1    0.8013 82.259  -9.6877\n<none>              81.458  -9.6455\n- X24   1    0.8203 82.279  -9.6415\n- X42   1    0.8347 82.293  -9.6065\n- X53   1    0.8394 82.298  -9.5951\n- X80   1    0.8396 82.298  -9.5946\n- X37   1    0.8519 82.310  -9.5647\n- X18   1    0.8607 82.319  -9.5434\n- X45   1    0.8608 82.319  -9.5431\n- X81   1    0.8628 82.321  -9.5383\n- X100  1    1.0118 82.470  -9.1765\n- X29   1    1.0146 82.473  -9.1699\n- X73   1    1.0237 82.482  -9.1477\n- X68   1    1.0434 82.502  -9.0999\n- X66   1    1.1097 82.568  -8.9393\n- X90   1    1.2070 82.665  -8.7039\n- X89   1    1.2438 82.702  -8.6146\n- X49   1    1.3764 82.835  -8.2944\n- X87   1    1.3790 82.837  -8.2881\n- X64   1    1.5580 83.016  -7.8564\n- X65   1    1.5800 83.038  -7.8033\n- X71   1    2.1729 83.631  -6.3805\n- X88   1    2.2725 83.731  -6.1423\n- X13   1    2.2787 83.737  -6.1275\n- X94   1    2.3082 83.766  -6.0572\n- X2    1    2.4557 83.914  -5.7052\n- X7    1    2.4679 83.926  -5.6761\n- X47   1    3.2239 84.682  -3.8826\n- X1    1    3.2572 84.715  -3.8041\n- X23   1    3.3298 84.788  -3.6326\n- X48   1    3.3522 84.810  -3.5799\n- X46   1    3.5256 84.984  -3.1715\n- X75   1    3.7182 85.176  -2.7187\n\nStep:  AIC=-11.55\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X28 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + \n    X39 + X40 + X41 + X42 + X44 + X45 + X46 + X47 + X48 + X49 + \n    X50 + X51 + X53 + X56 + X57 + X58 + X60 + X61 + X62 + X63 + \n    X64 + X65 + X66 + X67 + X68 + X71 + X72 + X73 + X74 + X75 + \n    X76 + X77 + X78 + X79 + X80 + X81 + X83 + X84 + X85 + X87 + \n    X88 + X89 + X90 + X91 + X92 + X94 + X95 + X96 + X97 + X98 + \n    X99 + X100\n\n       Df Sum of Sq    RSS      AIC\n- X78   1    0.0308 81.527 -13.4763\n- X28   1    0.0366 81.533 -13.4621\n- X96   1    0.0438 81.540 -13.4446\n- X79   1    0.0493 81.546 -13.4311\n- X83   1    0.0542 81.550 -13.4191\n- X84   1    0.0564 81.553 -13.4136\n- X99   1    0.0631 81.559 -13.3972\n- X61   1    0.0635 81.560 -13.3962\n- X67   1    0.0790 81.575 -13.3583\n- X39   1    0.0869 81.583 -13.3389\n- X92   1    0.0895 81.586 -13.3323\n- X31   1    0.0908 81.587 -13.3294\n- X60   1    0.0917 81.588 -13.3270\n- X91   1    0.1032 81.599 -13.2990\n- X50   1    0.1060 81.602 -13.2921\n- X40   1    0.1093 81.606 -13.2840\n- X12   1    0.1208 81.617 -13.2557\n- X57   1    0.1213 81.618 -13.2546\n- X76   1    0.1454 81.642 -13.1954\n- X15   1    0.1624 81.659 -13.1538\n- X51   1    0.2017 81.698 -13.0576\n- X63   1    0.2102 81.707 -13.0368\n- X98   1    0.2120 81.708 -13.0323\n- X14   1    0.2142 81.711 -13.0269\n- X9    1    0.2231 81.719 -13.0051\n- X26   1    0.2232 81.720 -13.0049\n- X35   1    0.2271 81.723 -12.9954\n- X44   1    0.2663 81.763 -12.8996\n- X36   1    0.2697 81.766 -12.8911\n- X41   1    0.3050 81.801 -12.8049\n- X58   1    0.3099 81.806 -12.7929\n- X16   1    0.3212 81.817 -12.7654\n- X74   1    0.3261 81.822 -12.7533\n- X6    1    0.3285 81.825 -12.7474\n- X77   1    0.3419 81.838 -12.7146\n- X5    1    0.3420 81.838 -12.7144\n- X97   1    0.3856 81.882 -12.6080\n- X4    1    0.4050 81.901 -12.5605\n- X8    1    0.4211 81.917 -12.5212\n- X85   1    0.4233 81.920 -12.5159\n- X95   1    0.4507 81.947 -12.4489\n- X34   1    0.4771 81.973 -12.3845\n- X25   1    0.5228 82.019 -12.2730\n- X27   1    0.5410 82.037 -12.2287\n- X56   1    0.5647 82.061 -12.1710\n- X30   1    0.6259 82.122 -12.0219\n- X11   1    0.6337 82.130 -12.0029\n- X62   1    0.7246 82.221 -11.7816\n- X72   1    0.7403 82.237 -11.7434\n- X20   1    0.7440 82.240 -11.7344\n- X33   1    0.7527 82.249 -11.7134\n<none>              81.496 -11.5520\n- X80   1    0.8220 82.318 -11.5447\n- X18   1    0.8234 82.320 -11.5415\n- X24   1    0.8307 82.327 -11.5237\n- X37   1    0.8365 82.333 -11.5095\n- X53   1    0.8493 82.346 -11.4786\n- X81   1    0.8585 82.355 -11.4561\n- X45   1    0.8641 82.360 -11.4426\n- X3    1    0.8785 82.375 -11.4076\n- X42   1    0.9092 82.406 -11.3330\n- X68   1    1.0321 82.528 -11.0349\n- X29   1    1.0445 82.541 -11.0051\n- X100  1    1.0587 82.555 -10.9705\n- X73   1    1.0727 82.569 -10.9367\n- X66   1    1.1970 82.693 -10.6357\n- X89   1    1.2284 82.725 -10.5600\n- X90   1    1.2516 82.748 -10.5037\n- X49   1    1.4015 82.898 -10.1419\n- X87   1    1.5287 83.025  -9.8352\n- X65   1    1.5586 83.055  -9.7631\n- X64   1    1.6716 83.168  -9.4912\n- X13   1    2.2411 83.737  -8.1263\n- X88   1    2.2530 83.749  -8.0979\n- X94   1    2.2756 83.772  -8.0441\n- X71   1    2.3007 83.797  -7.9840\n- X7    1    2.4303 83.927  -7.6750\n- X2    1    2.5002 83.996  -7.5085\n- X47   1    3.2052 84.702  -5.8368\n- X1    1    3.2973 84.794  -5.6195\n- X23   1    3.3736 84.870  -5.4396\n- X48   1    3.4885 84.985  -5.1690\n- X46   1    3.5683 85.065  -4.9812\n- X75   1    3.6804 85.177  -4.7178\n\nStep:  AIC=-13.48\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X28 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + \n    X39 + X40 + X41 + X42 + X44 + X45 + X46 + X47 + X48 + X49 + \n    X50 + X51 + X53 + X56 + X57 + X58 + X60 + X61 + X62 + X63 + \n    X64 + X65 + X66 + X67 + X68 + X71 + X72 + X73 + X74 + X75 + \n    X76 + X77 + X79 + X80 + X81 + X83 + X84 + X85 + X87 + X88 + \n    X89 + X90 + X91 + X92 + X94 + X95 + X96 + X97 + X98 + X99 + \n    X100\n\n       Df Sum of Sq    RSS      AIC\n- X28   1    0.0393 81.566 -15.3800\n- X96   1    0.0459 81.573 -15.3637\n- X99   1    0.0546 81.582 -15.3426\n- X84   1    0.0571 81.584 -15.3363\n- X83   1    0.0595 81.587 -15.3304\n- X61   1    0.0605 81.588 -15.3279\n- X79   1    0.0659 81.593 -15.3148\n- X67   1    0.0790 81.606 -15.2826\n- X39   1    0.0846 81.612 -15.2689\n- X60   1    0.0916 81.619 -15.2517\n- X31   1    0.0939 81.621 -15.2462\n- X50   1    0.0969 81.624 -15.2389\n- X91   1    0.0981 81.625 -15.2359\n- X40   1    0.1049 81.632 -15.2193\n- X57   1    0.1117 81.639 -15.2025\n- X92   1    0.1119 81.639 -15.2021\n- X12   1    0.1262 81.653 -15.1669\n- X76   1    0.1633 81.690 -15.0762\n- X15   1    0.1953 81.722 -14.9979\n- X63   1    0.2039 81.731 -14.9768\n- X51   1    0.2042 81.731 -14.9761\n- X9    1    0.2063 81.733 -14.9709\n- X98   1    0.2075 81.735 -14.9681\n- X14   1    0.2247 81.752 -14.9258\n- X35   1    0.2480 81.775 -14.8689\n- X26   1    0.2624 81.790 -14.8336\n- X44   1    0.2734 81.801 -14.8067\n- X41   1    0.2808 81.808 -14.7887\n- X36   1    0.2875 81.815 -14.7723\n- X16   1    0.2985 81.826 -14.7454\n- X74   1    0.3086 81.836 -14.7208\n- X6    1    0.3108 81.838 -14.7153\n- X58   1    0.3354 81.863 -14.6552\n- X5    1    0.3502 81.877 -14.6190\n- X77   1    0.3721 81.899 -14.5657\n- X97   1    0.3779 81.905 -14.5514\n- X4    1    0.4106 81.938 -14.4715\n- X85   1    0.4118 81.939 -14.4686\n- X95   1    0.4390 81.966 -14.4023\n- X8    1    0.4451 81.972 -14.3873\n- X34   1    0.4746 82.002 -14.3155\n- X25   1    0.5122 82.039 -14.2238\n- X27   1    0.5464 82.073 -14.1404\n- X56   1    0.5734 82.100 -14.0747\n- X11   1    0.6105 82.138 -13.9843\n- X30   1    0.6244 82.152 -13.9503\n- X62   1    0.7171 82.244 -13.7249\n- X33   1    0.7497 82.277 -13.6457\n- X20   1    0.7571 82.284 -13.6275\n- X72   1    0.7656 82.293 -13.6070\n<none>              81.527 -13.4763\n- X53   1    0.8217 82.349 -13.4707\n- X81   1    0.8442 82.371 -13.4160\n- X37   1    0.8488 82.376 -13.4049\n- X45   1    0.8592 82.386 -13.3795\n- X24   1    0.8685 82.396 -13.3571\n- X3    1    0.8687 82.396 -13.3565\n- X80   1    0.8761 82.403 -13.3385\n- X18   1    0.8771 82.404 -13.3361\n- X42   1    0.8787 82.406 -13.3324\n- X73   1    1.0517 82.579 -12.9129\n- X29   1    1.0608 82.588 -12.8909\n- X100  1    1.0709 82.598 -12.8664\n- X68   1    1.0788 82.606 -12.8472\n- X66   1    1.1999 82.727 -12.5543\n- X89   1    1.2191 82.746 -12.5077\n- X90   1    1.2348 82.762 -12.4699\n- X49   1    1.4762 83.003 -11.8873\n- X65   1    1.5329 83.060 -11.7508\n- X87   1    1.5335 83.061 -11.7495\n- X64   1    1.7409 83.268 -11.2505\n- X13   1    2.2715 83.799  -9.9802\n- X94   1    2.2729 83.800  -9.9769\n- X88   1    2.2993 83.826  -9.9138\n- X71   1    2.3053 83.832  -9.8996\n- X7    1    2.4198 83.947  -9.6266\n- X2    1    2.4957 84.023  -9.4459\n- X47   1    3.1748 84.702  -7.8359\n- X1    1    3.2770 84.804  -7.5947\n- X48   1    3.4676 84.995  -7.1456\n- X23   1    3.5723 85.099  -6.8995\n- X46   1    3.6488 85.176  -6.7196\n- X75   1    3.6637 85.191  -6.6846\n\nStep:  AIC=-15.38\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X39 + \n    X40 + X41 + X42 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + \n    X51 + X53 + X56 + X57 + X58 + X60 + X61 + X62 + X63 + X64 + \n    X65 + X66 + X67 + X68 + X71 + X72 + X73 + X74 + X75 + X76 + \n    X77 + X79 + X80 + X81 + X83 + X84 + X85 + X87 + X88 + X89 + \n    X90 + X91 + X92 + X94 + X95 + X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS      AIC\n- X84   1    0.0411 81.608 -17.2792\n- X61   1    0.0462 81.613 -17.2667\n- X96   1    0.0464 81.613 -17.2661\n- X99   1    0.0512 81.618 -17.2544\n- X79   1    0.0526 81.619 -17.2511\n- X83   1    0.0660 81.632 -17.2181\n- X60   1    0.0797 81.646 -17.1846\n- X39   1    0.0823 81.649 -17.1783\n- X31   1    0.0881 81.654 -17.1642\n- X67   1    0.0935 81.660 -17.1509\n- X91   1    0.0947 81.661 -17.1478\n- X40   1    0.1006 81.667 -17.1333\n- X92   1    0.1086 81.675 -17.1138\n- X57   1    0.1197 81.686 -17.0866\n- X12   1    0.1209 81.687 -17.0837\n- X50   1    0.1249 81.691 -17.0740\n- X76   1    0.1524 81.719 -17.0067\n- X51   1    0.1767 81.743 -16.9471\n- X63   1    0.1971 81.764 -16.8972\n- X9    1    0.2180 81.784 -16.8460\n- X98   1    0.2215 81.788 -16.8376\n- X15   1    0.2362 81.803 -16.8016\n- X14   1    0.2389 81.805 -16.7951\n- X35   1    0.2409 81.807 -16.7901\n- X36   1    0.2656 81.832 -16.7299\n- X44   1    0.2688 81.835 -16.7220\n- X74   1    0.2786 81.845 -16.6980\n- X16   1    0.2885 81.855 -16.6737\n- X26   1    0.3002 81.867 -16.6452\n- X41   1    0.3128 81.879 -16.6144\n- X58   1    0.3265 81.893 -16.5809\n- X6    1    0.3294 81.896 -16.5740\n- X77   1    0.3374 81.904 -16.5544\n- X5    1    0.3650 81.931 -16.4871\n- X97   1    0.3819 81.948 -16.4458\n- X85   1    0.4287 81.995 -16.3316\n- X4    1    0.4336 82.000 -16.3197\n- X95   1    0.4444 82.011 -16.2934\n- X8    1    0.4647 82.031 -16.2437\n- X34   1    0.4852 82.052 -16.1938\n- X25   1    0.5135 82.080 -16.1248\n- X27   1    0.5203 82.087 -16.1082\n- X56   1    0.5966 82.163 -15.9224\n- X11   1    0.6125 82.179 -15.8837\n- X30   1    0.6182 82.185 -15.8698\n- X62   1    0.6811 82.247 -15.7169\n- X33   1    0.7227 82.289 -15.6157\n- X20   1    0.7597 82.326 -15.5257\n- X72   1    0.7704 82.337 -15.5000\n<none>              81.566 -15.3800\n- X81   1    0.8273 82.394 -15.3617\n- X53   1    0.8342 82.401 -15.3450\n- X45   1    0.8403 82.407 -15.3301\n- X80   1    0.8439 82.410 -15.3213\n- X24   1    0.8463 82.413 -15.3155\n- X18   1    0.8574 82.424 -15.2885\n- X3    1    0.8894 82.456 -15.2109\n- X42   1    0.9040 82.470 -15.1755\n- X37   1    0.9297 82.496 -15.1132\n- X73   1    1.0231 82.590 -14.8868\n- X100  1    1.0471 82.613 -14.8289\n- X29   1    1.0495 82.616 -14.8229\n- X68   1    1.0917 82.658 -14.7208\n- X66   1    1.1627 82.729 -14.5492\n- X89   1    1.2202 82.787 -14.4101\n- X90   1    1.2795 82.846 -14.2669\n- X49   1    1.4594 83.026 -13.8332\n- X87   1    1.5261 83.093 -13.6725\n- X65   1    1.6594 83.226 -13.3519\n- X64   1    1.7099 83.276 -13.2307\n- X94   1    2.2662 83.833 -11.8990\n- X13   1    2.3652 83.932 -11.6630\n- X7    1    2.4438 84.010 -11.4757\n- X71   1    2.4545 84.021 -11.4504\n- X2    1    2.4707 84.037 -11.4118\n- X88   1    2.4867 84.053 -11.3737\n- X47   1    3.2633 84.830  -9.5342\n- X1    1    3.3154 84.882  -9.4116\n- X48   1    3.4989 85.065  -8.9796\n- X23   1    3.5582 85.125  -8.8403\n- X46   1    3.6107 85.177  -8.7169\n- X75   1    3.6263 85.193  -8.6803\n\nStep:  AIC=-17.28\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X39 + \n    X40 + X41 + X42 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + \n    X51 + X53 + X56 + X57 + X58 + X60 + X61 + X62 + X63 + X64 + \n    X65 + X66 + X67 + X68 + X71 + X72 + X73 + X74 + X75 + X76 + \n    X77 + X79 + X80 + X81 + X83 + X85 + X87 + X88 + X89 + X90 + \n    X91 + X92 + X94 + X95 + X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X79   1    0.0458 81.653 -19.167\n- X61   1    0.0511 81.659 -19.154\n- X96   1    0.0590 81.667 -19.135\n- X99   1    0.0626 81.670 -19.126\n- X83   1    0.0694 81.677 -19.109\n- X39   1    0.0709 81.678 -19.105\n- X60   1    0.0743 81.682 -19.097\n- X31   1    0.0886 81.696 -19.062\n- X40   1    0.0978 81.705 -19.040\n- X91   1    0.1017 81.709 -19.030\n- X67   1    0.1051 81.713 -19.022\n- X12   1    0.1089 81.716 -19.013\n- X50   1    0.1162 81.724 -18.995\n- X92   1    0.1170 81.725 -18.993\n- X57   1    0.1397 81.747 -18.937\n- X51   1    0.1598 81.767 -18.888\n- X76   1    0.1629 81.770 -18.880\n- X63   1    0.1787 81.786 -18.842\n- X98   1    0.2167 81.824 -18.749\n- X14   1    0.2236 81.831 -18.732\n- X35   1    0.2327 81.840 -18.710\n- X9    1    0.2410 81.849 -18.689\n- X44   1    0.2507 81.858 -18.666\n- X74   1    0.2546 81.862 -18.656\n- X15   1    0.2589 81.866 -18.646\n- X36   1    0.2692 81.877 -18.620\n- X16   1    0.2828 81.890 -18.587\n- X58   1    0.3038 81.911 -18.536\n- X77   1    0.3124 81.920 -18.515\n- X26   1    0.3155 81.923 -18.507\n- X6    1    0.3266 81.934 -18.480\n- X41   1    0.3473 81.955 -18.430\n- X5    1    0.3491 81.957 -18.425\n- X85   1    0.3983 82.006 -18.305\n- X97   1    0.3994 82.007 -18.303\n- X95   1    0.4619 82.069 -18.150\n- X4    1    0.4710 82.079 -18.128\n- X34   1    0.4776 82.085 -18.112\n- X8    1    0.4897 82.097 -18.083\n- X25   1    0.5047 82.112 -18.046\n- X27   1    0.5627 82.170 -17.905\n- X56   1    0.5746 82.182 -17.876\n- X30   1    0.5852 82.193 -17.850\n- X11   1    0.6079 82.215 -17.795\n- X62   1    0.7232 82.331 -17.515\n- X33   1    0.7232 82.331 -17.515\n- X81   1    0.8036 82.411 -17.319\n- X72   1    0.8122 82.420 -17.299\n- X80   1    0.8134 82.421 -17.296\n- X45   1    0.8138 82.421 -17.295\n<none>              81.608 -17.279\n- X53   1    0.8368 82.444 -17.239\n- X24   1    0.8480 82.455 -17.212\n- X18   1    0.8908 82.498 -17.108\n- X42   1    0.9000 82.507 -17.086\n- X20   1    0.9028 82.510 -17.079\n- X37   1    0.9101 82.518 -17.061\n- X3    1    0.9600 82.568 -16.940\n- X100  1    1.0126 82.620 -16.813\n- X29   1    1.0704 82.678 -16.673\n- X73   1    1.0794 82.687 -16.651\n- X68   1    1.1590 82.766 -16.459\n- X66   1    1.1815 82.789 -16.404\n- X89   1    1.1918 82.799 -16.379\n- X90   1    1.2773 82.885 -16.173\n- X49   1    1.5785 83.186 -15.447\n- X87   1    1.6378 83.245 -15.305\n- X64   1    1.7224 83.330 -15.102\n- X65   1    1.7669 83.374 -14.995\n- X94   1    2.2975 83.905 -13.726\n- X13   1    2.3627 83.970 -13.571\n- X7    1    2.4202 84.028 -13.434\n- X2    1    2.4423 84.050 -13.382\n- X71   1    2.4779 84.085 -13.297\n- X88   1    2.5504 84.158 -13.124\n- X47   1    3.2234 84.831 -11.531\n- X1    1    3.3581 84.966 -11.214\n- X48   1    3.4915 85.099 -10.900\n- X23   1    3.5242 85.132 -10.823\n- X46   1    3.5768 85.184 -10.700\n- X75   1    3.5928 85.200 -10.662\n\nStep:  AIC=-19.17\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X39 + \n    X40 + X41 + X42 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + \n    X51 + X53 + X56 + X57 + X58 + X60 + X61 + X62 + X63 + X64 + \n    X65 + X66 + X67 + X68 + X71 + X72 + X73 + X74 + X75 + X76 + \n    X77 + X80 + X81 + X83 + X85 + X87 + X88 + X89 + X90 + X91 + \n    X92 + X94 + X95 + X96 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X96   1    0.0427 81.696 -21.062\n- X61   1    0.0485 81.702 -21.048\n- X39   1    0.0686 81.722 -20.999\n- X99   1    0.0690 81.722 -20.998\n- X83   1    0.0703 81.724 -20.995\n- X60   1    0.0739 81.727 -20.986\n- X40   1    0.0848 81.738 -20.959\n- X67   1    0.0911 81.744 -20.944\n- X31   1    0.0925 81.746 -20.940\n- X91   1    0.1015 81.755 -20.919\n- X12   1    0.1070 81.760 -20.905\n- X92   1    0.1119 81.765 -20.893\n- X51   1    0.1471 81.800 -20.807\n- X57   1    0.1476 81.801 -20.806\n- X50   1    0.1492 81.803 -20.802\n- X76   1    0.1664 81.820 -20.760\n- X63   1    0.1898 81.843 -20.703\n- X35   1    0.2119 81.865 -20.649\n- X98   1    0.2248 81.878 -20.617\n- X9    1    0.2263 81.880 -20.613\n- X14   1    0.2304 81.884 -20.604\n- X74   1    0.2450 81.898 -20.568\n- X44   1    0.2480 81.901 -20.560\n- X36   1    0.2543 81.908 -20.545\n- X15   1    0.2610 81.914 -20.529\n- X58   1    0.2891 81.942 -20.460\n- X16   1    0.2972 81.951 -20.440\n- X77   1    0.3138 81.967 -20.400\n- X26   1    0.3343 81.988 -20.350\n- X5    1    0.3421 81.995 -20.331\n- X41   1    0.3625 82.016 -20.281\n- X6    1    0.3705 82.024 -20.261\n- X85   1    0.4015 82.055 -20.186\n- X97   1    0.4015 82.055 -20.186\n- X95   1    0.4415 82.095 -20.089\n- X4    1    0.4744 82.128 -20.008\n- X25   1    0.4871 82.140 -19.977\n- X34   1    0.4910 82.144 -19.968\n- X8    1    0.4965 82.150 -19.954\n- X27   1    0.5222 82.176 -19.892\n- X56   1    0.5669 82.220 -19.783\n- X11   1    0.5980 82.251 -19.707\n- X30   1    0.6229 82.276 -19.647\n- X33   1    0.7178 82.371 -19.416\n- X81   1    0.7745 82.428 -19.279\n- X62   1    0.7864 82.440 -19.250\n- X45   1    0.7980 82.451 -19.222\n- X72   1    0.8103 82.464 -19.192\n- X80   1    0.8112 82.465 -19.190\n- X24   1    0.8134 82.467 -19.185\n<none>              81.653 -19.167\n- X53   1    0.8536 82.507 -19.087\n- X18   1    0.8702 82.524 -19.047\n- X37   1    0.8837 82.537 -19.014\n- X20   1    0.9049 82.558 -18.963\n- X42   1    0.9795 82.633 -18.782\n- X100  1    0.9885 82.642 -18.760\n- X3    1    1.0180 82.671 -18.689\n- X73   1    1.0915 82.745 -18.511\n- X29   1    1.0960 82.749 -18.500\n- X68   1    1.1532 82.807 -18.362\n- X66   1    1.1602 82.813 -18.345\n- X89   1    1.1877 82.841 -18.279\n- X90   1    1.3042 82.958 -17.998\n- X49   1    1.6479 83.301 -17.171\n- X87   1    1.6563 83.310 -17.151\n- X64   1    1.6893 83.343 -17.072\n- X65   1    1.7453 83.399 -16.937\n- X94   1    2.2978 83.951 -15.617\n- X13   1    2.3444 83.998 -15.505\n- X7    1    2.3869 84.040 -15.404\n- X2    1    2.4409 84.094 -15.276\n- X88   1    2.5464 84.200 -15.025\n- X71   1    2.6109 84.264 -14.872\n- X47   1    3.2053 84.859 -13.466\n- X1    1    3.3715 85.025 -13.075\n- X48   1    3.5031 85.156 -12.765\n- X23   1    3.5425 85.196 -12.673\n- X75   1    3.5775 85.231 -12.591\n- X46   1    3.6199 85.273 -12.491\n\nStep:  AIC=-21.06\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X39 + \n    X40 + X41 + X42 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + \n    X51 + X53 + X56 + X57 + X58 + X60 + X61 + X62 + X63 + X64 + \n    X65 + X66 + X67 + X68 + X71 + X72 + X73 + X74 + X75 + X76 + \n    X77 + X80 + X81 + X83 + X85 + X87 + X88 + X89 + X90 + X91 + \n    X92 + X94 + X95 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X61   1    0.0558 81.752 -22.926\n- X99   1    0.0657 81.762 -22.902\n- X60   1    0.0673 81.763 -22.898\n- X40   1    0.0737 81.770 -22.882\n- X67   1    0.0760 81.772 -22.876\n- X83   1    0.0808 81.777 -22.864\n- X31   1    0.0820 81.778 -22.862\n- X39   1    0.0836 81.780 -22.858\n- X91   1    0.1015 81.798 -22.814\n- X92   1    0.1075 81.804 -22.799\n- X12   1    0.1159 81.812 -22.779\n- X76   1    0.1409 81.837 -22.718\n- X51   1    0.1449 81.841 -22.708\n- X57   1    0.1474 81.843 -22.702\n- X50   1    0.1561 81.852 -22.680\n- X63   1    0.1763 81.872 -22.631\n- X35   1    0.1949 81.891 -22.586\n- X9    1    0.2189 81.915 -22.527\n- X98   1    0.2259 81.922 -22.510\n- X14   1    0.2293 81.925 -22.502\n- X74   1    0.2356 81.932 -22.486\n- X44   1    0.2414 81.937 -22.472\n- X15   1    0.2480 81.944 -22.456\n- X36   1    0.2658 81.962 -22.413\n- X16   1    0.2765 81.973 -22.387\n- X58   1    0.2939 81.990 -22.344\n- X26   1    0.3468 82.043 -22.215\n- X5    1    0.3504 82.046 -22.206\n- X77   1    0.3507 82.047 -22.206\n- X41   1    0.3522 82.048 -22.202\n- X97   1    0.3688 82.065 -22.162\n- X6    1    0.4004 82.096 -22.085\n- X85   1    0.4006 82.097 -22.084\n- X95   1    0.4194 82.115 -22.038\n- X4    1    0.4593 82.155 -21.941\n- X25   1    0.4790 82.175 -21.893\n- X27   1    0.4990 82.195 -21.844\n- X34   1    0.5050 82.201 -21.830\n- X8    1    0.5178 82.214 -21.799\n- X56   1    0.5802 82.276 -21.647\n- X11   1    0.5963 82.292 -21.608\n- X30   1    0.6653 82.361 -21.440\n- X33   1    0.6784 82.374 -21.408\n- X62   1    0.7679 82.464 -21.191\n- X81   1    0.7852 82.481 -21.149\n- X72   1    0.7972 82.493 -21.120\n- X45   1    0.8107 82.507 -21.087\n<none>              81.696 -21.062\n- X18   1    0.8284 82.524 -21.045\n- X80   1    0.8353 82.531 -21.028\n- X37   1    0.8543 82.550 -20.982\n- X53   1    0.8603 82.556 -20.967\n- X24   1    0.9013 82.597 -20.868\n- X20   1    0.9165 82.613 -20.831\n- X42   1    0.9872 82.683 -20.660\n- X100  1    0.9890 82.685 -20.656\n- X29   1    1.0873 82.783 -20.418\n- X3    1    1.1161 82.812 -20.349\n- X66   1    1.1246 82.821 -20.328\n- X73   1    1.1309 82.827 -20.313\n- X89   1    1.1617 82.858 -20.238\n- X68   1    1.2438 82.940 -20.040\n- X90   1    1.3245 83.021 -19.846\n- X87   1    1.7019 83.398 -18.939\n- X64   1    1.7030 83.399 -18.936\n- X65   1    1.7292 83.425 -18.873\n- X49   1    1.7307 83.427 -18.870\n- X94   1    2.3184 84.014 -17.466\n- X13   1    2.3461 84.042 -17.400\n- X7    1    2.3849 84.081 -17.308\n- X2    1    2.4352 84.131 -17.188\n- X88   1    2.5435 84.240 -16.930\n- X71   1    2.5697 84.266 -16.868\n- X47   1    3.1915 84.888 -15.398\n- X48   1    3.4669 85.163 -14.750\n- X1    1    3.5250 85.221 -14.614\n- X75   1    3.5348 85.231 -14.591\n- X23   1    3.5581 85.254 -14.536\n- X46   1    3.5895 85.286 -14.462\n\nStep:  AIC=-22.93\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X39 + \n    X40 + X41 + X42 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + \n    X51 + X53 + X56 + X57 + X58 + X60 + X62 + X63 + X64 + X65 + \n    X66 + X67 + X68 + X71 + X72 + X73 + X74 + X75 + X76 + X77 + \n    X80 + X81 + X83 + X85 + X87 + X88 + X89 + X90 + X91 + X92 + \n    X94 + X95 + X97 + X98 + X99 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X99   1    0.0602 81.812 -24.779\n- X60   1    0.0626 81.814 -24.773\n- X67   1    0.0660 81.818 -24.765\n- X40   1    0.0663 81.818 -24.764\n- X39   1    0.0740 81.826 -24.745\n- X83   1    0.0867 81.839 -24.714\n- X91   1    0.0935 81.845 -24.697\n- X31   1    0.1035 81.855 -24.673\n- X51   1    0.1179 81.870 -24.637\n- X92   1    0.1209 81.873 -24.630\n- X57   1    0.1221 81.874 -24.627\n- X12   1    0.1249 81.877 -24.620\n- X76   1    0.1431 81.895 -24.576\n- X63   1    0.1820 81.934 -24.481\n- X9    1    0.2080 81.960 -24.418\n- X74   1    0.2100 81.962 -24.413\n- X35   1    0.2106 81.962 -24.411\n- X50   1    0.2127 81.965 -24.406\n- X14   1    0.2175 81.969 -24.394\n- X15   1    0.2577 82.010 -24.296\n- X16   1    0.2581 82.010 -24.295\n- X36   1    0.2588 82.011 -24.294\n- X44   1    0.2636 82.015 -24.282\n- X98   1    0.2669 82.019 -24.274\n- X58   1    0.2836 82.035 -24.233\n- X97   1    0.3411 82.093 -24.093\n- X77   1    0.3419 82.094 -24.091\n- X41   1    0.3549 82.107 -24.059\n- X5    1    0.3653 82.117 -24.034\n- X6    1    0.3895 82.141 -23.975\n- X26   1    0.4013 82.153 -23.946\n- X85   1    0.4115 82.163 -23.922\n- X95   1    0.4502 82.202 -23.828\n- X4    1    0.4678 82.220 -23.785\n- X25   1    0.4690 82.221 -23.782\n- X34   1    0.4919 82.244 -23.726\n- X27   1    0.4946 82.246 -23.719\n- X8    1    0.5325 82.284 -23.627\n- X56   1    0.5893 82.341 -23.489\n- X11   1    0.6222 82.374 -23.409\n- X33   1    0.6341 82.386 -23.381\n- X30   1    0.6437 82.396 -23.357\n- X62   1    0.7654 82.517 -23.062\n- X45   1    0.7894 82.541 -23.004\n- X81   1    0.7899 82.542 -23.003\n- X72   1    0.8158 82.568 -22.940\n- X53   1    0.8213 82.573 -22.927\n<none>              81.752 -22.926\n- X18   1    0.9066 82.658 -22.720\n- X80   1    0.9093 82.661 -22.714\n- X24   1    0.9142 82.666 -22.702\n- X20   1    0.9439 82.696 -22.630\n- X42   1    0.9741 82.726 -22.557\n- X37   1    0.9823 82.734 -22.537\n- X29   1    1.0317 82.784 -22.418\n- X100  1    1.0456 82.797 -22.384\n- X73   1    1.0760 82.828 -22.311\n- X66   1    1.0899 82.842 -22.277\n- X3    1    1.1177 82.870 -22.210\n- X89   1    1.2205 82.972 -21.962\n- X68   1    1.2286 82.980 -21.942\n- X90   1    1.3977 83.150 -21.535\n- X87   1    1.6693 83.421 -20.883\n- X64   1    1.6718 83.424 -20.877\n- X65   1    1.7373 83.489 -20.720\n- X49   1    1.7483 83.500 -20.694\n- X94   1    2.2953 84.047 -19.388\n- X2    1    2.3795 84.131 -19.188\n- X13   1    2.5140 84.266 -18.868\n- X88   1    2.5467 84.299 -18.791\n- X7    1    2.5879 84.340 -18.693\n- X71   1    2.6035 84.355 -18.656\n- X47   1    3.1434 84.895 -17.380\n- X48   1    3.4171 85.169 -16.736\n- X23   1    3.5082 85.260 -16.522\n- X75   1    3.5197 85.272 -16.495\n- X1    1    3.5830 85.335 -16.347\n- X46   1    3.7572 85.509 -15.939\n\nStep:  AIC=-24.78\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X39 + \n    X40 + X41 + X42 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + \n    X51 + X53 + X56 + X57 + X58 + X60 + X62 + X63 + X64 + X65 + \n    X66 + X67 + X68 + X71 + X72 + X73 + X74 + X75 + X76 + X77 + \n    X80 + X81 + X83 + X85 + X87 + X88 + X89 + X90 + X91 + X92 + \n    X94 + X95 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X40   1    0.0619 81.874 -26.627\n- X60   1    0.0634 81.875 -26.624\n- X39   1    0.0734 81.885 -26.599\n- X91   1    0.0883 81.900 -26.563\n- X67   1    0.0961 81.908 -26.544\n- X57   1    0.0985 81.911 -26.538\n- X31   1    0.1008 81.913 -26.532\n- X12   1    0.1018 81.914 -26.530\n- X83   1    0.1130 81.925 -26.503\n- X51   1    0.1208 81.933 -26.483\n- X92   1    0.1276 81.940 -26.467\n- X76   1    0.1462 81.958 -26.422\n- X9    1    0.1935 82.006 -26.306\n- X50   1    0.2103 82.022 -26.265\n- X63   1    0.2159 82.028 -26.251\n- X74   1    0.2197 82.032 -26.242\n- X35   1    0.2231 82.035 -26.234\n- X14   1    0.2253 82.037 -26.229\n- X36   1    0.2430 82.055 -26.185\n- X16   1    0.2580 82.070 -26.149\n- X15   1    0.2614 82.073 -26.141\n- X44   1    0.2648 82.077 -26.132\n- X98   1    0.2710 82.083 -26.117\n- X58   1    0.2924 82.104 -26.065\n- X41   1    0.3313 82.143 -25.970\n- X77   1    0.3324 82.144 -25.968\n- X5    1    0.3686 82.181 -25.880\n- X6    1    0.3686 82.181 -25.879\n- X97   1    0.3735 82.186 -25.868\n- X26   1    0.3905 82.203 -25.826\n- X85   1    0.4197 82.232 -25.755\n- X95   1    0.4252 82.237 -25.742\n- X27   1    0.4531 82.265 -25.674\n- X34   1    0.4540 82.266 -25.672\n- X25   1    0.4823 82.294 -25.603\n- X8    1    0.4944 82.306 -25.574\n- X4    1    0.5012 82.313 -25.557\n- X33   1    0.5855 82.398 -25.352\n- X56   1    0.6138 82.426 -25.284\n- X11   1    0.6507 82.463 -25.194\n- X30   1    0.6823 82.494 -25.117\n- X62   1    0.7672 82.579 -24.912\n- X45   1    0.8105 82.623 -24.807\n<none>              81.812 -24.779\n- X72   1    0.8247 82.637 -24.773\n- X53   1    0.8559 82.668 -24.697\n- X24   1    0.9059 82.718 -24.576\n- X42   1    0.9157 82.728 -24.552\n- X18   1    0.9248 82.737 -24.530\n- X80   1    0.9317 82.744 -24.514\n- X81   1    0.9414 82.753 -24.490\n- X20   1    0.9730 82.785 -24.414\n- X29   1    0.9806 82.793 -24.396\n- X37   1    0.9856 82.798 -24.384\n- X73   1    1.0198 82.832 -24.301\n- X100  1    1.0375 82.849 -24.258\n- X66   1    1.0643 82.876 -24.194\n- X3    1    1.1475 82.960 -23.993\n- X89   1    1.1960 83.008 -23.876\n- X68   1    1.1994 83.011 -23.868\n- X90   1    1.3476 83.160 -23.511\n- X87   1    1.6229 83.435 -22.850\n- X64   1    1.6399 83.452 -22.809\n- X65   1    1.7609 83.573 -22.519\n- X49   1    1.7654 83.577 -22.509\n- X94   1    2.2568 84.069 -21.336\n- X2    1    2.4174 84.229 -20.955\n- X13   1    2.4829 84.295 -20.799\n- X88   1    2.5542 84.366 -20.630\n- X71   1    2.5828 84.395 -20.562\n- X7    1    2.8306 84.643 -19.976\n- X47   1    3.2681 85.080 -18.945\n- X48   1    3.4125 85.225 -18.605\n- X23   1    3.4490 85.261 -18.520\n- X1    1    3.5243 85.336 -18.343\n- X75   1    3.6953 85.507 -17.943\n- X46   1    3.7219 85.534 -17.881\n\nStep:  AIC=-26.63\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X39 + \n    X41 + X42 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + X51 + \n    X53 + X56 + X57 + X58 + X60 + X62 + X63 + X64 + X65 + X66 + \n    X67 + X68 + X71 + X72 + X73 + X74 + X75 + X76 + X77 + X80 + \n    X81 + X83 + X85 + X87 + X88 + X89 + X90 + X91 + X92 + X94 + \n    X95 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X60   1    0.0555 81.929 -28.492\n- X39   1    0.0666 81.941 -28.465\n- X91   1    0.0860 81.960 -28.417\n- X31   1    0.1015 81.975 -28.380\n- X67   1    0.1031 81.977 -28.376\n- X12   1    0.1043 81.978 -28.373\n- X57   1    0.1061 81.980 -28.368\n- X83   1    0.1170 81.991 -28.342\n- X51   1    0.1255 81.999 -28.321\n- X92   1    0.1463 82.020 -28.270\n- X9    1    0.1594 82.033 -28.238\n- X76   1    0.1727 82.047 -28.206\n- X50   1    0.1909 82.065 -28.162\n- X74   1    0.2020 82.076 -28.134\n- X14   1    0.2023 82.076 -28.134\n- X35   1    0.2120 82.086 -28.110\n- X36   1    0.2293 82.103 -28.068\n- X63   1    0.2336 82.108 -28.058\n- X98   1    0.2514 82.125 -28.014\n- X16   1    0.2671 82.141 -27.976\n- X15   1    0.2897 82.164 -27.921\n- X44   1    0.2931 82.167 -27.913\n- X41   1    0.3331 82.207 -27.815\n- X77   1    0.3335 82.207 -27.814\n- X97   1    0.3395 82.213 -27.800\n- X58   1    0.3500 82.224 -27.774\n- X5    1    0.3668 82.241 -27.733\n- X6    1    0.3710 82.245 -27.723\n- X26   1    0.3869 82.261 -27.684\n- X85   1    0.3937 82.268 -27.668\n- X95   1    0.4466 82.321 -27.539\n- X34   1    0.4511 82.325 -27.529\n- X27   1    0.4544 82.328 -27.520\n- X4    1    0.4781 82.352 -27.463\n- X25   1    0.4965 82.370 -27.418\n- X8    1    0.5296 82.403 -27.338\n- X33   1    0.5376 82.411 -27.319\n- X11   1    0.6088 82.483 -27.146\n- X56   1    0.6207 82.495 -27.117\n- X30   1    0.7621 82.636 -26.774\n- X62   1    0.7931 82.667 -26.699\n- X72   1    0.8163 82.690 -26.643\n<none>              81.874 -26.627\n- X24   1    0.8443 82.718 -26.575\n- X53   1    0.8482 82.722 -26.566\n- X45   1    0.8580 82.732 -26.542\n- X81   1    0.9037 82.778 -26.432\n- X42   1    0.9066 82.781 -26.425\n- X80   1    0.9540 82.828 -26.311\n- X29   1    0.9630 82.837 -26.289\n- X18   1    0.9666 82.841 -26.280\n- X73   1    0.9770 82.851 -26.255\n- X66   1    1.0170 82.891 -26.158\n- X37   1    1.0224 82.896 -26.145\n- X20   1    1.0320 82.906 -26.122\n- X100  1    1.0404 82.914 -26.102\n- X68   1    1.1814 83.055 -25.762\n- X3    1    1.1859 83.060 -25.751\n- X89   1    1.1886 83.063 -25.745\n- X90   1    1.5732 83.447 -24.821\n- X87   1    1.6171 83.491 -24.716\n- X64   1    1.6283 83.502 -24.689\n- X65   1    1.7687 83.643 -24.353\n- X49   1    1.8141 83.688 -24.244\n- X94   1    2.2204 84.094 -23.276\n- X13   1    2.4334 84.307 -22.770\n- X2    1    2.4742 84.348 -22.673\n- X88   1    2.5211 84.395 -22.562\n- X71   1    2.6328 84.507 -22.297\n- X7    1    2.7734 84.647 -21.965\n- X47   1    3.2172 85.091 -20.919\n- X48   1    3.3584 85.232 -20.587\n- X23   1    3.3871 85.261 -20.520\n- X1    1    3.5370 85.411 -20.169\n- X46   1    3.6747 85.549 -19.846\n- X75   1    3.7027 85.577 -19.781\n\nStep:  AIC=-28.49\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X39 + \n    X41 + X42 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + X51 + \n    X53 + X56 + X57 + X58 + X62 + X63 + X64 + X65 + X66 + X67 + \n    X68 + X71 + X72 + X73 + X74 + X75 + X76 + X77 + X80 + X81 + \n    X83 + X85 + X87 + X88 + X89 + X90 + X91 + X92 + X94 + X95 + \n    X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X39   1    0.0424 81.972 -30.388\n- X91   1    0.0834 82.013 -30.288\n- X57   1    0.0872 82.017 -30.279\n- X51   1    0.0999 82.029 -30.248\n- X12   1    0.1018 82.031 -30.244\n- X67   1    0.1048 82.034 -30.236\n- X83   1    0.1094 82.039 -30.225\n- X92   1    0.1274 82.057 -30.181\n- X31   1    0.1423 82.072 -30.145\n- X9    1    0.1628 82.092 -30.095\n- X74   1    0.1742 82.104 -30.067\n- X14   1    0.1835 82.113 -30.044\n- X76   1    0.1867 82.116 -30.037\n- X50   1    0.2104 82.140 -29.979\n- X36   1    0.2206 82.150 -29.954\n- X63   1    0.2244 82.154 -29.945\n- X35   1    0.2546 82.184 -29.871\n- X98   1    0.2659 82.195 -29.844\n- X15   1    0.2706 82.200 -29.832\n- X41   1    0.2944 82.224 -29.774\n- X97   1    0.3117 82.241 -29.733\n- X44   1    0.3135 82.243 -29.728\n- X16   1    0.3207 82.250 -29.710\n- X77   1    0.3249 82.254 -29.700\n- X6    1    0.3503 82.280 -29.639\n- X26   1    0.3585 82.288 -29.619\n- X85   1    0.3641 82.294 -29.605\n- X58   1    0.3871 82.317 -29.549\n- X5    1    0.4106 82.340 -29.492\n- X4    1    0.4446 82.374 -29.409\n- X95   1    0.4496 82.379 -29.397\n- X33   1    0.4965 82.426 -29.284\n- X34   1    0.4978 82.427 -29.280\n- X27   1    0.5020 82.431 -29.270\n- X25   1    0.5136 82.443 -29.242\n- X8    1    0.5722 82.502 -29.100\n- X56   1    0.6234 82.553 -28.976\n- X11   1    0.6283 82.558 -28.964\n- X62   1    0.7712 82.701 -28.618\n<none>              81.929 -28.492\n- X30   1    0.8456 82.775 -28.438\n- X72   1    0.8607 82.790 -28.402\n- X53   1    0.8766 82.806 -28.363\n- X45   1    0.8866 82.816 -28.339\n- X81   1    0.8877 82.817 -28.337\n- X24   1    0.9031 82.832 -28.299\n- X80   1    0.9323 82.862 -28.229\n- X73   1    0.9363 82.866 -28.219\n- X18   1    0.9377 82.867 -28.216\n- X42   1    0.9752 82.905 -28.125\n- X29   1    0.9867 82.916 -28.098\n- X20   1    1.0245 82.954 -28.006\n- X37   1    1.0254 82.955 -28.004\n- X66   1    1.0928 83.022 -27.842\n- X100  1    1.1329 83.062 -27.745\n- X89   1    1.1447 83.074 -27.717\n- X3    1    1.1582 83.088 -27.684\n- X68   1    1.2927 83.222 -27.361\n- X90   1    1.6153 83.545 -26.587\n- X64   1    1.6449 83.574 -26.516\n- X87   1    1.6458 83.575 -26.514\n- X49   1    1.7706 83.700 -26.216\n- X65   1    1.8965 83.826 -25.915\n- X94   1    2.1887 84.118 -25.219\n- X2    1    2.4193 84.349 -24.672\n- X88   1    2.5150 84.444 -24.445\n- X13   1    2.5551 84.485 -24.350\n- X71   1    2.5957 84.525 -24.254\n- X7    1    2.7981 84.728 -23.775\n- X47   1    3.1621 85.092 -22.918\n- X48   1    3.3038 85.233 -22.585\n- X23   1    3.3991 85.329 -22.362\n- X1    1    3.5531 85.482 -22.001\n- X46   1    3.6196 85.549 -21.845\n- X75   1    3.7406 85.670 -21.563\n\nStep:  AIC=-30.39\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X41 + \n    X42 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + X51 + X53 + \n    X56 + X57 + X58 + X62 + X63 + X64 + X65 + X66 + X67 + X68 + \n    X71 + X72 + X73 + X74 + X75 + X76 + X77 + X80 + X81 + X83 + \n    X85 + X87 + X88 + X89 + X90 + X91 + X92 + X94 + X95 + X97 + \n    X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X91   1    0.0841 82.056 -32.183\n- X57   1    0.0870 82.059 -32.176\n- X51   1    0.0920 82.064 -32.164\n- X12   1    0.1000 82.072 -32.144\n- X83   1    0.1195 82.091 -32.097\n- X67   1    0.1227 82.095 -32.089\n- X92   1    0.1286 82.100 -32.075\n- X74   1    0.1501 82.122 -32.022\n- X9    1    0.1554 82.127 -32.009\n- X31   1    0.1616 82.133 -31.995\n- X76   1    0.1945 82.166 -31.914\n- X14   1    0.1984 82.170 -31.905\n- X50   1    0.2078 82.180 -31.882\n- X63   1    0.2176 82.189 -31.858\n- X36   1    0.2202 82.192 -31.852\n- X35   1    0.2466 82.218 -31.787\n- X15   1    0.2495 82.221 -31.780\n- X98   1    0.2595 82.231 -31.756\n- X41   1    0.2998 82.272 -31.658\n- X44   1    0.3008 82.273 -31.656\n- X16   1    0.3121 82.284 -31.628\n- X77   1    0.3145 82.286 -31.622\n- X97   1    0.3328 82.305 -31.578\n- X85   1    0.3462 82.318 -31.545\n- X26   1    0.3507 82.323 -31.535\n- X6    1    0.3585 82.330 -31.516\n- X58   1    0.3783 82.350 -31.467\n- X4    1    0.4416 82.413 -31.314\n- X5    1    0.4516 82.423 -31.289\n- X95   1    0.4678 82.440 -31.250\n- X34   1    0.4791 82.451 -31.223\n- X33   1    0.4865 82.458 -31.205\n- X25   1    0.4976 82.469 -31.178\n- X27   1    0.5076 82.479 -31.154\n- X56   1    0.5986 82.570 -30.933\n- X8    1    0.6258 82.598 -30.867\n- X11   1    0.6325 82.604 -30.851\n- X62   1    0.7689 82.741 -30.521\n<none>              81.972 -30.388\n- X72   1    0.8431 82.815 -30.342\n- X30   1    0.8481 82.820 -30.330\n- X45   1    0.8543 82.826 -30.315\n- X24   1    0.8997 82.872 -30.205\n- X53   1    0.9057 82.878 -30.191\n- X81   1    0.9060 82.878 -30.190\n- X73   1    0.9086 82.880 -30.184\n- X18   1    0.9098 82.882 -30.181\n- X80   1    0.9251 82.897 -30.144\n- X29   1    0.9540 82.926 -30.074\n- X37   1    1.0249 82.997 -29.903\n- X42   1    1.0392 83.011 -29.869\n- X20   1    1.1471 83.119 -29.609\n- X66   1    1.1518 83.124 -29.598\n- X100  1    1.1669 83.139 -29.561\n- X89   1    1.1772 83.149 -29.537\n- X3    1    1.2093 83.181 -29.459\n- X68   1    1.2911 83.263 -29.263\n- X87   1    1.6285 83.600 -28.454\n- X90   1    1.6501 83.622 -28.402\n- X49   1    1.7559 83.728 -28.149\n- X64   1    1.7670 83.739 -28.123\n- X65   1    1.9096 83.881 -27.782\n- X94   1    2.1543 84.126 -27.200\n- X2    1    2.3945 84.366 -26.630\n- X88   1    2.5590 84.531 -26.240\n- X71   1    2.6299 84.602 -26.072\n- X13   1    2.6462 84.618 -26.034\n- X7    1    2.8105 84.782 -25.646\n- X47   1    3.1306 85.102 -24.892\n- X48   1    3.3006 85.272 -24.493\n- X23   1    3.3948 85.367 -24.272\n- X46   1    3.5833 85.555 -23.831\n- X1    1    3.5962 85.568 -23.801\n- X75   1    3.8681 85.840 -23.166\n\nStep:  AIC=-32.18\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X41 + \n    X42 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + X51 + X53 + \n    X56 + X57 + X58 + X62 + X63 + X64 + X65 + X66 + X67 + X68 + \n    X71 + X72 + X73 + X74 + X75 + X76 + X77 + X80 + X81 + X83 + \n    X85 + X87 + X88 + X89 + X90 + X92 + X94 + X95 + X97 + X98 + \n    X100\n\n       Df Sum of Sq    RSS     AIC\n- X57   1    0.0784 82.134 -33.992\n- X12   1    0.0906 82.147 -33.963\n- X51   1    0.0929 82.149 -33.957\n- X83   1    0.1120 82.168 -33.910\n- X92   1    0.1283 82.184 -33.871\n- X67   1    0.1374 82.193 -33.849\n- X74   1    0.1488 82.205 -33.821\n- X31   1    0.1672 82.223 -33.776\n- X9    1    0.1748 82.231 -33.758\n- X36   1    0.1985 82.254 -33.700\n- X76   1    0.2048 82.261 -33.685\n- X63   1    0.2139 82.270 -33.662\n- X50   1    0.2142 82.270 -33.662\n- X14   1    0.2317 82.288 -33.619\n- X15   1    0.2446 82.301 -33.588\n- X35   1    0.2699 82.326 -33.526\n- X16   1    0.3064 82.362 -33.438\n- X98   1    0.3101 82.366 -33.429\n- X77   1    0.3171 82.373 -33.412\n- X41   1    0.3229 82.379 -33.398\n- X44   1    0.3309 82.387 -33.378\n- X58   1    0.3380 82.394 -33.361\n- X97   1    0.3589 82.415 -33.310\n- X6    1    0.3590 82.415 -33.310\n- X85   1    0.3879 82.444 -33.240\n- X26   1    0.4040 82.460 -33.201\n- X95   1    0.4322 82.488 -33.133\n- X34   1    0.4424 82.498 -33.108\n- X4    1    0.4460 82.502 -33.099\n- X25   1    0.4490 82.505 -33.092\n- X27   1    0.4654 82.521 -33.052\n- X33   1    0.4906 82.547 -32.991\n- X5    1    0.5336 82.590 -32.887\n- X56   1    0.5990 82.655 -32.729\n- X8    1    0.6005 82.656 -32.725\n- X11   1    0.6121 82.668 -32.697\n- X62   1    0.7749 82.831 -32.303\n- X45   1    0.7965 82.852 -32.251\n- X30   1    0.8222 82.878 -32.189\n<none>              82.056 -32.183\n- X72   1    0.8397 82.896 -32.147\n- X53   1    0.8882 82.944 -32.030\n- X24   1    0.9001 82.956 -32.001\n- X18   1    0.9206 82.977 -31.952\n- X73   1    0.9280 82.984 -31.934\n- X81   1    0.9501 83.006 -31.881\n- X29   1    0.9801 83.036 -31.808\n- X80   1    0.9863 83.042 -31.793\n- X42   1    0.9924 83.048 -31.779\n- X37   1    1.0854 83.141 -31.555\n- X100  1    1.1046 83.161 -31.509\n- X3    1    1.1403 83.196 -31.423\n- X20   1    1.1679 83.224 -31.357\n- X66   1    1.1744 83.230 -31.341\n- X68   1    1.2557 83.312 -31.146\n- X89   1    1.3401 83.396 -30.943\n- X90   1    1.6368 83.693 -30.233\n- X87   1    1.7025 83.759 -30.076\n- X49   1    1.7871 83.843 -29.874\n- X64   1    1.8329 83.889 -29.765\n- X65   1    1.9766 84.033 -29.423\n- X94   1    2.2606 84.317 -28.748\n- X2    1    2.4200 84.476 -28.370\n- X88   1    2.6409 84.697 -27.848\n- X71   1    2.6608 84.717 -27.801\n- X7    1    2.7958 84.852 -27.482\n- X13   1    2.8555 84.911 -27.342\n- X47   1    3.1892 85.245 -26.557\n- X48   1    3.3114 85.367 -26.271\n- X23   1    3.4819 85.538 -25.872\n- X46   1    3.6469 85.703 -25.486\n- X1    1    3.6931 85.749 -25.379\n- X75   1    3.9717 86.028 -24.730\n\nStep:  AIC=-33.99\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X41 + \n    X42 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + X51 + X53 + \n    X56 + X58 + X62 + X63 + X64 + X65 + X66 + X67 + X68 + X71 + \n    X72 + X73 + X74 + X75 + X76 + X77 + X80 + X81 + X83 + X85 + \n    X87 + X88 + X89 + X90 + X92 + X94 + X95 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X51   1    0.0706 82.205 -35.820\n- X12   1    0.0905 82.225 -35.772\n- X92   1    0.0986 82.233 -35.752\n- X83   1    0.1124 82.247 -35.719\n- X74   1    0.1363 82.271 -35.661\n- X67   1    0.1446 82.279 -35.640\n- X9    1    0.1630 82.297 -35.596\n- X36   1    0.1849 82.319 -35.542\n- X31   1    0.1861 82.320 -35.540\n- X14   1    0.2126 82.347 -35.475\n- X63   1    0.2245 82.359 -35.446\n- X50   1    0.2361 82.370 -35.418\n- X76   1    0.2523 82.387 -35.379\n- X15   1    0.2577 82.392 -35.366\n- X41   1    0.2900 82.424 -35.287\n- X16   1    0.2979 82.432 -35.268\n- X35   1    0.3013 82.436 -35.260\n- X98   1    0.3131 82.447 -35.231\n- X6    1    0.3265 82.461 -35.199\n- X77   1    0.3449 82.479 -35.154\n- X44   1    0.3594 82.494 -35.119\n- X97   1    0.3706 82.505 -35.092\n- X85   1    0.3793 82.514 -35.071\n- X58   1    0.3805 82.515 -35.068\n- X4    1    0.3988 82.533 -35.024\n- X26   1    0.4180 82.552 -34.977\n- X25   1    0.4393 82.574 -34.925\n- X27   1    0.4484 82.583 -34.903\n- X95   1    0.4550 82.589 -34.887\n- X34   1    0.4561 82.590 -34.885\n- X33   1    0.4597 82.594 -34.876\n- X11   1    0.5622 82.697 -34.628\n- X5    1    0.5820 82.716 -34.580\n- X8    1    0.6013 82.736 -34.533\n- X56   1    0.6747 82.809 -34.356\n- X62   1    0.7524 82.887 -34.168\n- X45   1    0.8214 82.956 -34.002\n<none>              82.134 -33.992\n- X30   1    0.8367 82.971 -33.965\n- X72   1    0.8497 82.984 -33.934\n- X73   1    0.8921 83.026 -33.832\n- X18   1    0.9395 83.074 -33.718\n- X24   1    0.9430 83.077 -33.709\n- X42   1    0.9726 83.107 -33.638\n- X53   1    0.9769 83.111 -33.628\n- X29   1    0.9910 83.125 -33.594\n- X81   1    1.0109 83.145 -33.546\n- X3    1    1.0911 83.225 -33.353\n- X100  1    1.1078 83.242 -33.313\n- X80   1    1.1209 83.255 -33.281\n- X66   1    1.1221 83.256 -33.278\n- X20   1    1.1508 83.285 -33.209\n- X37   1    1.1540 83.288 -33.202\n- X89   1    1.3175 83.452 -32.810\n- X68   1    1.3589 83.493 -32.710\n- X90   1    1.5923 83.727 -32.152\n- X87   1    1.7540 83.888 -31.766\n- X49   1    1.8408 83.975 -31.559\n- X64   1    1.8424 83.977 -31.555\n- X65   1    1.9134 84.048 -31.387\n- X94   1    2.2709 84.405 -30.537\n- X2    1    2.4300 84.564 -30.161\n- X71   1    2.6104 84.745 -29.735\n- X88   1    2.6596 84.794 -29.619\n- X7    1    2.7837 84.918 -29.326\n- X13   1    2.8523 84.987 -29.165\n- X48   1    3.2491 85.383 -28.233\n- X47   1    3.2980 85.432 -28.119\n- X23   1    3.4174 85.552 -27.839\n- X1    1    3.6193 85.754 -27.368\n- X46   1    3.8215 85.956 -26.897\n- X75   1    4.1360 86.270 -26.166\n\nStep:  AIC=-35.82\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X12 + \n    X13 + X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + \n    X27 + X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X41 + \n    X42 + X44 + X45 + X46 + X47 + X48 + X49 + X50 + X53 + X56 + \n    X58 + X62 + X63 + X64 + X65 + X66 + X67 + X68 + X71 + X72 + \n    X73 + X74 + X75 + X76 + X77 + X80 + X81 + X83 + X85 + X87 + \n    X88 + X89 + X90 + X92 + X94 + X95 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X12   1    0.0820 82.287 -37.621\n- X83   1    0.0978 82.303 -37.582\n- X92   1    0.1053 82.310 -37.564\n- X74   1    0.1194 82.324 -37.530\n- X67   1    0.1356 82.341 -37.491\n- X9    1    0.1568 82.362 -37.439\n- X36   1    0.1850 82.390 -37.371\n- X31   1    0.2195 82.424 -37.287\n- X14   1    0.2274 82.432 -37.268\n- X63   1    0.2329 82.438 -37.254\n- X15   1    0.2645 82.470 -37.178\n- X76   1    0.2754 82.480 -37.151\n- X16   1    0.2881 82.493 -37.121\n- X41   1    0.2986 82.504 -37.095\n- X50   1    0.3031 82.508 -37.084\n- X35   1    0.3085 82.513 -37.071\n- X44   1    0.3141 82.519 -37.058\n- X77   1    0.3252 82.530 -37.031\n- X6    1    0.3292 82.534 -37.021\n- X98   1    0.3413 82.546 -36.992\n- X97   1    0.3571 82.562 -36.953\n- X4    1    0.3590 82.564 -36.949\n- X85   1    0.3982 82.603 -36.854\n- X25   1    0.4005 82.605 -36.848\n- X58   1    0.4144 82.619 -36.815\n- X26   1    0.4225 82.627 -36.795\n- X33   1    0.4541 82.659 -36.719\n- X95   1    0.4555 82.660 -36.715\n- X27   1    0.5069 82.712 -36.591\n- X5    1    0.5323 82.737 -36.529\n- X11   1    0.5326 82.738 -36.529\n- X34   1    0.5381 82.743 -36.515\n- X8    1    0.6471 82.852 -36.252\n- X56   1    0.6734 82.878 -36.189\n- X62   1    0.7213 82.926 -36.073\n- X45   1    0.7853 82.990 -35.919\n- X30   1    0.8001 83.005 -35.883\n- X72   1    0.8239 83.029 -35.826\n<none>              82.205 -35.820\n- X73   1    0.8614 83.066 -35.735\n- X18   1    0.9248 83.130 -35.583\n- X29   1    0.9716 83.177 -35.470\n- X53   1    0.9745 83.179 -35.463\n- X24   1    0.9940 83.199 -35.417\n- X81   1    1.0023 83.207 -35.397\n- X42   1    1.0337 83.239 -35.321\n- X3    1    1.0580 83.263 -35.263\n- X66   1    1.0856 83.291 -35.196\n- X100  1    1.0896 83.295 -35.187\n- X80   1    1.1259 83.331 -35.100\n- X37   1    1.1896 83.395 -34.947\n- X20   1    1.1962 83.401 -34.931\n- X89   1    1.3342 83.539 -34.600\n- X68   1    1.3980 83.603 -34.448\n- X90   1    1.6709 83.876 -33.796\n- X87   1    1.7262 83.931 -33.664\n- X64   1    1.8221 84.027 -33.436\n- X49   1    1.9425 84.147 -33.149\n- X65   1    2.0901 84.295 -32.799\n- X94   1    2.2546 84.460 -32.409\n- X2    1    2.3841 84.589 -32.102\n- X71   1    2.6115 84.816 -31.566\n- X88   1    2.6610 84.866 -31.449\n- X7    1    2.7427 84.948 -31.256\n- X13   1    2.9855 85.190 -30.686\n- X47   1    3.2518 85.457 -30.061\n- X48   1    3.2999 85.505 -29.949\n- X23   1    3.4690 85.674 -29.554\n- X1    1    3.5651 85.770 -29.329\n- X46   1    3.7798 85.985 -28.829\n- X75   1    4.3245 86.530 -27.566\n\nStep:  AIC=-37.62\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + \n    X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X41 + X42 + \n    X44 + X45 + X46 + X47 + X48 + X49 + X50 + X53 + X56 + X58 + \n    X62 + X63 + X64 + X65 + X66 + X67 + X68 + X71 + X72 + X73 + \n    X74 + X75 + X76 + X77 + X80 + X81 + X83 + X85 + X87 + X88 + \n    X89 + X90 + X92 + X94 + X95 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X83   1    0.0923 82.379 -39.397\n- X74   1    0.1092 82.396 -39.356\n- X92   1    0.1130 82.400 -39.347\n- X67   1    0.1628 82.450 -39.226\n- X36   1    0.1726 82.460 -39.202\n- X14   1    0.1859 82.473 -39.170\n- X9    1    0.1875 82.474 -39.166\n- X63   1    0.2514 82.538 -39.011\n- X31   1    0.2549 82.542 -39.002\n- X44   1    0.2683 82.555 -38.970\n- X41   1    0.2822 82.569 -38.936\n- X35   1    0.2826 82.570 -38.935\n- X76   1    0.2923 82.579 -38.912\n- X16   1    0.3016 82.589 -38.889\n- X15   1    0.3158 82.603 -38.855\n- X6    1    0.3422 82.629 -38.791\n- X50   1    0.3652 82.652 -38.735\n- X77   1    0.3668 82.654 -38.731\n- X97   1    0.3770 82.664 -38.707\n- X85   1    0.3977 82.685 -38.657\n- X25   1    0.4026 82.690 -38.645\n- X4    1    0.4200 82.707 -38.603\n- X58   1    0.4244 82.711 -38.592\n- X95   1    0.4261 82.713 -38.588\n- X98   1    0.4316 82.719 -38.575\n- X33   1    0.4368 82.724 -38.562\n- X26   1    0.4563 82.743 -38.515\n- X27   1    0.4941 82.781 -38.424\n- X11   1    0.5156 82.803 -38.372\n- X5    1    0.5349 82.822 -38.325\n- X34   1    0.5540 82.841 -38.279\n- X8    1    0.6635 82.950 -38.015\n- X56   1    0.6981 82.985 -37.931\n- X62   1    0.7063 82.993 -37.912\n- X45   1    0.7733 83.060 -37.750\n- X30   1    0.7892 83.076 -37.712\n- X73   1    0.7996 83.087 -37.687\n- X72   1    0.8265 83.113 -37.622\n<none>              82.287 -37.621\n- X18   1    0.9054 83.192 -37.432\n- X53   1    0.9655 83.252 -37.288\n- X24   1    0.9716 83.259 -37.273\n- X29   1    0.9879 83.275 -37.234\n- X42   1    1.0113 83.298 -37.178\n- X81   1    1.0312 83.318 -37.130\n- X100  1    1.0887 83.376 -36.992\n- X3    1    1.0901 83.377 -36.989\n- X66   1    1.1017 83.389 -36.961\n- X80   1    1.1385 83.425 -36.873\n- X37   1    1.1996 83.487 -36.726\n- X20   1    1.2351 83.522 -36.641\n- X89   1    1.3667 83.654 -36.326\n- X68   1    1.4186 83.706 -36.202\n- X90   1    1.6312 83.918 -35.695\n- X87   1    1.7185 84.005 -35.487\n- X64   1    1.7761 84.063 -35.350\n- X49   1    1.8822 84.169 -35.098\n- X65   1    2.0430 84.330 -34.716\n- X94   1    2.3313 84.618 -34.033\n- X2    1    2.4335 84.720 -33.792\n- X71   1    2.6504 84.937 -33.281\n- X7    1    2.7225 85.009 -33.111\n- X88   1    2.7396 85.027 -33.071\n- X13   1    3.1016 85.389 -32.221\n- X48   1    3.2183 85.505 -31.948\n- X47   1    3.3297 85.617 -31.688\n- X23   1    3.4266 85.714 -31.461\n- X1    1    3.5922 85.879 -31.075\n- X46   1    3.8162 86.103 -30.554\n- X75   1    4.4947 86.782 -28.984\n\nStep:  AIC=-39.4\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + \n    X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X41 + X42 + \n    X44 + X45 + X46 + X47 + X48 + X49 + X50 + X53 + X56 + X58 + \n    X62 + X63 + X64 + X65 + X66 + X67 + X68 + X71 + X72 + X73 + \n    X74 + X75 + X76 + X77 + X80 + X81 + X85 + X87 + X88 + X89 + \n    X90 + X92 + X94 + X95 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X74   1    0.1056 82.485 -41.140\n- X92   1    0.1070 82.486 -41.137\n- X67   1    0.1710 82.550 -40.982\n- X36   1    0.1813 82.561 -40.957\n- X14   1    0.2162 82.595 -40.872\n- X9    1    0.2204 82.600 -40.862\n- X44   1    0.2276 82.607 -40.845\n- X31   1    0.2379 82.617 -40.820\n- X41   1    0.2515 82.631 -40.787\n- X63   1    0.2606 82.640 -40.765\n- X76   1    0.2797 82.659 -40.719\n- X15   1    0.3157 82.695 -40.632\n- X16   1    0.3202 82.700 -40.621\n- X35   1    0.3334 82.713 -40.589\n- X6    1    0.3382 82.717 -40.577\n- X50   1    0.3482 82.727 -40.553\n- X25   1    0.3819 82.761 -40.472\n- X97   1    0.3853 82.765 -40.463\n- X85   1    0.3853 82.765 -40.463\n- X77   1    0.4156 82.795 -40.390\n- X4    1    0.4182 82.797 -40.384\n- X58   1    0.4204 82.800 -40.379\n- X98   1    0.4216 82.801 -40.376\n- X95   1    0.4224 82.802 -40.374\n- X33   1    0.4449 82.824 -40.319\n- X11   1    0.4658 82.845 -40.269\n- X26   1    0.5018 82.881 -40.182\n- X27   1    0.5281 82.907 -40.119\n- X5    1    0.5315 82.911 -40.111\n- X34   1    0.5776 82.957 -39.999\n- X8    1    0.6448 83.024 -39.837\n- X56   1    0.6611 83.040 -39.798\n- X62   1    0.6790 83.058 -39.755\n- X30   1    0.7290 83.108 -39.635\n- X45   1    0.8006 83.180 -39.462\n- X72   1    0.8041 83.183 -39.454\n<none>              82.379 -39.397\n- X73   1    0.8522 83.231 -39.338\n- X18   1    0.8833 83.263 -39.264\n- X53   1    0.8972 83.277 -39.230\n- X81   1    0.9667 83.346 -39.063\n- X42   1    0.9731 83.352 -39.048\n- X24   1    0.9876 83.367 -39.013\n- X3    1    1.0297 83.409 -38.912\n- X29   1    1.0332 83.412 -38.904\n- X100  1    1.0613 83.441 -38.836\n- X66   1    1.1175 83.497 -38.702\n- X80   1    1.1692 83.548 -38.578\n- X20   1    1.2358 83.615 -38.419\n- X37   1    1.2474 83.627 -38.391\n- X68   1    1.3977 83.777 -38.032\n- X89   1    1.4304 83.810 -37.954\n- X90   1    1.6020 83.981 -37.545\n- X87   1    1.7055 84.085 -37.298\n- X64   1    1.7297 84.109 -37.241\n- X49   1    1.8247 84.204 -37.015\n- X65   1    1.9987 84.378 -36.602\n- X94   1    2.3143 84.694 -35.856\n- X2    1    2.3756 84.755 -35.711\n- X88   1    2.6590 85.038 -35.043\n- X71   1    2.7220 85.101 -34.895\n- X7    1    2.7448 85.124 -34.842\n- X13   1    3.0490 85.428 -34.128\n- X48   1    3.2205 85.600 -33.727\n- X47   1    3.2972 85.676 -33.548\n- X23   1    3.4657 85.845 -33.155\n- X1    1    3.5728 85.952 -32.905\n- X46   1    3.8174 86.197 -32.337\n- X75   1    4.4686 86.848 -30.832\n\nStep:  AIC=-41.14\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + \n    X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X41 + X42 + \n    X44 + X45 + X46 + X47 + X48 + X49 + X50 + X53 + X56 + X58 + \n    X62 + X63 + X64 + X65 + X66 + X67 + X68 + X71 + X72 + X73 + \n    X75 + X76 + X77 + X80 + X81 + X85 + X87 + X88 + X89 + X90 + \n    X92 + X94 + X95 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X92   1    0.1043 82.589 -42.888\n- X36   1    0.1672 82.652 -42.735\n- X67   1    0.1811 82.666 -42.702\n- X9    1    0.1892 82.674 -42.682\n- X44   1    0.2280 82.713 -42.588\n- X63   1    0.2438 82.729 -42.550\n- X76   1    0.2560 82.741 -42.521\n- X41   1    0.2561 82.741 -42.521\n- X31   1    0.2660 82.751 -42.496\n- X16   1    0.2788 82.764 -42.466\n- X14   1    0.2800 82.765 -42.463\n- X50   1    0.3007 82.786 -42.413\n- X15   1    0.3431 82.828 -42.310\n- X6    1    0.3436 82.828 -42.309\n- X97   1    0.3477 82.833 -42.299\n- X35   1    0.3498 82.835 -42.294\n- X25   1    0.3724 82.857 -42.239\n- X85   1    0.4018 82.887 -42.168\n- X33   1    0.4063 82.891 -42.158\n- X4    1    0.4068 82.892 -42.156\n- X95   1    0.4156 82.900 -42.135\n- X58   1    0.4228 82.908 -42.118\n- X77   1    0.4445 82.929 -42.066\n- X98   1    0.4482 82.933 -42.057\n- X11   1    0.4759 82.961 -41.990\n- X5    1    0.4857 82.971 -41.966\n- X34   1    0.5210 83.006 -41.881\n- X26   1    0.5358 83.021 -41.846\n- X27   1    0.5556 83.041 -41.798\n- X8    1    0.6242 83.109 -41.633\n- X62   1    0.6311 83.116 -41.616\n- X56   1    0.6423 83.127 -41.589\n- X30   1    0.7231 83.208 -41.395\n- X45   1    0.7793 83.264 -41.260\n- X73   1    0.8061 83.291 -41.195\n- X72   1    0.8084 83.293 -41.190\n<none>              82.485 -41.140\n- X53   1    0.8739 83.359 -41.033\n- X81   1    0.9497 83.435 -40.851\n- X18   1    0.9677 83.453 -40.808\n- X29   1    0.9767 83.462 -40.786\n- X42   1    1.0012 83.486 -40.728\n- X100  1    1.0094 83.494 -40.708\n- X24   1    1.0306 83.515 -40.657\n- X66   1    1.0756 83.560 -40.549\n- X80   1    1.0900 83.575 -40.515\n- X3    1    1.1426 83.627 -40.389\n- X20   1    1.2932 83.778 -40.029\n- X68   1    1.3158 83.801 -39.975\n- X37   1    1.3826 83.867 -39.816\n- X89   1    1.5606 84.045 -39.392\n- X87   1    1.6268 84.112 -39.234\n- X90   1    1.6786 84.163 -39.111\n- X64   1    1.8301 84.315 -38.752\n- X49   1    1.8370 84.322 -38.735\n- X65   1    2.0139 84.499 -38.316\n- X94   1    2.3752 84.860 -37.463\n- X2    1    2.4251 84.910 -37.345\n- X71   1    2.7178 85.203 -36.657\n- X7    1    2.7407 85.226 -36.603\n- X88   1    2.7900 85.275 -36.487\n- X48   1    3.1788 85.664 -35.578\n- X13   1    3.2687 85.754 -35.368\n- X23   1    3.3609 85.846 -35.153\n- X47   1    3.3815 85.866 -35.105\n- X1    1    3.5423 86.027 -34.731\n- X46   1    3.8548 86.340 -34.006\n- X75   1    4.7224 87.207 -32.006\n\nStep:  AIC=-42.89\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + \n    X29 + X30 + X31 + X33 + X34 + X35 + X36 + X37 + X41 + X42 + \n    X44 + X45 + X46 + X47 + X48 + X49 + X50 + X53 + X56 + X58 + \n    X62 + X63 + X64 + X65 + X66 + X67 + X68 + X71 + X72 + X73 + \n    X75 + X76 + X77 + X80 + X81 + X85 + X87 + X88 + X89 + X90 + \n    X94 + X95 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X36   1    0.1273 82.716 -44.580\n- X67   1    0.2143 82.803 -44.370\n- X9    1    0.2151 82.804 -44.368\n- X44   1    0.2350 82.824 -44.320\n- X16   1    0.2674 82.857 -44.241\n- X41   1    0.2691 82.858 -44.237\n- X63   1    0.2762 82.865 -44.220\n- X15   1    0.2816 82.871 -44.207\n- X76   1    0.2855 82.875 -44.198\n- X31   1    0.3098 82.899 -44.139\n- X14   1    0.3224 82.911 -44.109\n- X25   1    0.3640 82.953 -44.008\n- X35   1    0.3682 82.957 -43.998\n- X97   1    0.3750 82.964 -43.982\n- X50   1    0.3810 82.970 -43.967\n- X58   1    0.3839 82.973 -43.960\n- X95   1    0.3884 82.977 -43.950\n- X4    1    0.3923 82.981 -43.940\n- X6    1    0.4068 82.996 -43.905\n- X85   1    0.4262 83.015 -43.858\n- X33   1    0.4274 83.017 -43.855\n- X77   1    0.4364 83.026 -43.834\n- X11   1    0.4644 83.054 -43.766\n- X26   1    0.4815 83.071 -43.725\n- X98   1    0.4936 83.083 -43.696\n- X5    1    0.5078 83.097 -43.662\n- X34   1    0.5081 83.097 -43.661\n- X27   1    0.5308 83.120 -43.606\n- X62   1    0.6086 83.198 -43.419\n- X8    1    0.6537 83.243 -43.311\n- X56   1    0.6959 83.285 -43.210\n- X30   1    0.7381 83.327 -43.108\n- X72   1    0.7801 83.369 -43.008\n- X45   1    0.8160 83.405 -42.921\n<none>              82.589 -42.888\n- X81   1    0.8686 83.458 -42.795\n- X73   1    0.8953 83.484 -42.731\n- X18   1    0.9149 83.504 -42.685\n- X53   1    0.9812 83.570 -42.526\n- X100  1    1.0118 83.601 -42.453\n- X42   1    1.0152 83.604 -42.444\n- X24   1    1.0261 83.615 -42.418\n- X80   1    1.0920 83.681 -42.261\n- X66   1    1.1149 83.704 -42.206\n- X3    1    1.1252 83.714 -42.181\n- X29   1    1.2282 83.817 -41.935\n- X20   1    1.3234 83.913 -41.708\n- X68   1    1.3358 83.925 -41.679\n- X37   1    1.3851 83.974 -41.562\n- X90   1    1.6686 84.258 -40.888\n- X87   1    1.6895 84.279 -40.838\n- X89   1    1.7169 84.306 -40.773\n- X64   1    1.8424 84.432 -40.475\n- X49   1    1.8978 84.487 -40.344\n- X65   1    2.0743 84.663 -39.927\n- X94   1    2.4946 85.084 -38.936\n- X2    1    2.6338 85.223 -38.609\n- X71   1    2.6938 85.283 -38.469\n- X7    1    2.7045 85.294 -38.444\n- X88   1    2.7119 85.301 -38.426\n- X48   1    3.2592 85.848 -37.147\n- X13   1    3.3570 85.946 -36.919\n- X23   1    3.4454 86.035 -36.714\n- X1    1    3.5266 86.116 -36.525\n- X47   1    3.6671 86.256 -36.199\n- X46   1    3.7714 86.361 -35.957\n- X75   1    4.9829 87.572 -33.171\n\nStep:  AIC=-44.58\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + \n    X29 + X30 + X31 + X33 + X34 + X35 + X37 + X41 + X42 + X44 + \n    X45 + X46 + X47 + X48 + X49 + X50 + X53 + X56 + X58 + X62 + \n    X63 + X64 + X65 + X66 + X67 + X68 + X71 + X72 + X73 + X75 + \n    X76 + X77 + X80 + X81 + X85 + X87 + X88 + X89 + X90 + X94 + \n    X95 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X44   1    0.2025 82.919 -46.091\n- X16   1    0.2089 82.925 -46.075\n- X9    1    0.2229 82.939 -46.042\n- X41   1    0.2473 82.964 -45.983\n- X67   1    0.2534 82.970 -45.968\n- X63   1    0.2778 82.994 -45.909\n- X15   1    0.3059 83.022 -45.842\n- X14   1    0.3364 83.053 -45.768\n- X95   1    0.3477 83.064 -45.741\n- X31   1    0.3527 83.069 -45.729\n- X97   1    0.3532 83.070 -45.728\n- X4    1    0.3706 83.087 -45.686\n- X50   1    0.3776 83.094 -45.669\n- X35   1    0.3801 83.096 -45.663\n- X76   1    0.3946 83.111 -45.628\n- X85   1    0.4064 83.123 -45.600\n- X77   1    0.4118 83.128 -45.587\n- X25   1    0.4128 83.129 -45.584\n- X58   1    0.4191 83.136 -45.569\n- X6    1    0.4276 83.144 -45.549\n- X5    1    0.4394 83.156 -45.520\n- X11   1    0.4424 83.159 -45.513\n- X33   1    0.4891 83.206 -45.401\n- X26   1    0.5035 83.220 -45.366\n- X34   1    0.5035 83.220 -45.366\n- X27   1    0.5359 83.252 -45.288\n- X98   1    0.5567 83.273 -45.238\n- X62   1    0.6145 83.331 -45.099\n- X30   1    0.7220 83.438 -44.842\n- X8    1    0.7323 83.449 -44.817\n- X72   1    0.7757 83.492 -44.713\n- X56   1    0.7832 83.500 -44.695\n- X45   1    0.8140 83.530 -44.621\n<none>              82.716 -44.580\n- X81   1    0.8362 83.553 -44.568\n- X73   1    0.9419 83.658 -44.315\n- X18   1    0.9759 83.692 -44.234\n- X42   1    0.9902 83.707 -44.200\n- X80   1    0.9937 83.710 -44.191\n- X24   1    0.9939 83.710 -44.191\n- X53   1    1.0069 83.723 -44.160\n- X100  1    1.0544 83.771 -44.047\n- X66   1    1.0785 83.795 -43.989\n- X29   1    1.2670 83.983 -43.540\n- X3    1    1.2754 83.992 -43.520\n- X68   1    1.3282 84.045 -43.394\n- X20   1    1.3383 84.055 -43.370\n- X37   1    1.4822 84.199 -43.028\n- X89   1    1.6552 84.372 -42.617\n- X87   1    1.7425 84.459 -42.410\n- X90   1    1.7802 84.497 -42.321\n- X49   1    1.8518 84.568 -42.152\n- X64   1    1.9899 84.706 -41.825\n- X65   1    2.0942 84.811 -41.579\n- X94   1    2.4491 85.166 -40.744\n- X71   1    2.6421 85.359 -40.291\n- X88   1    2.7116 85.428 -40.129\n- X7    1    2.7423 85.459 -40.057\n- X2    1    2.8504 85.567 -39.804\n- X48   1    3.3431 86.059 -38.656\n- X23   1    3.4433 86.160 -38.423\n- X1    1    3.4800 86.196 -38.338\n- X47   1    3.5906 86.307 -38.081\n- X13   1    3.5987 86.315 -38.063\n- X46   1    3.7481 86.465 -37.717\n- X75   1    5.1622 87.879 -34.472\n\nStep:  AIC=-46.09\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X15 + X16 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + \n    X29 + X30 + X31 + X33 + X34 + X35 + X37 + X41 + X42 + X45 + \n    X46 + X47 + X48 + X49 + X50 + X53 + X56 + X58 + X62 + X63 + \n    X64 + X65 + X66 + X67 + X68 + X71 + X72 + X73 + X75 + X76 + \n    X77 + X80 + X81 + X85 + X87 + X88 + X89 + X90 + X94 + X95 + \n    X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X16   1    0.1683 83.087 -47.685\n- X41   1    0.2329 83.152 -47.530\n- X67   1    0.2419 83.161 -47.508\n- X9    1    0.2438 83.163 -47.504\n- X15   1    0.2892 83.208 -47.394\n- X63   1    0.2905 83.209 -47.391\n- X95   1    0.3093 83.228 -47.346\n- X97   1    0.3160 83.235 -47.330\n- X31   1    0.3243 83.243 -47.310\n- X11   1    0.3520 83.271 -47.244\n- X76   1    0.3565 83.275 -47.233\n- X58   1    0.3581 83.277 -47.229\n- X14   1    0.3793 83.298 -47.178\n- X85   1    0.3799 83.299 -47.177\n- X77   1    0.3969 83.316 -47.136\n- X25   1    0.4043 83.323 -47.118\n- X50   1    0.4182 83.337 -47.085\n- X35   1    0.4320 83.351 -47.052\n- X4    1    0.4586 83.378 -46.988\n- X33   1    0.4752 83.394 -46.948\n- X5    1    0.4903 83.409 -46.912\n- X27   1    0.5114 83.430 -46.861\n- X6    1    0.5152 83.434 -46.852\n- X62   1    0.5313 83.450 -46.813\n- X34   1    0.5373 83.456 -46.799\n- X26   1    0.5551 83.474 -46.756\n- X98   1    0.5886 83.507 -46.676\n- X30   1    0.6928 83.612 -46.427\n- X56   1    0.7197 83.639 -46.362\n- X45   1    0.7329 83.652 -46.331\n- X72   1    0.7548 83.674 -46.278\n- X8    1    0.7836 83.703 -46.210\n- X81   1    0.8108 83.730 -46.145\n<none>              82.919 -46.091\n- X24   1    0.9040 83.823 -45.922\n- X80   1    0.9343 83.853 -45.850\n- X73   1    0.9459 83.865 -45.822\n- X100  1    0.9668 83.886 -45.772\n- X18   1    1.0243 83.943 -45.635\n- X42   1    1.1193 84.038 -45.409\n- X53   1    1.1306 84.050 -45.382\n- X66   1    1.1783 84.097 -45.269\n- X29   1    1.2010 84.120 -45.215\n- X20   1    1.2773 84.196 -45.033\n- X3    1    1.2867 84.206 -45.011\n- X68   1    1.4352 84.354 -44.659\n- X37   1    1.4742 84.393 -44.566\n- X87   1    1.6291 84.548 -44.200\n- X89   1    1.7171 84.636 -43.991\n- X49   1    1.7306 84.650 -43.960\n- X90   1    1.8320 84.751 -43.720\n- X64   1    1.9479 84.867 -43.447\n- X65   1    2.1848 85.104 -42.889\n- X94   1    2.3106 85.230 -42.594\n- X2    1    2.7228 85.642 -41.629\n- X88   1    2.7479 85.667 -41.570\n- X71   1    2.7511 85.670 -41.563\n- X7    1    2.8982 85.817 -41.220\n- X48   1    3.3867 86.306 -40.085\n- X1    1    3.5532 86.472 -39.699\n- X23   1    3.5629 86.482 -39.677\n- X13   1    3.6161 86.535 -39.554\n- X46   1    3.6907 86.610 -39.381\n- X47   1    3.7531 86.672 -39.237\n- X75   1    5.2616 88.180 -35.786\n\nStep:  AIC=-47.69\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X15 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + X29 + \n    X30 + X31 + X33 + X34 + X35 + X37 + X41 + X42 + X45 + X46 + \n    X47 + X48 + X49 + X50 + X53 + X56 + X58 + X62 + X63 + X64 + \n    X65 + X66 + X67 + X68 + X71 + X72 + X73 + X75 + X76 + X77 + \n    X80 + X81 + X85 + X87 + X88 + X89 + X90 + X94 + X95 + X97 + \n    X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X95   1    0.2521 83.339 -49.079\n- X67   1    0.2569 83.344 -49.068\n- X41   1    0.2723 83.359 -49.031\n- X9    1    0.2877 83.375 -48.994\n- X97   1    0.2915 83.379 -48.985\n- X11   1    0.3048 83.392 -48.953\n- X63   1    0.3135 83.401 -48.932\n- X15   1    0.3194 83.407 -48.918\n- X85   1    0.3397 83.427 -48.869\n- X76   1    0.3779 83.465 -48.778\n- X50   1    0.3964 83.484 -48.733\n- X77   1    0.3991 83.486 -48.727\n- X31   1    0.4056 83.493 -48.711\n- X25   1    0.4067 83.494 -48.709\n- X14   1    0.4070 83.494 -48.708\n- X58   1    0.4119 83.499 -48.696\n- X35   1    0.4416 83.529 -48.625\n- X5    1    0.4525 83.540 -48.599\n- X27   1    0.4645 83.552 -48.570\n- X33   1    0.4982 83.585 -48.490\n- X62   1    0.5382 83.625 -48.394\n- X4    1    0.5474 83.635 -48.372\n- X34   1    0.5739 83.661 -48.309\n- X98   1    0.5877 83.675 -48.276\n- X6    1    0.5970 83.684 -48.253\n- X30   1    0.6337 83.721 -48.166\n- X72   1    0.6389 83.726 -48.153\n- X56   1    0.6400 83.727 -48.151\n- X26   1    0.6492 83.736 -48.129\n- X45   1    0.7339 83.821 -47.926\n- X81   1    0.7934 83.881 -47.784\n- X8    1    0.8327 83.920 -47.691\n<none>              83.087 -47.685\n- X80   1    0.8506 83.938 -47.648\n- X24   1    0.8672 83.954 -47.609\n- X100  1    0.9189 84.006 -47.486\n- X73   1    1.0660 84.153 -47.136\n- X53   1    1.0693 84.157 -47.128\n- X18   1    1.0907 84.178 -47.077\n- X66   1    1.0945 84.182 -47.068\n- X29   1    1.1811 84.268 -46.862\n- X42   1    1.2933 84.380 -46.596\n- X20   1    1.3072 84.394 -46.563\n- X3    1    1.3963 84.484 -46.352\n- X37   1    1.5529 84.640 -45.982\n- X87   1    1.5632 84.650 -45.957\n- X68   1    1.7374 84.825 -45.546\n- X89   1    1.7679 84.855 -45.474\n- X90   1    1.7971 84.884 -45.406\n- X64   1    1.8536 84.941 -45.273\n- X49   1    1.9235 85.011 -45.108\n- X94   1    2.2035 85.291 -44.450\n- X65   1    2.2571 85.344 -44.325\n- X71   1    2.6952 85.782 -43.301\n- X88   1    2.7256 85.813 -43.230\n- X2    1    2.8957 85.983 -42.834\n- X7    1    2.9283 86.016 -42.758\n- X48   1    3.4206 86.508 -41.617\n- X23   1    3.4343 86.522 -41.585\n- X1    1    3.4422 86.529 -41.567\n- X46   1    3.5515 86.639 -41.314\n- X13   1    3.8556 86.943 -40.613\n- X47   1    4.1044 87.192 -40.042\n- X75   1    5.2275 88.315 -37.482\n\nStep:  AIC=-49.08\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X15 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + X29 + \n    X30 + X31 + X33 + X34 + X35 + X37 + X41 + X42 + X45 + X46 + \n    X47 + X48 + X49 + X50 + X53 + X56 + X58 + X62 + X63 + X64 + \n    X65 + X66 + X67 + X68 + X71 + X72 + X73 + X75 + X76 + X77 + \n    X80 + X81 + X85 + X87 + X88 + X89 + X90 + X94 + X97 + X98 + \n    X100\n\n       Df Sum of Sq    RSS     AIC\n- X41   1    0.2270 83.566 -50.535\n- X15   1    0.2832 83.622 -50.401\n- X67   1    0.3015 83.641 -50.357\n- X11   1    0.3112 83.651 -50.334\n- X85   1    0.3405 83.680 -50.264\n- X63   1    0.3419 83.681 -50.260\n- X50   1    0.3572 83.697 -50.224\n- X9    1    0.3584 83.698 -50.221\n- X97   1    0.3607 83.700 -50.216\n- X76   1    0.3612 83.701 -50.214\n- X31   1    0.3906 83.730 -50.144\n- X27   1    0.4132 83.752 -50.090\n- X14   1    0.4227 83.762 -50.068\n- X25   1    0.4238 83.763 -50.065\n- X77   1    0.4239 83.763 -50.065\n- X62   1    0.4285 83.768 -50.054\n- X58   1    0.4719 83.811 -49.950\n- X35   1    0.4971 83.836 -49.890\n- X4    1    0.5014 83.841 -49.880\n- X5    1    0.5351 83.874 -49.799\n- X72   1    0.5818 83.921 -49.688\n- X30   1    0.5844 83.924 -49.682\n- X33   1    0.6006 83.940 -49.643\n- X56   1    0.6573 83.997 -49.508\n- X34   1    0.6729 84.012 -49.471\n- X26   1    0.6978 84.037 -49.412\n- X6    1    0.7323 84.072 -49.330\n- X98   1    0.7395 84.079 -49.313\n- X45   1    0.8181 84.157 -49.126\n<none>              83.339 -49.079\n- X100  1    0.8695 84.209 -49.003\n- X80   1    0.8831 84.222 -48.971\n- X24   1    0.9298 84.269 -48.860\n- X8    1    0.9490 84.288 -48.815\n- X53   1    1.0005 84.340 -48.693\n- X81   1    1.0070 84.346 -48.677\n- X18   1    1.0184 84.358 -48.650\n- X73   1    1.1463 84.486 -48.347\n- X42   1    1.1571 84.496 -48.322\n- X29   1    1.1723 84.512 -48.286\n- X20   1    1.1933 84.533 -48.236\n- X3    1    1.3523 84.692 -47.860\n- X37   1    1.4925 84.832 -47.529\n- X87   1    1.5188 84.858 -47.467\n- X66   1    1.5320 84.871 -47.436\n- X68   1    1.7730 85.112 -46.869\n- X64   1    1.7921 85.131 -46.824\n- X90   1    1.8314 85.171 -46.732\n- X89   1    1.9081 85.247 -46.552\n- X49   1    1.9514 85.291 -46.450\n- X65   1    2.4170 85.756 -45.362\n- X94   1    2.6369 85.976 -44.849\n- X71   1    2.7980 86.137 -44.475\n- X88   1    2.9661 86.305 -44.085\n- X7    1    3.0294 86.369 -43.938\n- X2    1    3.1660 86.505 -43.622\n- X48   1    3.3491 86.688 -43.199\n- X46   1    3.4512 86.791 -42.964\n- X23   1    3.6120 86.951 -42.594\n- X13   1    3.8464 87.186 -42.055\n- X1    1    3.8591 87.198 -42.026\n- X47   1    4.0690 87.408 -41.545\n- X75   1    5.2344 88.574 -38.896\n\nStep:  AIC=-50.54\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X15 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + X29 + \n    X30 + X31 + X33 + X34 + X35 + X37 + X42 + X45 + X46 + X47 + \n    X48 + X49 + X50 + X53 + X56 + X58 + X62 + X63 + X64 + X65 + \n    X66 + X67 + X68 + X71 + X72 + X73 + X75 + X76 + X77 + X80 + \n    X81 + X85 + X87 + X88 + X89 + X90 + X94 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X15   1    0.2377 83.804 -51.967\n- X67   1    0.2645 83.831 -51.903\n- X97   1    0.2702 83.837 -51.890\n- X11   1    0.2823 83.849 -51.861\n- X85   1    0.2963 83.863 -51.828\n- X50   1    0.3205 83.887 -51.770\n- X9    1    0.3772 83.944 -51.635\n- X14   1    0.4223 83.989 -51.527\n- X62   1    0.4256 83.992 -51.519\n- X4    1    0.4373 84.004 -51.491\n- X31   1    0.4459 84.012 -51.471\n- X25   1    0.4471 84.013 -51.468\n- X76   1    0.4597 84.026 -51.438\n- X77   1    0.4637 84.030 -51.429\n- X63   1    0.4703 84.037 -51.413\n- X58   1    0.4852 84.051 -51.378\n- X27   1    0.5034 84.070 -51.334\n- X5    1    0.5105 84.077 -51.317\n- X35   1    0.5305 84.097 -51.270\n- X26   1    0.5929 84.159 -51.121\n- X33   1    0.6569 84.223 -50.969\n- X30   1    0.6693 84.236 -50.940\n- X72   1    0.6756 84.242 -50.925\n- X98   1    0.6889 84.255 -50.893\n- X6    1    0.7486 84.315 -50.752\n- X56   1    0.7859 84.352 -50.663\n- X34   1    0.8339 84.400 -50.550\n<none>              83.566 -50.535\n- X24   1    0.8806 84.447 -50.439\n- X45   1    0.9035 84.470 -50.385\n- X18   1    0.9121 84.478 -50.364\n- X100  1    0.9190 84.485 -50.348\n- X80   1    0.9208 84.487 -50.344\n- X81   1    0.9925 84.559 -50.174\n- X8    1    1.0448 84.611 -50.050\n- X73   1    1.1211 84.687 -49.870\n- X42   1    1.1228 84.689 -49.866\n- X20   1    1.1303 84.697 -49.848\n- X53   1    1.1325 84.699 -49.843\n- X29   1    1.2529 84.819 -49.559\n- X3    1    1.3190 84.885 -49.403\n- X87   1    1.4742 85.041 -49.038\n- X37   1    1.5900 85.156 -48.766\n- X66   1    1.6915 85.258 -48.527\n- X68   1    1.7750 85.341 -48.332\n- X89   1    1.8075 85.374 -48.256\n- X49   1    1.9607 85.527 -47.897\n- X90   1    2.0435 85.610 -47.704\n- X64   1    2.0830 85.649 -47.611\n- X65   1    2.2826 85.849 -47.146\n- X94   1    2.6918 86.258 -46.195\n- X71   1    2.7219 86.288 -46.125\n- X88   1    2.8009 86.367 -45.942\n- X7    1    2.9501 86.516 -45.597\n- X2    1    3.3034 86.870 -44.782\n- X46   1    3.4490 87.015 -44.447\n- X23   1    3.5238 87.090 -44.275\n- X48   1    3.7573 87.324 -43.739\n- X13   1    3.8065 87.373 -43.627\n- X1    1    3.8729 87.439 -43.475\n- X47   1    3.9934 87.560 -43.199\n- X75   1    5.1955 88.762 -40.472\n\nStep:  AIC=-51.97\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + X29 + X30 + \n    X31 + X33 + X34 + X35 + X37 + X42 + X45 + X46 + X47 + X48 + \n    X49 + X50 + X53 + X56 + X58 + X62 + X63 + X64 + X65 + X66 + \n    X67 + X68 + X71 + X72 + X73 + X75 + X76 + X77 + X80 + X81 + \n    X85 + X87 + X88 + X89 + X90 + X94 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X67   1    0.2424 84.046 -53.390\n- X50   1    0.2458 84.050 -53.381\n- X85   1    0.2645 84.068 -53.337\n- X97   1    0.2858 84.090 -53.286\n- X11   1    0.3175 84.121 -53.211\n- X4    1    0.3780 84.182 -53.067\n- X76   1    0.4164 84.220 -52.976\n- X25   1    0.4245 84.229 -52.957\n- X9    1    0.4261 84.230 -52.953\n- X31   1    0.4298 84.234 -52.944\n- X27   1    0.4432 84.247 -52.913\n- X14   1    0.4435 84.247 -52.912\n- X62   1    0.4495 84.253 -52.897\n- X77   1    0.4737 84.278 -52.840\n- X58   1    0.4750 84.279 -52.837\n- X35   1    0.4890 84.293 -52.804\n- X5    1    0.5056 84.310 -52.764\n- X26   1    0.5091 84.313 -52.756\n- X63   1    0.5529 84.357 -52.652\n- X98   1    0.5860 84.390 -52.574\n- X33   1    0.6690 84.473 -52.377\n- X30   1    0.6778 84.482 -52.356\n- X72   1    0.6839 84.488 -52.342\n- X56   1    0.7359 84.540 -52.219\n- X34   1    0.7964 84.600 -52.076\n- X6    1    0.8044 84.608 -52.057\n- X24   1    0.8252 84.629 -52.008\n- X18   1    0.8285 84.633 -52.000\n<none>              83.804 -51.967\n- X45   1    0.8646 84.669 -51.915\n- X100  1    0.9291 84.733 -51.762\n- X8    1    0.9399 84.744 -51.737\n- X80   1    0.9741 84.778 -51.656\n- X20   1    1.0597 84.864 -51.454\n- X42   1    1.1103 84.914 -51.335\n- X29   1    1.1438 84.948 -51.256\n- X3    1    1.1972 85.001 -51.131\n- X81   1    1.1996 85.004 -51.125\n- X73   1    1.2319 85.036 -51.049\n- X53   1    1.3891 85.193 -50.679\n- X87   1    1.5136 85.318 -50.387\n- X37   1    1.5148 85.319 -50.384\n- X68   1    1.7516 85.556 -49.830\n- X89   1    1.8018 85.606 -49.713\n- X49   1    1.8235 85.628 -49.662\n- X90   1    2.0614 85.865 -49.107\n- X66   1    2.0932 85.897 -49.033\n- X65   1    2.1786 85.983 -48.835\n- X64   1    2.3253 86.129 -48.493\n- X94   1    2.6113 86.415 -47.831\n- X71   1    2.6178 86.422 -47.815\n- X7    1    2.8553 86.659 -47.267\n- X88   1    2.9199 86.724 -47.118\n- X2    1    3.2460 87.050 -46.367\n- X46   1    3.5264 87.330 -45.724\n- X23   1    3.5883 87.392 -45.582\n- X13   1    3.6561 87.460 -45.427\n- X48   1    3.8926 87.697 -44.887\n- X47   1    3.9633 87.767 -44.726\n- X1    1    3.9695 87.773 -44.712\n- X75   1    5.1814 88.985 -41.969\n\nStep:  AIC=-53.39\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + X29 + X30 + \n    X31 + X33 + X34 + X35 + X37 + X42 + X45 + X46 + X47 + X48 + \n    X49 + X50 + X53 + X56 + X58 + X62 + X63 + X64 + X65 + X66 + \n    X68 + X71 + X72 + X73 + X75 + X76 + X77 + X80 + X81 + X85 + \n    X87 + X88 + X89 + X90 + X94 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X85   1    0.2585 84.305 -54.776\n- X50   1    0.2686 84.315 -54.752\n- X11   1    0.3128 84.359 -54.647\n- X97   1    0.3191 84.365 -54.632\n- X14   1    0.3423 84.389 -54.577\n- X62   1    0.3936 84.440 -54.455\n- X31   1    0.4125 84.459 -54.411\n- X4    1    0.4234 84.470 -54.385\n- X9    1    0.4241 84.470 -54.383\n- X76   1    0.4452 84.492 -54.333\n- X5    1    0.4644 84.511 -54.288\n- X25   1    0.4657 84.512 -54.285\n- X35   1    0.4668 84.513 -54.282\n- X27   1    0.4773 84.524 -54.257\n- X77   1    0.5174 84.564 -54.162\n- X58   1    0.5361 84.582 -54.118\n- X63   1    0.5559 84.602 -54.071\n- X26   1    0.6137 84.660 -53.935\n- X98   1    0.6247 84.671 -53.909\n- X56   1    0.7030 84.749 -53.724\n- X30   1    0.7178 84.764 -53.689\n- X72   1    0.7194 84.766 -53.685\n- X6    1    0.7993 84.846 -53.497\n- X33   1    0.7996 84.846 -53.496\n- X45   1    0.8187 84.865 -53.451\n- X18   1    0.8267 84.873 -53.432\n<none>              84.046 -53.390\n- X24   1    0.8650 84.911 -53.342\n- X100  1    0.8678 84.914 -53.335\n- X34   1    0.8994 84.946 -53.261\n- X80   1    0.9220 84.968 -53.208\n- X8    1    0.9632 85.010 -53.111\n- X20   1    0.9779 85.024 -53.076\n- X42   1    1.1287 85.175 -52.722\n- X29   1    1.2122 85.259 -52.526\n- X73   1    1.2832 85.330 -52.359\n- X81   1    1.2843 85.331 -52.357\n- X3    1    1.2980 85.344 -52.325\n- X37   1    1.3508 85.397 -52.201\n- X53   1    1.4593 85.506 -51.947\n- X87   1    1.6801 85.726 -51.431\n- X89   1    1.6817 85.728 -51.427\n- X68   1    1.8872 85.934 -50.949\n- X49   1    1.9044 85.951 -50.909\n- X66   1    2.0002 86.047 -50.686\n- X90   1    2.0703 86.117 -50.523\n- X65   1    2.1848 86.231 -50.257\n- X64   1    2.2816 86.328 -50.033\n- X94   1    2.4984 86.545 -49.531\n- X88   1    2.8213 86.868 -48.786\n- X71   1    2.8214 86.868 -48.786\n- X7    1    2.8508 86.897 -48.718\n- X2    1    3.0600 87.106 -48.238\n- X13   1    3.4391 87.485 -47.369\n- X23   1    3.5444 87.591 -47.128\n- X46   1    3.6375 87.684 -46.916\n- X48   1    3.9057 87.952 -46.305\n- X47   1    3.9379 87.984 -46.232\n- X1    1    4.1541 88.200 -45.741\n- X75   1    4.9493 88.996 -43.946\n\nStep:  AIC=-54.78\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + X29 + X30 + \n    X31 + X33 + X34 + X35 + X37 + X42 + X45 + X46 + X47 + X48 + \n    X49 + X50 + X53 + X56 + X58 + X62 + X63 + X64 + X65 + X66 + \n    X68 + X71 + X72 + X73 + X75 + X76 + X77 + X80 + X81 + X87 + \n    X88 + X89 + X90 + X94 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X50   1    0.2610 84.566 -56.157\n- X97   1    0.2965 84.601 -56.073\n- X11   1    0.3037 84.609 -56.056\n- X14   1    0.3684 84.673 -55.904\n- X25   1    0.4090 84.714 -55.808\n- X76   1    0.4198 84.725 -55.782\n- X62   1    0.4234 84.728 -55.774\n- X9    1    0.4329 84.738 -55.751\n- X4    1    0.4384 84.743 -55.738\n- X35   1    0.4638 84.769 -55.678\n- X77   1    0.4700 84.775 -55.664\n- X31   1    0.4902 84.795 -55.616\n- X58   1    0.4985 84.803 -55.596\n- X27   1    0.5440 84.849 -55.489\n- X98   1    0.5729 84.878 -55.421\n- X5    1    0.6263 84.931 -55.295\n- X56   1    0.6272 84.932 -55.293\n- X26   1    0.6633 84.968 -55.208\n- X72   1    0.6742 84.979 -55.182\n- X30   1    0.6899 84.995 -55.146\n- X33   1    0.6966 85.001 -55.130\n- X18   1    0.7192 85.024 -55.077\n- X63   1    0.7369 85.042 -55.035\n- X6    1    0.7536 85.058 -54.996\n- X45   1    0.8080 85.113 -54.868\n<none>              84.305 -54.776\n- X24   1    0.8660 85.171 -54.732\n- X100  1    0.8681 85.173 -54.727\n- X20   1    0.8690 85.174 -54.725\n- X8    1    0.9164 85.221 -54.613\n- X34   1    0.9218 85.227 -54.601\n- X42   1    1.0857 85.391 -54.216\n- X80   1    1.1745 85.479 -54.008\n- X29   1    1.2833 85.588 -53.754\n- X37   1    1.3017 85.607 -53.711\n- X81   1    1.3299 85.635 -53.645\n- X3    1    1.3524 85.657 -53.593\n- X73   1    1.3815 85.686 -53.525\n- X53   1    1.3841 85.689 -53.519\n- X87   1    1.6826 85.987 -52.823\n- X89   1    1.7300 86.035 -52.713\n- X68   1    1.9132 86.218 -52.288\n- X49   1    2.0173 86.322 -52.046\n- X65   1    2.0181 86.323 -52.044\n- X90   1    2.0536 86.358 -51.962\n- X66   1    2.0556 86.360 -51.958\n- X64   1    2.1712 86.476 -51.690\n- X94   1    2.3438 86.649 -51.291\n- X71   1    2.6845 86.989 -50.506\n- X88   1    2.9708 87.276 -49.849\n- X7    1    3.1669 87.472 -49.400\n- X2    1    3.2005 87.505 -49.323\n- X46   1    3.4089 87.714 -48.848\n- X23   1    3.4424 87.747 -48.771\n- X13   1    3.5511 87.856 -48.524\n- X48   1    3.7820 88.087 -47.999\n- X1    1    4.0397 88.345 -47.415\n- X47   1    4.1945 88.499 -47.065\n- X75   1    4.8277 89.133 -45.638\n\nStep:  AIC=-56.16\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X11 + X13 + \n    X14 + X18 + X20 + X23 + X24 + X25 + X26 + X27 + X29 + X30 + \n    X31 + X33 + X34 + X35 + X37 + X42 + X45 + X46 + X47 + X48 + \n    X49 + X53 + X56 + X58 + X62 + X63 + X64 + X65 + X66 + X68 + \n    X71 + X72 + X73 + X75 + X76 + X77 + X80 + X81 + X87 + X88 + \n    X89 + X90 + X94 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X11   1    0.2703 84.836 -57.519\n- X97   1    0.2713 84.837 -57.517\n- X76   1    0.3737 84.940 -57.275\n- X4    1    0.3961 84.962 -57.223\n- X25   1    0.4377 85.004 -57.125\n- X62   1    0.4546 85.020 -57.085\n- X35   1    0.4599 85.026 -57.073\n- X9    1    0.4832 85.049 -57.018\n- X98   1    0.4928 85.059 -56.995\n- X31   1    0.5022 85.068 -56.973\n- X77   1    0.5130 85.079 -56.948\n- X14   1    0.5252 85.091 -56.919\n- X58   1    0.5356 85.101 -56.895\n- X56   1    0.5642 85.130 -56.827\n- X5    1    0.6038 85.170 -56.734\n- X27   1    0.6155 85.181 -56.707\n- X26   1    0.6784 85.244 -56.559\n- X6    1    0.6992 85.265 -56.511\n- X33   1    0.7251 85.291 -56.450\n- X72   1    0.7493 85.315 -56.393\n- X63   1    0.7519 85.318 -56.387\n- X30   1    0.7685 85.334 -56.348\n- X18   1    0.7735 85.339 -56.336\n- X24   1    0.7828 85.349 -56.314\n- X45   1    0.8438 85.410 -56.172\n<none>              84.566 -56.157\n- X100  1    0.8768 85.443 -56.094\n- X34   1    0.8837 85.450 -56.078\n- X20   1    0.8886 85.454 -56.067\n- X8    1    0.9486 85.514 -55.926\n- X42   1    1.0338 85.600 -55.727\n- X80   1    1.0855 85.651 -55.606\n- X37   1    1.2023 85.768 -55.334\n- X81   1    1.2679 85.834 -55.181\n- X53   1    1.3430 85.909 -55.006\n- X3    1    1.4214 85.987 -54.824\n- X73   1    1.4443 86.010 -54.770\n- X29   1    1.4861 86.052 -54.673\n- X87   1    1.5492 86.115 -54.527\n- X89   1    1.7151 86.281 -54.142\n- X68   1    1.9630 86.529 -53.568\n- X49   1    2.0087 86.575 -53.462\n- X66   1    2.0272 86.593 -53.420\n- X90   1    2.0519 86.618 -53.362\n- X65   1    2.1600 86.726 -53.113\n- X94   1    2.3418 86.908 -52.694\n- X64   1    2.4486 87.015 -52.448\n- X71   1    2.6875 87.253 -51.900\n- X88   1    2.9553 87.521 -51.287\n- X7    1    3.0316 87.597 -51.113\n- X2    1    3.2393 87.805 -50.639\n- X46   1    3.3246 87.890 -50.445\n- X13   1    3.5001 88.066 -50.046\n- X23   1    3.6739 88.240 -49.652\n- X48   1    3.8267 88.393 -49.306\n- X1    1    3.9860 88.552 -48.946\n- X47   1    4.2889 88.855 -48.263\n- X75   1    4.7374 89.303 -47.256\n\nStep:  AIC=-57.52\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X13 + X14 + \n    X18 + X20 + X23 + X24 + X25 + X26 + X27 + X29 + X30 + X31 + \n    X33 + X34 + X35 + X37 + X42 + X45 + X46 + X47 + X48 + X49 + \n    X53 + X56 + X58 + X62 + X63 + X64 + X65 + X66 + X68 + X71 + \n    X72 + X73 + X75 + X76 + X77 + X80 + X81 + X87 + X88 + X89 + \n    X90 + X94 + X97 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X97   1    0.2487 85.085 -58.934\n- X35   1    0.4065 85.243 -58.563\n- X4    1    0.4079 85.244 -58.560\n- X25   1    0.4536 85.290 -58.453\n- X9    1    0.4615 85.298 -58.434\n- X76   1    0.4812 85.317 -58.388\n- X62   1    0.4833 85.319 -58.383\n- X31   1    0.5263 85.362 -58.282\n- X77   1    0.5441 85.380 -58.240\n- X98   1    0.5514 85.388 -58.224\n- X56   1    0.5697 85.406 -58.181\n- X33   1    0.5923 85.428 -58.128\n- X58   1    0.6062 85.442 -58.095\n- X27   1    0.6120 85.448 -58.082\n- X30   1    0.6256 85.462 -58.050\n- X14   1    0.6449 85.481 -58.005\n- X5    1    0.7172 85.553 -57.836\n- X6    1    0.7242 85.560 -57.819\n- X100  1    0.7315 85.568 -57.802\n- X24   1    0.7594 85.596 -57.737\n- X72   1    0.7786 85.615 -57.692\n- X26   1    0.7861 85.622 -57.675\n- X63   1    0.7933 85.629 -57.658\n- X34   1    0.8273 85.663 -57.578\n<none>              84.836 -57.519\n- X8    1    0.9171 85.753 -57.369\n- X45   1    0.9319 85.768 -57.334\n- X20   1    0.9347 85.771 -57.328\n- X18   1    0.9386 85.775 -57.319\n- X42   1    0.9614 85.798 -57.265\n- X81   1    1.1812 86.017 -56.754\n- X80   1    1.2500 86.086 -56.594\n- X37   1    1.2544 86.091 -56.584\n- X53   1    1.3589 86.195 -56.341\n- X3    1    1.3960 86.232 -56.255\n- X87   1    1.4604 86.297 -56.106\n- X29   1    1.5689 86.405 -55.854\n- X73   1    1.5748 86.411 -55.841\n- X68   1    1.8284 86.665 -55.254\n- X89   1    1.9063 86.742 -55.075\n- X49   1    1.9574 86.794 -54.957\n- X66   1    2.0690 86.905 -54.700\n- X90   1    2.1385 86.975 -54.540\n- X65   1    2.2043 87.040 -54.389\n- X64   1    2.5318 87.368 -53.638\n- X94   1    2.5645 87.401 -53.563\n- X88   1    2.7906 87.627 -53.046\n- X7    1    2.9875 87.824 -52.597\n- X71   1    3.1070 87.943 -52.325\n- X2    1    3.2276 88.064 -52.051\n- X13   1    3.4966 88.333 -51.441\n- X46   1    3.5485 88.385 -51.324\n- X23   1    3.6186 88.455 -51.165\n- X1    1    3.7542 88.590 -50.859\n- X48   1    4.1019 88.938 -50.075\n- X47   1    4.3852 89.221 -49.440\n- X75   1    4.5522 89.388 -49.065\n\nStep:  AIC=-58.93\ny ~ X1 + X2 + X3 + X4 + X5 + X6 + X7 + X8 + X9 + X13 + X14 + \n    X18 + X20 + X23 + X24 + X25 + X26 + X27 + X29 + X30 + X31 + \n    X33 + X34 + X35 + X37 + X42 + X45 + X46 + X47 + X48 + X49 + \n    X53 + X56 + X58 + X62 + X63 + X64 + X65 + X66 + X68 + X71 + \n    X72 + X73 + X75 + X76 + X77 + X80 + X81 + X87 + X88 + X89 + \n    X90 + X94 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X4    1    0.3668 85.452 -60.073\n- X35   1    0.4317 85.516 -59.922\n- X76   1    0.4468 85.532 -59.886\n- X62   1    0.4521 85.537 -59.874\n- X25   1    0.4528 85.538 -59.872\n- X9    1    0.4572 85.542 -59.862\n- X33   1    0.4696 85.554 -59.833\n- X77   1    0.5641 85.649 -59.612\n- X98   1    0.5646 85.649 -59.611\n- X56   1    0.5705 85.655 -59.597\n- X30   1    0.5956 85.680 -59.539\n- X31   1    0.6018 85.687 -59.524\n- X27   1    0.6584 85.743 -59.392\n- X6    1    0.6912 85.776 -59.316\n- X58   1    0.7044 85.789 -59.285\n- X5    1    0.7156 85.800 -59.259\n- X24   1    0.7468 85.832 -59.186\n- X14   1    0.7533 85.838 -59.171\n- X72   1    0.7897 85.875 -59.086\n- X63   1    0.8145 85.899 -59.028\n- X100  1    0.8154 85.900 -59.026\n- X34   1    0.8464 85.931 -58.954\n<none>              85.085 -58.934\n- X8    1    0.8754 85.960 -58.887\n- X20   1    0.9225 86.007 -58.777\n- X45   1    0.9900 86.075 -58.620\n- X18   1    1.0425 86.127 -58.498\n- X42   1    1.0489 86.134 -58.483\n- X26   1    1.0585 86.143 -58.461\n- X37   1    1.1613 86.246 -58.223\n- X80   1    1.1792 86.264 -58.181\n- X81   1    1.2345 86.319 -58.053\n- X53   1    1.3493 86.434 -57.787\n- X87   1    1.4062 86.491 -57.655\n- X3    1    1.4115 86.496 -57.643\n- X73   1    1.5087 86.594 -57.418\n- X29   1    1.6418 86.727 -57.111\n- X68   1    1.8819 86.967 -56.558\n- X89   1    1.9111 86.996 -56.491\n- X49   1    1.9378 87.023 -56.430\n- X66   1    2.0938 87.179 -56.072\n- X90   1    2.1839 87.269 -55.865\n- X65   1    2.2193 87.304 -55.784\n- X64   1    2.3812 87.466 -55.413\n- X94   1    2.7298 87.815 -54.618\n- X88   1    2.8151 87.900 -54.424\n- X7    1    2.9266 88.011 -54.170\n- X2    1    3.0410 88.126 -53.910\n- X71   1    3.0661 88.151 -53.853\n- X46   1    3.4371 88.522 -53.013\n- X23   1    3.5850 88.670 -52.680\n- X13   1    3.5894 88.674 -52.670\n- X1    1    3.7345 88.819 -52.343\n- X48   1    4.1581 89.243 -51.391\n- X47   1    4.2061 89.291 -51.284\n- X75   1    4.5359 89.621 -50.546\n\nStep:  AIC=-60.07\ny ~ X1 + X2 + X3 + X5 + X6 + X7 + X8 + X9 + X13 + X14 + X18 + \n    X20 + X23 + X24 + X25 + X26 + X27 + X29 + X30 + X31 + X33 + \n    X34 + X35 + X37 + X42 + X45 + X46 + X47 + X48 + X49 + X53 + \n    X56 + X58 + X62 + X63 + X64 + X65 + X66 + X68 + X71 + X72 + \n    X73 + X75 + X76 + X77 + X80 + X81 + X87 + X88 + X89 + X90 + \n    X94 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X9    1    0.3415 85.793 -61.276\n- X25   1    0.3768 85.828 -61.193\n- X62   1    0.4264 85.878 -61.078\n- X56   1    0.4826 85.934 -60.947\n- X35   1    0.4862 85.938 -60.939\n- X33   1    0.5023 85.954 -60.901\n- X76   1    0.5150 85.967 -60.872\n- X31   1    0.5271 85.979 -60.844\n- X98   1    0.5588 86.010 -60.770\n- X77   1    0.5904 86.042 -60.696\n- X30   1    0.6653 86.117 -60.522\n- X6    1    0.6735 86.125 -60.503\n- X27   1    0.6849 86.137 -60.477\n- X72   1    0.7383 86.190 -60.353\n- X5    1    0.7640 86.216 -60.293\n- X58   1    0.7656 86.217 -60.290\n- X24   1    0.7797 86.231 -60.257\n- X34   1    0.7999 86.252 -60.210\n- X14   1    0.8187 86.270 -60.166\n<none>              85.452 -60.073\n- X18   1    0.8834 86.335 -60.016\n- X63   1    0.8834 86.335 -60.016\n- X20   1    0.9387 86.390 -59.888\n- X26   1    0.9722 86.424 -59.811\n- X8    1    1.0191 86.471 -59.702\n- X45   1    1.0300 86.482 -59.677\n- X100  1    1.0429 86.495 -59.647\n- X42   1    1.0699 86.522 -59.585\n- X3    1    1.2559 86.708 -59.155\n- X37   1    1.3128 86.764 -59.024\n- X73   1    1.3932 86.845 -58.839\n- X80   1    1.4298 86.881 -58.755\n- X81   1    1.4646 86.916 -58.674\n- X87   1    1.5007 86.952 -58.591\n- X53   1    1.5845 87.036 -58.399\n- X29   1    1.5900 87.042 -58.386\n- X89   1    1.8484 87.300 -57.793\n- X49   1    1.9211 87.373 -57.627\n- X68   1    2.1502 87.602 -57.103\n- X66   1    2.1571 87.609 -57.087\n- X65   1    2.2572 87.709 -56.859\n- X64   1    2.3296 87.781 -56.694\n- X90   1    2.5439 87.996 -56.206\n- X94   1    2.6924 88.144 -55.869\n- X71   1    2.7926 88.244 -55.642\n- X88   1    2.8437 88.295 -55.526\n- X7    1    2.8578 88.309 -55.494\n- X2    1    2.9238 88.375 -55.345\n- X46   1    3.3084 88.760 -54.476\n- X23   1    3.5407 88.992 -53.953\n- X1    1    3.5982 89.050 -53.824\n- X13   1    3.9484 89.400 -53.039\n- X48   1    4.0293 89.481 -52.858\n- X47   1    4.1618 89.613 -52.562\n- X75   1    4.5283 89.980 -51.746\n\nStep:  AIC=-61.28\ny ~ X1 + X2 + X3 + X5 + X6 + X7 + X8 + X13 + X14 + X18 + X20 + \n    X23 + X24 + X25 + X26 + X27 + X29 + X30 + X31 + X33 + X34 + \n    X35 + X37 + X42 + X45 + X46 + X47 + X48 + X49 + X53 + X56 + \n    X58 + X62 + X63 + X64 + X65 + X66 + X68 + X71 + X72 + X73 + \n    X75 + X76 + X77 + X80 + X81 + X87 + X88 + X89 + X90 + X94 + \n    X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X25   1    0.3820 86.175 -62.387\n- X31   1    0.4138 86.207 -62.313\n- X62   1    0.4318 86.225 -62.272\n- X56   1    0.4319 86.225 -62.271\n- X35   1    0.4517 86.245 -62.225\n- X98   1    0.4748 86.268 -62.172\n- X33   1    0.5082 86.301 -62.094\n- X6    1    0.5503 86.343 -61.997\n- X76   1    0.5676 86.361 -61.957\n- X77   1    0.5814 86.375 -61.925\n- X34   1    0.6169 86.410 -61.843\n- X72   1    0.6408 86.434 -61.787\n- X58   1    0.6766 86.470 -61.705\n- X30   1    0.7018 86.495 -61.646\n- X27   1    0.7101 86.503 -61.627\n- X14   1    0.7268 86.520 -61.588\n- X5    1    0.7405 86.534 -61.557\n- X24   1    0.8122 86.605 -61.391\n<none>              85.793 -61.276\n- X26   1    0.8637 86.657 -61.272\n- X18   1    0.9061 86.699 -61.174\n- X45   1    0.9064 86.700 -61.174\n- X8    1    0.9211 86.714 -61.140\n- X100  1    0.9453 86.738 -61.084\n- X20   1    0.9500 86.743 -61.073\n- X63   1    0.9620 86.755 -61.046\n- X42   1    0.9654 86.759 -61.038\n- X87   1    1.3549 87.148 -60.142\n- X73   1    1.3720 87.165 -60.102\n- X37   1    1.3867 87.180 -60.069\n- X29   1    1.4201 87.213 -59.992\n- X3    1    1.4648 87.258 -59.890\n- X53   1    1.5148 87.308 -59.775\n- X80   1    1.5319 87.325 -59.736\n- X81   1    1.6034 87.397 -59.572\n- X89   1    1.7527 87.546 -59.231\n- X49   1    1.8201 87.613 -59.077\n- X68   1    1.9914 87.785 -58.686\n- X66   1    2.0259 87.819 -58.608\n- X65   1    2.0660 87.859 -58.516\n- X90   1    2.3942 88.187 -57.771\n- X64   1    2.4626 88.256 -57.616\n- X94   1    2.6929 88.486 -57.094\n- X88   1    2.7176 88.511 -57.039\n- X71   1    2.7285 88.522 -57.014\n- X7    1    2.9197 88.713 -56.582\n- X46   1    3.0574 88.851 -56.272\n- X2    1    3.0765 88.870 -56.229\n- X1    1    3.3626 89.156 -55.586\n- X23   1    3.4050 89.198 -55.491\n- X13   1    3.7627 89.556 -54.691\n- X48   1    3.7647 89.558 -54.687\n- X47   1    4.0768 89.870 -53.991\n- X75   1    4.3215 90.115 -53.447\n\nStep:  AIC=-62.39\ny ~ X1 + X2 + X3 + X5 + X6 + X7 + X8 + X13 + X14 + X18 + X20 + \n    X23 + X24 + X26 + X27 + X29 + X30 + X31 + X33 + X34 + X35 + \n    X37 + X42 + X45 + X46 + X47 + X48 + X49 + X53 + X56 + X58 + \n    X62 + X63 + X64 + X65 + X66 + X68 + X71 + X72 + X73 + X75 + \n    X76 + X77 + X80 + X81 + X87 + X88 + X89 + X90 + X94 + X98 + \n    X100\n\n       Df Sum of Sq    RSS     AIC\n- X33   1    0.4412 86.616 -63.366\n- X35   1    0.4684 86.644 -63.303\n- X76   1    0.4688 86.644 -63.302\n- X34   1    0.4694 86.644 -63.301\n- X31   1    0.4850 86.660 -63.265\n- X62   1    0.4924 86.668 -63.248\n- X77   1    0.5319 86.707 -63.156\n- X56   1    0.5701 86.745 -63.068\n- X6    1    0.6026 86.778 -62.994\n- X58   1    0.6141 86.789 -62.967\n- X30   1    0.6249 86.800 -62.942\n- X98   1    0.6308 86.806 -62.928\n- X72   1    0.6379 86.813 -62.912\n- X24   1    0.6486 86.824 -62.887\n- X27   1    0.6902 86.865 -62.792\n- X26   1    0.7446 86.920 -62.667\n- X14   1    0.8128 86.988 -62.510\n- X18   1    0.8380 87.013 -62.452\n- X8    1    0.8529 87.028 -62.417\n<none>              86.175 -62.387\n- X45   1    0.8662 87.041 -62.387\n- X42   1    0.9192 87.094 -62.265\n- X63   1    0.9329 87.108 -62.234\n- X5    1    0.9408 87.116 -62.215\n- X100  1    0.9657 87.141 -62.158\n- X20   1    1.2093 87.384 -61.600\n- X73   1    1.2311 87.406 -61.550\n- X3    1    1.2335 87.409 -61.545\n- X87   1    1.3243 87.499 -61.337\n- X53   1    1.3574 87.533 -61.261\n- X80   1    1.4927 87.668 -60.952\n- X29   1    1.5230 87.698 -60.883\n- X37   1    1.5474 87.723 -60.828\n- X81   1    1.5901 87.765 -60.730\n- X68   1    1.8022 87.977 -60.248\n- X49   1    1.8349 88.010 -60.173\n- X89   1    1.8629 88.038 -60.110\n- X66   1    1.9706 88.146 -59.865\n- X65   1    2.1885 88.364 -59.371\n- X64   1    2.3401 88.515 -59.028\n- X90   1    2.3619 88.537 -58.979\n- X71   1    2.5174 88.693 -58.628\n- X94   1    2.8131 88.988 -57.963\n- X88   1    2.8358 89.011 -57.912\n- X7    1    2.8426 89.018 -57.896\n- X46   1    2.9226 89.098 -57.717\n- X2    1    2.9858 89.161 -57.575\n- X23   1    3.2119 89.387 -57.068\n- X1    1    3.3265 89.502 -56.812\n- X48   1    3.5460 89.721 -56.322\n- X47   1    3.9794 90.155 -55.358\n- X13   1    4.1753 90.350 -54.924\n- X75   1    4.6451 90.820 -53.887\n\nStep:  AIC=-63.37\ny ~ X1 + X2 + X3 + X5 + X6 + X7 + X8 + X13 + X14 + X18 + X20 + \n    X23 + X24 + X26 + X27 + X29 + X30 + X31 + X34 + X35 + X37 + \n    X42 + X45 + X46 + X47 + X48 + X49 + X53 + X56 + X58 + X62 + \n    X63 + X64 + X65 + X66 + X68 + X71 + X72 + X73 + X75 + X76 + \n    X77 + X80 + X81 + X87 + X88 + X89 + X90 + X94 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X34   1    0.2823 86.899 -64.715\n- X31   1    0.4675 87.084 -64.289\n- X76   1    0.4753 87.092 -64.271\n- X35   1    0.4801 87.096 -64.260\n- X77   1    0.4958 87.112 -64.224\n- X62   1    0.4999 87.116 -64.215\n- X56   1    0.5391 87.155 -64.125\n- X6    1    0.5847 87.201 -64.020\n- X24   1    0.6026 87.219 -63.979\n- X58   1    0.6341 87.250 -63.907\n- X27   1    0.6395 87.256 -63.895\n- X30   1    0.6761 87.292 -63.811\n- X72   1    0.7583 87.375 -63.623\n- X8    1    0.7812 87.398 -63.570\n- X98   1    0.7829 87.399 -63.566\n- X18   1    0.8112 87.427 -63.502\n- X26   1    0.8590 87.475 -63.392\n<none>              86.616 -63.366\n- X14   1    0.8820 87.498 -63.340\n- X42   1    0.9111 87.527 -63.273\n- X45   1    1.0150 87.631 -63.036\n- X100  1    1.0298 87.646 -63.002\n- X73   1    1.0843 87.701 -62.878\n- X53   1    1.0873 87.704 -62.871\n- X5    1    1.1156 87.732 -62.806\n- X63   1    1.1172 87.734 -62.803\n- X87   1    1.2642 87.880 -62.468\n- X20   1    1.3850 88.001 -62.193\n- X3    1    1.3947 88.011 -62.171\n- X29   1    1.4905 88.107 -61.954\n- X37   1    1.4988 88.115 -61.935\n- X68   1    1.6056 88.222 -61.693\n- X80   1    1.6467 88.263 -61.599\n- X81   1    1.6949 88.311 -61.490\n- X89   1    1.7856 88.402 -61.285\n- X49   1    1.7909 88.407 -61.273\n- X66   1    1.8401 88.456 -61.162\n- X65   1    2.1184 88.735 -60.533\n- X64   1    2.3106 88.927 -60.101\n- X90   1    2.4319 89.048 -59.828\n- X71   1    2.5793 89.196 -59.497\n- X94   1    2.6411 89.257 -59.359\n- X2    1    2.6553 89.272 -59.327\n- X46   1    2.8324 89.449 -58.930\n- X88   1    3.0394 89.656 -58.468\n- X1    1    3.1846 89.801 -58.145\n- X23   1    3.2378 89.854 -58.026\n- X48   1    3.3264 89.943 -57.829\n- X7    1    3.3583 89.975 -57.758\n- X47   1    3.6711 90.287 -57.064\n- X13   1    4.2632 90.880 -55.757\n- X75   1    4.8111 91.427 -54.554\n\nStep:  AIC=-64.72\ny ~ X1 + X2 + X3 + X5 + X6 + X7 + X8 + X13 + X14 + X18 + X20 + \n    X23 + X24 + X26 + X27 + X29 + X30 + X31 + X35 + X37 + X42 + \n    X45 + X46 + X47 + X48 + X49 + X53 + X56 + X58 + X62 + X63 + \n    X64 + X65 + X66 + X68 + X71 + X72 + X73 + X75 + X76 + X77 + \n    X80 + X81 + X87 + X88 + X89 + X90 + X94 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X35   1    0.4552 87.354 -65.670\n- X76   1    0.4700 87.369 -65.636\n- X56   1    0.4765 87.375 -65.621\n- X77   1    0.4915 87.390 -65.587\n- X31   1    0.5619 87.461 -65.426\n- X27   1    0.5740 87.473 -65.398\n- X24   1    0.5821 87.481 -65.380\n- X58   1    0.5873 87.486 -65.368\n- X30   1    0.6172 87.516 -65.300\n- X6    1    0.6180 87.517 -65.298\n- X62   1    0.6354 87.534 -65.258\n- X8    1    0.8035 87.702 -64.874\n- X98   1    0.8134 87.712 -64.852\n<none>              86.899 -64.715\n- X42   1    0.9056 87.804 -64.642\n- X100  1    0.9142 87.813 -64.622\n- X26   1    0.9422 87.841 -64.558\n- X63   1    0.9482 87.847 -64.544\n- X18   1    0.9654 87.864 -64.505\n- X45   1    0.9950 87.894 -64.438\n- X14   1    1.0051 87.904 -64.415\n- X53   1    1.0331 87.932 -64.351\n- X72   1    1.1555 88.054 -64.073\n- X5    1    1.1849 88.084 -64.006\n- X73   1    1.2025 88.101 -63.966\n- X29   1    1.3042 88.203 -63.736\n- X3    1    1.3150 88.214 -63.711\n- X87   1    1.3368 88.235 -63.662\n- X68   1    1.3761 88.275 -63.573\n- X20   1    1.4734 88.372 -63.352\n- X80   1    1.5620 88.461 -63.152\n- X37   1    1.5731 88.472 -63.127\n- X49   1    1.6475 88.546 -62.959\n- X81   1    1.6788 88.577 -62.888\n- X66   1    1.7959 88.695 -62.624\n- X65   1    2.2162 89.115 -61.678\n- X89   1    2.2983 89.197 -61.494\n- X2    1    2.4130 89.312 -61.237\n- X64   1    2.4319 89.331 -61.195\n- X90   1    2.4442 89.343 -61.167\n- X94   1    2.5466 89.445 -60.938\n- X71   1    2.5817 89.480 -60.860\n- X1    1    3.0370 89.936 -59.845\n- X23   1    3.1602 90.059 -59.571\n- X88   1    3.1769 90.076 -59.534\n- X46   1    3.2292 90.128 -59.418\n- X48   1    3.2590 90.158 -59.352\n- X7    1    3.3168 90.215 -59.223\n- X47   1    3.5692 90.468 -58.665\n- X13   1    4.1850 91.084 -57.308\n- X75   1    4.7707 91.669 -56.026\n\nStep:  AIC=-65.67\ny ~ X1 + X2 + X3 + X5 + X6 + X7 + X8 + X13 + X14 + X18 + X20 + \n    X23 + X24 + X26 + X27 + X29 + X30 + X31 + X37 + X42 + X45 + \n    X46 + X47 + X48 + X49 + X53 + X56 + X58 + X62 + X63 + X64 + \n    X65 + X66 + X68 + X71 + X72 + X73 + X75 + X76 + X77 + X80 + \n    X81 + X87 + X88 + X89 + X90 + X94 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X76   1    0.5219 87.876 -66.479\n- X77   1    0.5323 87.886 -66.455\n- X24   1    0.5528 87.907 -66.408\n- X30   1    0.5682 87.922 -66.373\n- X56   1    0.5692 87.923 -66.371\n- X58   1    0.5815 87.935 -66.343\n- X6    1    0.6103 87.964 -66.278\n- X27   1    0.6800 88.034 -66.119\n- X98   1    0.6994 88.053 -66.075\n- X31   1    0.7081 88.062 -66.055\n- X62   1    0.7639 88.118 -65.929\n- X8    1    0.7832 88.137 -65.885\n- X100  1    0.8343 88.188 -65.769\n- X45   1    0.8707 88.224 -65.687\n- X18   1    0.8760 88.230 -65.674\n<none>              87.354 -65.670\n- X14   1    0.8993 88.253 -65.622\n- X63   1    0.9279 88.282 -65.557\n- X42   1    1.0121 88.366 -65.366\n- X53   1    1.0204 88.374 -65.347\n- X26   1    1.0770 88.431 -65.219\n- X72   1    1.0793 88.433 -65.214\n- X5    1    1.0975 88.451 -65.173\n- X29   1    1.1350 88.489 -65.088\n- X73   1    1.2192 88.573 -64.898\n- X87   1    1.3457 88.699 -64.613\n- X68   1    1.3990 88.753 -64.493\n- X80   1    1.4573 88.811 -64.361\n- X20   1    1.5592 88.913 -64.132\n- X37   1    1.5707 88.925 -64.106\n- X3    1    1.5753 88.929 -64.096\n- X81   1    1.6256 88.979 -63.983\n- X66   1    1.6465 89.000 -63.936\n- X49   1    1.6717 89.025 -63.879\n- X65   1    2.1855 89.539 -62.728\n- X89   1    2.2463 89.600 -62.592\n- X90   1    2.4874 89.841 -62.055\n- X64   1    2.5039 89.858 -62.018\n- X2    1    2.5454 89.899 -61.926\n- X71   1    2.6517 90.005 -61.689\n- X94   1    2.6517 90.005 -61.689\n- X88   1    3.0793 90.433 -60.741\n- X1    1    3.0818 90.436 -60.736\n- X7    1    3.1943 90.548 -60.487\n- X46   1    3.3031 90.657 -60.247\n- X47   1    3.3250 90.679 -60.199\n- X23   1    3.3405 90.694 -60.165\n- X48   1    3.4204 90.774 -59.989\n- X13   1    4.5509 91.905 -57.513\n- X75   1    4.6092 91.963 -57.386\n\nStep:  AIC=-66.48\ny ~ X1 + X2 + X3 + X5 + X6 + X7 + X8 + X13 + X14 + X18 + X20 + \n    X23 + X24 + X26 + X27 + X29 + X30 + X31 + X37 + X42 + X45 + \n    X46 + X47 + X48 + X49 + X53 + X56 + X58 + X62 + X63 + X64 + \n    X65 + X66 + X68 + X71 + X72 + X73 + X75 + X77 + X80 + X81 + \n    X87 + X88 + X89 + X90 + X94 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X56   1    0.4325 88.308 -67.497\n- X58   1    0.4782 88.354 -67.393\n- X77   1    0.5269 88.403 -67.283\n- X62   1    0.5501 88.426 -67.231\n- X24   1    0.5699 88.446 -67.186\n- X6    1    0.5960 88.472 -67.127\n- X63   1    0.6239 88.500 -67.064\n- X27   1    0.6378 88.513 -67.032\n- X18   1    0.6712 88.547 -66.957\n- X8    1    0.6824 88.558 -66.932\n- X98   1    0.6870 88.563 -66.921\n- X30   1    0.7178 88.593 -66.852\n- X31   1    0.7310 88.607 -66.822\n- X100  1    0.8543 88.730 -66.544\n<none>              87.876 -66.479\n- X45   1    0.9249 88.801 -66.385\n- X72   1    0.9881 88.864 -66.243\n- X14   1    1.0207 88.896 -66.169\n- X26   1    1.0624 88.938 -66.075\n- X53   1    1.0650 88.941 -66.070\n- X29   1    1.1056 88.981 -65.978\n- X5    1    1.1342 89.010 -65.914\n- X73   1    1.2245 89.100 -65.711\n- X80   1    1.3560 89.232 -65.416\n- X42   1    1.3616 89.237 -65.404\n- X68   1    1.3678 89.243 -65.390\n- X3    1    1.4197 89.295 -65.273\n- X87   1    1.4326 89.308 -65.245\n- X37   1    1.4440 89.320 -65.219\n- X20   1    1.5115 89.387 -65.068\n- X49   1    1.6430 89.519 -64.774\n- X81   1    1.7065 89.582 -64.632\n- X66   1    1.7914 89.667 -64.443\n- X64   1    2.2743 90.150 -63.369\n- X90   1    2.2770 90.153 -63.363\n- X94   1    2.4185 90.294 -63.049\n- X65   1    2.4285 90.304 -63.027\n- X2    1    2.4419 90.318 -62.997\n- X89   1    2.6808 90.556 -62.469\n- X71   1    2.8429 90.719 -62.111\n- X88   1    2.9673 90.843 -61.837\n- X46   1    3.0007 90.876 -61.764\n- X7    1    3.0857 90.961 -61.577\n- X1    1    3.1557 91.031 -61.423\n- X47   1    3.7062 91.582 -60.217\n- X23   1    3.7586 91.634 -60.102\n- X48   1    3.9142 91.790 -59.763\n- X13   1    4.3394 92.215 -58.839\n- X75   1    4.4425 92.318 -58.615\n\nStep:  AIC=-67.5\ny ~ X1 + X2 + X3 + X5 + X6 + X7 + X8 + X13 + X14 + X18 + X20 + \n    X23 + X24 + X26 + X27 + X29 + X30 + X31 + X37 + X42 + X45 + \n    X46 + X47 + X48 + X49 + X53 + X58 + X62 + X63 + X64 + X65 + \n    X66 + X68 + X71 + X72 + X73 + X75 + X77 + X80 + X81 + X87 + \n    X88 + X89 + X90 + X94 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X77   1    0.4775 88.786 -68.418\n- X58   1    0.5086 88.817 -68.348\n- X63   1    0.5371 88.845 -68.284\n- X98   1    0.5509 88.859 -68.253\n- X6    1    0.5566 88.865 -68.240\n- X8    1    0.5727 88.881 -68.204\n- X18   1    0.5758 88.884 -68.197\n- X24   1    0.5809 88.889 -68.186\n- X27   1    0.6412 88.949 -68.050\n- X62   1    0.6749 88.983 -67.974\n- X31   1    0.7250 89.033 -67.862\n- X30   1    0.7527 89.061 -67.800\n- X100  1    0.8638 89.172 -67.550\n<none>              88.308 -67.497\n- X45   1    0.8920 89.200 -67.487\n- X53   1    0.9059 89.214 -67.456\n- X29   1    0.9485 89.257 -67.360\n- X72   1    0.9995 89.308 -67.246\n- X14   1    1.0281 89.336 -67.182\n- X26   1    1.1277 89.436 -66.959\n- X5    1    1.1503 89.458 -66.909\n- X73   1    1.1658 89.474 -66.874\n- X68   1    1.2665 89.575 -66.649\n- X80   1    1.3549 89.663 -66.452\n- X87   1    1.4060 89.714 -66.338\n- X49   1    1.4284 89.736 -66.288\n- X37   1    1.4710 89.779 -66.193\n- X42   1    1.5010 89.809 -66.126\n- X20   1    1.5886 89.897 -65.931\n- X3    1    1.6423 89.950 -65.812\n- X81   1    1.8492 90.157 -65.352\n- X66   1    2.0801 90.388 -64.841\n- X90   1    2.1676 90.476 -64.647\n- X64   1    2.1801 90.488 -64.620\n- X94   1    2.2538 90.562 -64.457\n- X65   1    2.2702 90.578 -64.420\n- X2    1    2.2719 90.580 -64.417\n- X89   1    2.7215 91.030 -63.426\n- X88   1    2.8084 91.116 -63.236\n- X71   1    2.9948 91.303 -62.827\n- X46   1    3.1665 91.475 -62.451\n- X1    1    3.1863 91.494 -62.408\n- X7    1    3.2886 91.597 -62.184\n- X23   1    3.5425 91.851 -61.631\n- X47   1    3.6898 91.998 -61.310\n- X48   1    3.7365 92.045 -61.209\n- X75   1    4.1575 92.466 -60.296\n- X13   1    4.1795 92.488 -60.249\n\nStep:  AIC=-68.42\ny ~ X1 + X2 + X3 + X5 + X6 + X7 + X8 + X13 + X14 + X18 + X20 + \n    X23 + X24 + X26 + X27 + X29 + X30 + X31 + X37 + X42 + X45 + \n    X46 + X47 + X48 + X49 + X53 + X58 + X62 + X63 + X64 + X65 + \n    X66 + X68 + X71 + X72 + X73 + X75 + X80 + X81 + X87 + X88 + \n    X89 + X90 + X94 + X98 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X98   1    0.4166 89.202 -69.482\n- X58   1    0.5136 89.299 -69.265\n- X18   1    0.5241 89.310 -69.241\n- X24   1    0.5431 89.329 -69.199\n- X62   1    0.5431 89.329 -69.199\n- X6    1    0.5503 89.336 -69.183\n- X63   1    0.5957 89.381 -69.081\n- X8    1    0.6804 89.466 -68.892\n- X27   1    0.6950 89.481 -68.859\n- X31   1    0.7887 89.574 -68.650\n- X30   1    0.7981 89.584 -68.629\n<none>              88.786 -68.418\n- X100  1    0.8976 89.683 -68.407\n- X29   1    0.9087 89.694 -68.382\n- X45   1    0.9427 89.728 -68.306\n- X53   1    0.9486 89.734 -68.293\n- X73   1    1.0504 89.836 -68.066\n- X5    1    1.0732 89.859 -68.015\n- X72   1    1.0867 89.872 -67.985\n- X26   1    1.0896 89.875 -67.979\n- X49   1    1.1738 89.959 -67.792\n- X14   1    1.1984 89.984 -67.737\n- X80   1    1.2181 90.004 -67.693\n- X68   1    1.3309 90.117 -67.443\n- X37   1    1.4768 90.262 -67.119\n- X87   1    1.5097 90.295 -67.046\n- X42   1    1.5388 90.324 -66.982\n- X20   1    1.7597 90.545 -66.493\n- X66   1    1.7856 90.571 -66.436\n- X81   1    1.8106 90.596 -66.381\n- X3    1    1.8247 90.610 -66.350\n- X94   1    1.9225 90.708 -66.134\n- X2    1    2.0627 90.848 -65.825\n- X64   1    2.2236 91.009 -65.471\n- X90   1    2.3090 91.095 -65.284\n- X89   1    2.3558 91.141 -65.181\n- X65   1    2.6965 91.482 -64.435\n- X46   1    3.0244 91.810 -63.719\n- X71   1    3.0845 91.870 -63.588\n- X7    1    3.2053 91.991 -63.325\n- X1    1    3.3535 92.139 -63.003\n- X47   1    3.4646 92.250 -62.762\n- X88   1    3.4732 92.259 -62.744\n- X23   1    3.7446 92.530 -62.156\n- X13   1    4.1398 92.925 -61.304\n- X48   1    4.1449 92.931 -61.293\n- X75   1    4.2360 93.022 -61.097\n\nStep:  AIC=-69.48\ny ~ X1 + X2 + X3 + X5 + X6 + X7 + X8 + X13 + X14 + X18 + X20 + \n    X23 + X24 + X26 + X27 + X29 + X30 + X31 + X37 + X42 + X45 + \n    X46 + X47 + X48 + X49 + X53 + X58 + X62 + X63 + X64 + X65 + \n    X66 + X68 + X71 + X72 + X73 + X75 + X80 + X81 + X87 + X88 + \n    X89 + X90 + X94 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X18   1    0.4036 89.606 -70.580\n- X6    1    0.4357 89.638 -70.508\n- X24   1    0.5001 89.702 -70.364\n- X58   1    0.5068 89.709 -70.349\n- X63   1    0.5284 89.731 -70.301\n- X62   1    0.5640 89.766 -70.222\n- X27   1    0.7056 89.908 -69.907\n- X8    1    0.7170 89.919 -69.881\n- X29   1    0.7552 89.957 -69.796\n- X31   1    0.7577 89.960 -69.791\n<none>              89.202 -69.482\n- X73   1    0.9491 90.151 -69.366\n- X5    1    0.9491 90.151 -69.366\n- X30   1    0.9543 90.156 -69.354\n- X45   1    0.9701 90.172 -69.319\n- X100  1    1.0255 90.228 -69.196\n- X53   1    1.0598 90.262 -69.120\n- X14   1    1.0607 90.263 -69.118\n- X26   1    1.0847 90.287 -69.065\n- X80   1    1.1395 90.342 -68.944\n- X72   1    1.1750 90.377 -68.865\n- X49   1    1.2037 90.406 -68.801\n- X68   1    1.3983 90.601 -68.371\n- X37   1    1.4089 90.611 -68.348\n- X66   1    1.6202 90.822 -67.882\n- X94   1    1.6739 90.876 -67.764\n- X87   1    1.6898 90.892 -67.729\n- X42   1    1.7003 90.903 -67.706\n- X81   1    1.7283 90.931 -67.644\n- X20   1    1.7298 90.932 -67.641\n- X3    1    1.7727 90.975 -67.547\n- X89   1    2.0498 91.252 -66.939\n- X2    1    2.1305 91.333 -66.762\n- X90   1    2.1533 91.356 -66.712\n- X64   1    2.3166 91.519 -66.355\n- X65   1    2.6073 91.809 -65.720\n- X7    1    2.9343 92.136 -65.009\n- X46   1    3.0042 92.206 -64.858\n- X1    1    3.1707 92.373 -64.497\n- X47   1    3.1723 92.375 -64.493\n- X88   1    3.4283 92.631 -63.940\n- X71   1    3.5520 92.754 -63.673\n- X23   1    3.5565 92.759 -63.663\n- X13   1    3.9950 93.197 -62.720\n- X75   1    4.2162 93.418 -62.246\n- X48   1    4.3649 93.567 -61.928\n\nStep:  AIC=-70.58\ny ~ X1 + X2 + X3 + X5 + X6 + X7 + X8 + X13 + X14 + X20 + X23 + \n    X24 + X26 + X27 + X29 + X30 + X31 + X37 + X42 + X45 + X46 + \n    X47 + X48 + X49 + X53 + X58 + X62 + X63 + X64 + X65 + X66 + \n    X68 + X71 + X72 + X73 + X75 + X80 + X81 + X87 + X88 + X89 + \n    X90 + X94 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X24   1    0.4396 90.045 -71.601\n- X6    1    0.4501 90.056 -71.577\n- X58   1    0.5005 90.106 -71.466\n- X62   1    0.5528 90.159 -71.349\n- X63   1    0.5602 90.166 -71.333\n- X8    1    0.6718 90.278 -71.086\n- X27   1    0.7335 90.339 -70.949\n- X29   1    0.7403 90.346 -70.934\n- X31   1    0.7747 90.380 -70.858\n- X30   1    0.8882 90.494 -70.607\n<none>              89.606 -70.580\n- X73   1    0.9019 90.508 -70.577\n- X5    1    0.9562 90.562 -70.457\n- X53   1    0.9570 90.563 -70.455\n- X26   1    1.0037 90.610 -70.352\n- X14   1    1.0190 90.625 -70.318\n- X72   1    1.0233 90.629 -70.308\n- X45   1    1.0458 90.652 -70.259\n- X49   1    1.0758 90.682 -70.193\n- X100  1    1.1900 90.796 -69.941\n- X80   1    1.2520 90.858 -69.804\n- X37   1    1.3926 90.998 -69.495\n- X68   1    1.4403 91.046 -69.390\n- X94   1    1.6070 91.213 -69.024\n- X66   1    1.6450 91.251 -68.941\n- X81   1    1.6893 91.295 -68.844\n- X87   1    1.7446 91.350 -68.723\n- X3    1    1.8174 91.423 -68.564\n- X42   1    1.8844 91.490 -68.417\n- X20   1    1.8938 91.500 -68.397\n- X89   1    1.9662 91.572 -68.238\n- X2    1    2.0152 91.621 -68.131\n- X64   1    2.2349 91.841 -67.652\n- X90   1    2.3021 91.908 -67.506\n- X65   1    2.4516 92.057 -67.181\n- X46   1    2.7274 92.333 -66.583\n- X7    1    2.8513 92.457 -66.315\n- X47   1    3.0046 92.610 -65.983\n- X71   1    3.3745 92.980 -65.186\n- X1    1    3.4110 93.017 -65.107\n- X88   1    3.4148 93.021 -65.099\n- X23   1    3.6693 93.275 -64.553\n- X75   1    4.2864 93.892 -63.234\n- X13   1    4.4183 94.024 -62.953\n- X48   1    4.4443 94.050 -62.898\n\nStep:  AIC=-71.6\ny ~ X1 + X2 + X3 + X5 + X6 + X7 + X8 + X13 + X14 + X20 + X23 + \n    X26 + X27 + X29 + X30 + X31 + X37 + X42 + X45 + X46 + X47 + \n    X48 + X49 + X53 + X58 + X62 + X63 + X64 + X65 + X66 + X68 + \n    X71 + X72 + X73 + X75 + X80 + X81 + X87 + X88 + X89 + X90 + \n    X94 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X6    1    0.4121 90.457 -72.688\n- X58   1    0.4683 90.514 -72.563\n- X8    1    0.5103 90.556 -72.471\n- X62   1    0.5977 90.643 -72.278\n- X63   1    0.7172 90.763 -72.014\n- X29   1    0.7374 90.783 -71.970\n- X73   1    0.7591 90.804 -71.922\n- X27   1    0.7815 90.827 -71.872\n- X31   1    0.8506 90.896 -71.720\n- X26   1    0.8540 90.899 -71.713\n<none>              90.045 -71.601\n- X5    1    0.9853 91.031 -71.424\n- X53   1    1.0003 91.046 -71.391\n- X49   1    1.0062 91.052 -71.378\n- X14   1    1.0448 91.090 -71.294\n- X30   1    1.1234 91.169 -71.121\n- X45   1    1.1542 91.200 -71.054\n- X80   1    1.1592 91.205 -71.043\n- X72   1    1.1760 91.221 -71.006\n- X37   1    1.3310 91.376 -70.666\n- X68   1    1.3374 91.383 -70.652\n- X100  1    1.3415 91.387 -70.643\n- X81   1    1.4532 91.499 -70.399\n- X66   1    1.5690 91.614 -70.146\n- X94   1    1.5949 91.640 -70.089\n- X87   1    1.6267 91.672 -70.020\n- X3    1    1.7509 91.796 -69.749\n- X89   1    1.7580 91.803 -69.734\n- X20   1    1.8526 91.898 -69.528\n- X2    1    1.9679 92.013 -69.277\n- X64   1    2.0326 92.078 -69.136\n- X42   1    2.0616 92.107 -69.073\n- X65   1    2.3296 92.375 -68.492\n- X46   1    2.5245 92.570 -68.071\n- X90   1    2.5345 92.580 -68.049\n- X7    1    2.7598 92.805 -67.563\n- X47   1    2.7658 92.811 -67.550\n- X1    1    3.2951 93.340 -66.413\n- X88   1    3.3483 93.394 -66.299\n- X71   1    3.5108 93.556 -65.951\n- X23   1    3.5478 93.593 -65.872\n- X75   1    4.1007 94.146 -64.694\n- X13   1    4.1229 94.168 -64.647\n- X48   1    4.4732 94.519 -63.904\n\nStep:  AIC=-72.69\ny ~ X1 + X2 + X3 + X5 + X7 + X8 + X13 + X14 + X20 + X23 + X26 + \n    X27 + X29 + X30 + X31 + X37 + X42 + X45 + X46 + X47 + X48 + \n    X49 + X53 + X58 + X62 + X63 + X64 + X65 + X66 + X68 + X71 + \n    X72 + X73 + X75 + X80 + X81 + X87 + X88 + X89 + X90 + X94 + \n    X100\n\n       Df Sum of Sq    RSS     AIC\n- X8    1    0.3657 90.823 -73.881\n- X58   1    0.4608 90.918 -73.671\n- X62   1    0.6176 91.075 -73.327\n- X73   1    0.6882 91.146 -73.172\n- X63   1    0.7045 91.162 -73.136\n- X26   1    0.7054 91.163 -73.134\n- X31   1    0.7211 91.179 -73.100\n- X27   1    0.7747 91.232 -72.982\n- X29   1    0.8161 91.274 -72.891\n<none>              90.457 -72.688\n- X53   1    0.9203 91.378 -72.663\n- X14   1    0.9453 91.403 -72.608\n- X49   1    0.9881 91.446 -72.515\n- X5    1    1.0083 91.466 -72.470\n- X68   1    1.1021 91.560 -72.266\n- X80   1    1.1714 91.629 -72.114\n- X37   1    1.2646 91.722 -71.911\n- X45   1    1.3250 91.782 -71.779\n- X30   1    1.3483 91.806 -71.728\n- X81   1    1.3582 91.816 -71.707\n- X72   1    1.3798 91.837 -71.660\n- X66   1    1.5286 91.986 -71.336\n- X89   1    1.5427 92.000 -71.305\n- X94   1    1.6169 92.074 -71.144\n- X87   1    1.6230 92.080 -71.131\n- X100  1    1.6708 92.128 -71.027\n- X3    1    1.9135 92.371 -70.501\n- X20   1    1.9175 92.375 -70.492\n- X65   1    2.0626 92.520 -70.178\n- X64   1    2.0649 92.522 -70.173\n- X2    1    2.0963 92.554 -70.105\n- X42   1    2.2051 92.663 -69.871\n- X46   1    2.3766 92.834 -69.501\n- X47   1    2.4698 92.927 -69.300\n- X90   1    2.5006 92.958 -69.234\n- X7    1    2.5831 93.041 -69.056\n- X88   1    3.0930 93.551 -67.963\n- X1    1    3.3816 93.839 -67.347\n- X71   1    3.4121 93.870 -67.282\n- X23   1    3.4695 93.927 -67.160\n- X75   1    3.7148 94.172 -66.638\n- X13   1    3.8028 94.260 -66.451\n- X48   1    4.0862 94.544 -65.851\n\nStep:  AIC=-73.88\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X14 + X20 + X23 + X26 + X27 + \n    X29 + X30 + X31 + X37 + X42 + X45 + X46 + X47 + X48 + X49 + \n    X53 + X58 + X62 + X63 + X64 + X65 + X66 + X68 + X71 + X72 + \n    X73 + X75 + X80 + X81 + X87 + X88 + X89 + X90 + X94 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X58   1    0.4043 91.227 -74.992\n- X73   1    0.6051 91.428 -74.553\n- X62   1    0.6176 91.441 -74.525\n- X63   1    0.7587 91.582 -74.217\n- X27   1    0.7663 91.589 -74.200\n- X31   1    0.7675 91.591 -74.198\n- X53   1    0.7705 91.594 -74.191\n- X26   1    0.7753 91.598 -74.181\n- X29   1    0.7770 91.600 -74.177\n- X14   1    0.8698 91.693 -73.974\n- X49   1    0.8947 91.718 -73.920\n<none>              90.823 -73.881\n- X68   1    0.9367 91.760 -73.828\n- X5    1    1.0731 91.896 -73.531\n- X80   1    1.1474 91.970 -73.370\n- X37   1    1.2124 92.036 -73.228\n- X72   1    1.2674 92.091 -73.109\n- X81   1    1.3484 92.172 -72.933\n- X45   1    1.4321 92.255 -72.752\n- X30   1    1.4585 92.282 -72.694\n- X89   1    1.4782 92.301 -72.652\n- X87   1    1.5379 92.361 -72.522\n- X100  1    1.5602 92.383 -72.474\n- X66   1    1.5647 92.388 -72.464\n- X94   1    1.6454 92.469 -72.290\n- X20   1    1.8288 92.652 -71.893\n- X64   1    1.8880 92.711 -71.766\n- X65   1    1.8901 92.713 -71.761\n- X42   1    2.0131 92.836 -71.496\n- X3    1    2.1629 92.986 -71.174\n- X46   1    2.2181 93.041 -71.055\n- X90   1    2.2687 93.092 -70.946\n- X2    1    2.3010 93.124 -70.877\n- X47   1    2.4081 93.231 -70.647\n- X7    1    2.5639 93.387 -70.313\n- X88   1    3.0287 93.852 -69.320\n- X71   1    3.2385 94.062 -68.873\n- X23   1    3.3841 94.207 -68.564\n- X1    1    3.4105 94.234 -68.508\n- X75   1    3.6531 94.476 -67.994\n- X13   1    3.7393 94.562 -67.811\n- X48   1    3.9528 94.776 -67.360\n\nStep:  AIC=-74.99\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X14 + X20 + X23 + X26 + X27 + \n    X29 + X30 + X31 + X37 + X42 + X45 + X46 + X47 + X48 + X49 + \n    X53 + X62 + X63 + X64 + X65 + X66 + X68 + X71 + X72 + X73 + \n    X75 + X80 + X81 + X87 + X88 + X89 + X90 + X94 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X26   1    0.6023 91.830 -75.676\n- X31   1    0.6185 91.846 -75.641\n- X62   1    0.6503 91.878 -75.572\n- X73   1    0.6745 91.902 -75.519\n- X27   1    0.7060 91.933 -75.450\n- X53   1    0.7615 91.989 -75.330\n- X63   1    0.8226 92.050 -75.197\n- X29   1    0.8228 92.050 -75.197\n- X68   1    0.8523 92.080 -75.132\n- X49   1    0.9032 92.131 -75.022\n- X14   1    0.9072 92.135 -75.013\n<none>              91.227 -74.992\n- X80   1    1.1225 92.350 -74.546\n- X5    1    1.1735 92.401 -74.436\n- X45   1    1.3094 92.537 -74.142\n- X37   1    1.3372 92.565 -74.082\n- X81   1    1.3470 92.574 -74.061\n- X72   1    1.3474 92.575 -74.060\n- X100  1    1.3568 92.584 -74.040\n- X30   1    1.5805 92.808 -73.557\n- X87   1    1.6093 92.837 -73.495\n- X66   1    1.6113 92.839 -73.491\n- X89   1    1.6439 92.871 -73.420\n- X94   1    1.7203 92.948 -73.256\n- X20   1    1.7906 93.018 -73.105\n- X65   1    1.9123 93.140 -72.843\n- X42   1    1.9285 93.156 -72.808\n- X64   1    2.0067 93.234 -72.641\n- X46   1    2.2631 93.491 -72.091\n- X47   1    2.3354 93.563 -71.937\n- X2    1    2.3387 93.566 -71.930\n- X90   1    2.4008 93.628 -71.797\n- X3    1    2.4674 93.695 -71.655\n- X7    1    2.5519 93.779 -71.475\n- X88   1    2.7206 93.948 -71.115\n- X71   1    3.1466 94.374 -70.210\n- X23   1    3.4315 94.659 -69.607\n- X1    1    3.5424 94.770 -69.373\n- X75   1    3.6130 94.840 -69.224\n- X13   1    3.6144 94.842 -69.221\n- X48   1    4.0296 95.257 -68.348\n\nStep:  AIC=-75.68\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X14 + X20 + X23 + X27 + X29 + \n    X30 + X31 + X37 + X42 + X45 + X46 + X47 + X48 + X49 + X53 + \n    X62 + X63 + X64 + X65 + X66 + X68 + X71 + X72 + X73 + X75 + \n    X80 + X81 + X87 + X88 + X89 + X90 + X94 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X62   1    0.5688 92.399 -76.441\n- X31   1    0.6279 92.458 -76.313\n- X68   1    0.6945 92.524 -76.169\n- X73   1    0.7219 92.552 -76.110\n- X63   1    0.7314 92.561 -76.090\n- X53   1    0.7593 92.589 -76.029\n- X27   1    0.7676 92.597 -76.011\n- X29   1    0.7859 92.616 -75.972\n- X14   1    0.8105 92.640 -75.919\n- X49   1    0.8485 92.678 -75.837\n<none>              91.830 -75.676\n- X80   1    1.0115 92.841 -75.485\n- X5    1    1.1870 93.017 -75.108\n- X45   1    1.2405 93.070 -74.993\n- X81   1    1.3405 93.170 -74.778\n- X72   1    1.3969 93.227 -74.657\n- X87   1    1.4481 93.278 -74.547\n- X66   1    1.4773 93.307 -74.484\n- X100  1    1.5187 93.348 -74.396\n- X37   1    1.5824 93.412 -74.259\n- X20   1    1.6179 93.448 -74.183\n- X30   1    1.7185 93.548 -73.968\n- X89   1    1.7227 93.552 -73.959\n- X46   1    1.9818 93.812 -73.406\n- X65   1    2.0143 93.844 -73.337\n- X94   1    2.1008 93.931 -73.152\n- X42   1    2.1086 93.938 -73.136\n- X7    1    2.3068 94.137 -72.714\n- X90   1    2.3564 94.186 -72.609\n- X2    1    2.3965 94.226 -72.524\n- X3    1    2.4104 94.240 -72.494\n- X64   1    2.4376 94.267 -72.437\n- X88   1    2.4842 94.314 -72.338\n- X47   1    2.5049 94.335 -72.294\n- X71   1    2.8665 94.696 -71.529\n- X1    1    3.1124 94.942 -71.010\n- X23   1    3.2673 95.097 -70.684\n- X75   1    3.3572 95.187 -70.495\n- X13   1    3.3809 95.211 -70.445\n- X48   1    3.9526 95.782 -69.248\n\nStep:  AIC=-76.44\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X14 + X20 + X23 + X27 + X29 + \n    X30 + X31 + X37 + X42 + X45 + X46 + X47 + X48 + X49 + X53 + \n    X63 + X64 + X65 + X66 + X68 + X71 + X72 + X73 + X75 + X80 + \n    X81 + X87 + X88 + X89 + X90 + X94 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X31   1    0.5801 92.979 -77.190\n- X73   1    0.5989 92.997 -77.149\n- X63   1    0.7617 93.160 -76.799\n- X53   1    0.8075 93.206 -76.701\n- X27   1    0.8120 93.211 -76.691\n- X49   1    0.8783 93.277 -76.549\n- X14   1    0.8905 93.289 -76.523\n- X29   1    0.9048 93.303 -76.492\n- X68   1    0.9087 93.307 -76.484\n<none>              92.399 -76.441\n- X72   1    1.1038 93.502 -76.066\n- X45   1    1.2179 93.616 -75.822\n- X5    1    1.2399 93.638 -75.775\n- X80   1    1.2891 93.688 -75.670\n- X87   1    1.3545 93.753 -75.531\n- X81   1    1.3803 93.779 -75.476\n- X20   1    1.4970 93.896 -75.227\n- X37   1    1.5789 93.977 -75.053\n- X100  1    1.5905 93.989 -75.028\n- X66   1    1.5982 93.997 -75.011\n- X89   1    1.6303 94.029 -74.943\n- X46   1    1.8399 94.238 -74.498\n- X30   1    1.9751 94.374 -74.211\n- X94   1    2.0240 94.423 -74.108\n- X65   1    2.0817 94.480 -73.985\n- X42   1    2.1391 94.538 -73.864\n- X2    1    2.1884 94.587 -73.760\n- X7    1    2.2693 94.668 -73.589\n- X64   1    2.3919 94.790 -73.330\n- X47   1    2.4932 94.892 -73.116\n- X3    1    2.5100 94.909 -73.081\n- X88   1    2.5302 94.929 -73.038\n- X90   1    2.5370 94.936 -73.024\n- X13   1    3.0644 95.463 -71.916\n- X71   1    3.1725 95.571 -71.690\n- X75   1    3.2195 95.618 -71.591\n- X1    1    3.2639 95.662 -71.498\n- X23   1    3.4134 95.812 -71.186\n- X48   1    4.3576 96.756 -69.225\n\nStep:  AIC=-77.19\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X14 + X20 + X23 + X27 + X29 + \n    X30 + X37 + X42 + X45 + X46 + X47 + X48 + X49 + X53 + X63 + \n    X64 + X65 + X66 + X68 + X71 + X72 + X73 + X75 + X80 + X81 + \n    X87 + X88 + X89 + X90 + X94 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X27   1    0.6565 93.635 -77.782\n- X63   1    0.7143 93.693 -77.659\n- X73   1    0.7214 93.700 -77.644\n- X14   1    0.7716 93.750 -77.537\n- X68   1    0.8024 93.781 -77.471\n- X53   1    0.9006 93.879 -77.262\n<none>              92.979 -77.190\n- X72   1    0.9642 93.943 -77.126\n- X49   1    0.9743 93.953 -77.105\n- X29   1    1.0106 93.989 -77.027\n- X45   1    1.1402 94.119 -76.752\n- X5    1    1.1944 94.173 -76.637\n- X80   1    1.3095 94.288 -76.393\n- X87   1    1.3785 94.357 -76.246\n- X100  1    1.4403 94.419 -76.115\n- X81   1    1.4642 94.443 -76.065\n- X66   1    1.4870 94.466 -76.016\n- X20   1    1.5094 94.488 -75.969\n- X89   1    1.7535 94.732 -75.453\n- X37   1    1.8567 94.835 -75.235\n- X46   1    1.9116 94.890 -75.119\n- X30   1    1.9568 94.935 -75.024\n- X65   1    1.9885 94.967 -74.957\n- X42   1    2.0423 95.021 -74.844\n- X94   1    2.0571 95.036 -74.813\n- X7    1    2.1819 95.161 -74.550\n- X64   1    2.2456 95.224 -74.417\n- X88   1    2.3700 95.349 -74.156\n- X2    1    2.3821 95.361 -74.130\n- X90   1    2.4468 95.425 -73.995\n- X47   1    2.4570 95.436 -73.973\n- X3    1    2.4762 95.455 -73.933\n- X13   1    2.8732 95.852 -73.103\n- X75   1    3.0733 96.052 -72.686\n- X1    1    3.2154 96.194 -72.390\n- X23   1    3.3789 96.358 -72.050\n- X71   1    3.5532 96.532 -71.689\n- X48   1    4.0462 97.025 -70.670\n\nStep:  AIC=-77.78\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X14 + X20 + X23 + X29 + X30 + \n    X37 + X42 + X45 + X46 + X47 + X48 + X49 + X53 + X63 + X64 + \n    X65 + X66 + X68 + X71 + X72 + X73 + X75 + X80 + X81 + X87 + \n    X88 + X89 + X90 + X94 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X73   1    0.6430 94.278 -78.413\n- X63   1    0.7195 94.355 -78.251\n- X14   1    0.7220 94.357 -78.246\n- X68   1    0.7481 94.383 -78.191\n- X72   1    0.7949 94.430 -78.092\n- X53   1    0.8328 94.468 -78.011\n- X49   1    0.8696 94.505 -77.933\n<none>              93.635 -77.782\n- X29   1    1.0613 94.696 -77.528\n- X5    1    1.2819 94.917 -77.063\n- X45   1    1.2835 94.919 -77.059\n- X87   1    1.3130 94.948 -76.997\n- X66   1    1.4102 95.045 -76.793\n- X81   1    1.6031 95.238 -76.387\n- X20   1    1.6379 95.273 -76.314\n- X80   1    1.6940 95.329 -76.196\n- X37   1    1.7898 95.425 -75.995\n- X94   1    1.9406 95.576 -75.680\n- X89   1    1.9806 95.616 -75.596\n- X100  1    1.9845 95.620 -75.588\n- X65   1    1.9882 95.623 -75.580\n- X64   1    2.0099 95.645 -75.535\n- X46   1    2.1246 95.760 -75.295\n- X42   1    2.2681 95.903 -74.995\n- X2    1    2.3007 95.936 -74.928\n- X88   1    2.3389 95.974 -74.848\n- X7    1    2.3509 95.986 -74.823\n- X47   1    2.3968 96.032 -74.727\n- X30   1    2.4143 96.050 -74.691\n- X90   1    2.5397 96.175 -74.430\n- X13   1    2.6245 96.260 -74.254\n- X3    1    2.6662 96.301 -74.167\n- X1    1    3.2877 96.923 -72.880\n- X71   1    3.5275 97.163 -72.386\n- X23   1    3.5879 97.223 -72.262\n- X75   1    3.8105 97.446 -71.805\n- X48   1    3.9113 97.546 -71.598\n\nStep:  AIC=-78.41\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X14 + X20 + X23 + X29 + X30 + \n    X37 + X42 + X45 + X46 + X47 + X48 + X49 + X53 + X63 + X64 + \n    X65 + X66 + X68 + X71 + X72 + X75 + X80 + X81 + X87 + X88 + \n    X89 + X90 + X94 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X14   1    0.6901 94.968 -78.955\n- X49   1    0.7034 94.982 -78.927\n- X63   1    0.7439 95.022 -78.842\n- X72   1    0.7773 95.055 -78.771\n- X68   1    0.8616 95.140 -78.594\n- X53   1    0.8709 95.149 -78.574\n- X29   1    0.8854 95.164 -78.544\n<none>              94.278 -78.413\n- X87   1    1.2310 95.509 -77.819\n- X5    1    1.2509 95.529 -77.777\n- X45   1    1.2510 95.529 -77.777\n- X66   1    1.2937 95.572 -77.688\n- X81   1    1.5898 95.868 -77.069\n- X65   1    1.7932 96.071 -76.645\n- X64   1    1.8093 96.088 -76.612\n- X37   1    1.8203 96.099 -76.589\n- X80   1    1.8460 96.124 -76.535\n- X89   1    1.8511 96.129 -76.525\n- X20   1    1.8559 96.134 -76.515\n- X94   1    1.9434 96.222 -76.333\n- X46   1    1.9927 96.271 -76.230\n- X42   1    2.0356 96.314 -76.141\n- X47   1    2.2966 96.575 -75.600\n- X30   1    2.3177 96.596 -75.556\n- X100  1    2.4108 96.689 -75.364\n- X2    1    2.4278 96.706 -75.328\n- X3    1    2.4817 96.760 -75.217\n- X88   1    2.5325 96.811 -75.112\n- X90   1    2.5947 96.873 -74.984\n- X7    1    2.6730 96.951 -74.822\n- X13   1    2.6905 96.969 -74.786\n- X1    1    3.1728 97.451 -73.793\n- X23   1    3.2572 97.535 -73.620\n- X71   1    3.4176 97.696 -73.292\n- X48   1    3.8877 98.166 -72.332\n- X75   1    3.9415 98.220 -72.222\n\nStep:  AIC=-78.95\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X20 + X23 + X29 + X30 + X37 + \n    X42 + X45 + X46 + X47 + X48 + X49 + X53 + X63 + X64 + X65 + \n    X66 + X68 + X71 + X72 + X75 + X80 + X81 + X87 + X88 + X89 + \n    X90 + X94 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X72   1    0.7187 95.687 -79.447\n- X49   1    0.7260 95.694 -79.432\n- X63   1    0.7444 95.713 -79.393\n- X53   1    0.8625 95.831 -79.147\n- X29   1    0.8954 95.864 -79.078\n- X68   1    0.9528 95.921 -78.958\n<none>              94.968 -78.955\n- X5    1    1.1331 96.101 -78.583\n- X66   1    1.1997 96.168 -78.444\n- X87   1    1.3487 96.317 -78.135\n- X45   1    1.4788 96.447 -77.865\n- X89   1    1.6814 96.650 -77.445\n- X80   1    1.7501 96.718 -77.303\n- X64   1    1.7561 96.724 -77.290\n- X37   1    1.8540 96.822 -77.088\n- X47   1    1.8862 96.854 -77.022\n- X65   1    1.8904 96.859 -77.013\n- X42   1    1.9160 96.884 -76.960\n- X81   1    1.9233 96.892 -76.945\n- X20   1    2.0584 97.027 -76.666\n- X94   1    2.2851 97.253 -76.200\n- X30   1    2.3163 97.285 -76.135\n- X46   1    2.3205 97.289 -76.127\n- X90   1    2.3896 97.358 -75.985\n- X100  1    2.4373 97.406 -75.887\n- X88   1    2.4392 97.407 -75.883\n- X3    1    2.5278 97.496 -75.701\n- X2    1    2.7974 97.766 -75.149\n- X13   1    3.0429 98.011 -74.647\n- X7    1    3.0518 98.020 -74.629\n- X23   1    3.1711 98.139 -74.386\n- X1    1    3.2338 98.202 -74.258\n- X48   1    3.4389 98.407 -73.841\n- X71   1    3.4920 98.460 -73.733\n- X75   1    3.8607 98.829 -72.985\n\nStep:  AIC=-79.45\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X20 + X23 + X29 + X30 + X37 + \n    X42 + X45 + X46 + X47 + X48 + X49 + X53 + X63 + X64 + X65 + \n    X66 + X68 + X71 + X75 + X80 + X81 + X87 + X88 + X89 + X90 + \n    X94 + X100\n\n       Df Sum of Sq    RSS     AIC\n- X29   1    0.7792 96.466 -79.825\n- X53   1    0.8355 96.522 -79.708\n- X63   1    0.8421 96.529 -79.695\n- X49   1    0.8563 96.543 -79.665\n<none>              95.687 -79.447\n- X68   1    0.9677 96.655 -79.435\n- X5    1    1.0856 96.773 -79.191\n- X66   1    1.2342 96.921 -78.884\n- X45   1    1.2750 96.962 -78.800\n- X87   1    1.3626 97.050 -78.619\n- X65   1    1.5989 97.286 -78.133\n- X64   1    1.7456 97.433 -77.831\n- X89   1    1.8527 97.540 -77.612\n- X37   1    1.9127 97.600 -77.489\n- X80   1    1.9625 97.649 -77.387\n- X42   1    2.0975 97.785 -77.110\n- X46   1    2.1321 97.819 -77.040\n- X90   1    2.1425 97.829 -77.018\n- X94   1    2.1564 97.843 -76.990\n- X81   1    2.1732 97.860 -76.955\n- X30   1    2.2491 97.936 -76.800\n- X20   1    2.2717 97.959 -76.754\n- X88   1    2.3330 98.020 -76.629\n- X100  1    2.3485 98.035 -76.598\n- X47   1    2.4049 98.092 -76.482\n- X3    1    2.6200 98.307 -76.044\n- X13   1    2.7902 98.477 -75.698\n- X2    1    2.8113 98.498 -75.656\n- X7    1    3.0577 98.745 -75.156\n- X23   1    3.1125 98.800 -75.045\n- X1    1    3.1596 98.847 -74.950\n- X71   1    3.2697 98.957 -74.727\n- X48   1    3.6555 99.343 -73.949\n- X75   1    4.2499 99.937 -72.756\n\nStep:  AIC=-79.82\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X20 + X23 + X30 + X37 + X42 + \n    X45 + X46 + X47 + X48 + X49 + X53 + X63 + X64 + X65 + X66 + \n    X68 + X71 + X75 + X80 + X81 + X87 + X88 + X89 + X90 + X94 + \n    X100\n\n       Df Sum of Sq     RSS     AIC\n- X63   1    0.6368  97.103 -80.509\n- X49   1    0.7256  97.192 -80.326\n- X53   1    0.7732  97.239 -80.228\n- X68   1    0.8755  97.342 -80.018\n<none>               96.466 -79.825\n- X45   1    1.0611  97.527 -79.637\n- X66   1    1.0900  97.556 -79.578\n- X87   1    1.1246  97.591 -79.507\n- X5    1    1.1324  97.599 -79.491\n- X65   1    1.3494  97.816 -79.047\n- X64   1    1.6984  98.165 -78.334\n- X89   1    1.7162  98.182 -78.298\n- X94   1    1.8850  98.351 -77.954\n- X46   1    1.8949  98.361 -77.934\n- X42   1    1.9256  98.392 -77.872\n- X80   1    2.0611  98.527 -77.597\n- X30   1    2.0727  98.539 -77.573\n- X100  1    2.0864  98.553 -77.545\n- X90   1    2.1298  98.596 -77.457\n- X81   1    2.1844  98.651 -77.347\n- X20   1    2.1893  98.656 -77.337\n- X37   1    2.2728  98.739 -77.168\n- X47   1    2.3449  98.811 -77.021\n- X2    1    2.4855  98.952 -76.737\n- X3    1    2.5324  98.999 -76.642\n- X13   1    2.6604  99.127 -76.384\n- X23   1    2.6694  99.136 -76.366\n- X88   1    2.7591  99.225 -76.185\n- X1    1    2.7939  99.260 -76.115\n- X71   1    3.1831  99.649 -75.332\n- X7    1    3.2395  99.706 -75.219\n- X48   1    3.4153  99.882 -74.866\n- X75   1    3.9659 100.432 -73.767\n\nStep:  AIC=-80.51\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X20 + X23 + X30 + X37 + X42 + \n    X45 + X46 + X47 + X48 + X49 + X53 + X64 + X65 + X66 + X68 + \n    X71 + X75 + X80 + X81 + X87 + X88 + X89 + X90 + X94 + X100\n\n       Df Sum of Sq     RSS     AIC\n- X53   1    0.5641  97.667 -81.350\n- X68   1    0.6906  97.794 -81.092\n- X49   1    0.7135  97.817 -81.045\n- X66   1    0.9128  98.016 -80.638\n<none>               97.103 -80.509\n- X5    1    1.1338  98.237 -80.187\n- X45   1    1.1458  98.249 -80.163\n- X65   1    1.3038  98.407 -79.841\n- X87   1    1.3214  98.424 -79.806\n- X64   1    1.6796  98.783 -79.079\n- X80   1    1.7787  98.882 -78.878\n- X46   1    1.8006  98.904 -78.834\n- X90   1    1.8235  98.927 -78.788\n- X94   1    1.8905  98.994 -78.653\n- X89   1    1.8908  98.994 -78.652\n- X30   1    1.9419  99.045 -78.549\n- X81   1    1.9483  99.051 -78.536\n- X37   1    2.1137  99.217 -78.202\n- X42   1    2.1742  99.277 -78.080\n- X100  1    2.2230  99.326 -77.982\n- X2    1    2.3025  99.406 -77.822\n- X20   1    2.3549  99.458 -77.717\n- X13   1    2.3879  99.491 -77.650\n- X3    1    2.3939  99.497 -77.638\n- X23   1    2.4178  99.521 -77.590\n- X88   1    2.5176  99.621 -77.390\n- X47   1    2.5497  99.653 -77.325\n- X1    1    2.8645  99.968 -76.694\n- X7    1    3.2123 100.315 -76.000\n- X71   1    3.4806 100.584 -75.466\n- X75   1    3.6469 100.750 -75.135\n- X48   1    3.7874 100.890 -74.856\n\nStep:  AIC=-81.35\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X20 + X23 + X30 + X37 + X42 + \n    X45 + X46 + X47 + X48 + X49 + X64 + X65 + X66 + X68 + X71 + \n    X75 + X80 + X81 + X87 + X88 + X89 + X90 + X94 + X100\n\n       Df Sum of Sq     RSS     AIC\n- X68   1    0.5440  98.211 -82.240\n- X49   1    0.6464  98.313 -82.031\n- X66   1    0.9558  98.623 -81.403\n<none>               97.667 -81.350\n- X5    1    1.2133  98.880 -80.881\n- X45   1    1.2223  98.889 -80.863\n- X87   1    1.2253  98.892 -80.857\n- X65   1    1.2477  98.915 -80.812\n- X64   1    1.6024  99.270 -80.096\n- X90   1    1.6666  99.334 -79.966\n- X81   1    1.7006  99.368 -79.898\n- X46   1    1.7244  99.392 -79.850\n- X80   1    1.7800  99.447 -79.738\n- X30   1    1.8016  99.469 -79.695\n- X94   1    1.8100  99.477 -79.678\n- X89   1    1.9896  99.657 -79.317\n- X37   1    2.0439  99.711 -79.208\n- X100  1    2.2165  99.884 -78.862\n- X42   1    2.2240  99.891 -78.847\n- X23   1    2.2995  99.967 -78.696\n- X88   1    2.3919 100.059 -78.511\n- X47   1    2.4399 100.107 -78.416\n- X2    1    2.4598 100.127 -78.376\n- X20   1    2.6008 100.268 -78.094\n- X13   1    2.6106 100.278 -78.075\n- X3    1    2.8122 100.479 -77.673\n- X1    1    2.9378 100.605 -77.423\n- X71   1    3.2954 100.963 -76.714\n- X7    1    3.3148 100.982 -76.675\n- X48   1    3.7285 101.396 -75.858\n- X75   1    3.8813 101.548 -75.556\n\nStep:  AIC=-82.24\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X20 + X23 + X30 + X37 + X42 + \n    X45 + X46 + X47 + X48 + X49 + X64 + X65 + X66 + X71 + X75 + \n    X80 + X81 + X87 + X88 + X89 + X90 + X94 + X100\n\n       Df Sum of Sq     RSS     AIC\n- X49   1    0.5702  98.781 -83.082\n<none>               98.211 -82.240\n- X66   1    1.0588  99.270 -82.095\n- X5    1    1.1124  99.323 -81.987\n- X87   1    1.1241  99.335 -81.964\n- X65   1    1.3119  99.523 -81.586\n- X45   1    1.3739  99.585 -81.461\n- X64   1    1.5922  99.803 -81.023\n- X90   1    1.6521  99.863 -80.903\n- X81   1    1.6743  99.885 -80.859\n- X80   1    1.7596  99.971 -80.688\n- X94   1    1.8172 100.028 -80.573\n- X46   1    1.8906 100.102 -80.426\n- X23   1    2.0808 100.292 -80.046\n- X37   1    2.1359 100.347 -79.937\n- X30   1    2.1381 100.349 -79.932\n- X42   1    2.2036 100.415 -79.802\n- X2    1    2.2499 100.461 -79.710\n- X88   1    2.2784 100.490 -79.653\n- X100  1    2.3109 100.522 -79.588\n- X89   1    2.4038 100.615 -79.403\n- X3    1    2.4527 100.664 -79.306\n- X20   1    2.5239 100.735 -79.165\n- X13   1    2.6044 100.816 -79.005\n- X47   1    2.6223 100.833 -78.970\n- X1    1    2.7290 100.940 -78.758\n- X7    1    3.1173 101.328 -77.990\n- X75   1    3.6629 101.874 -76.916\n- X48   1    3.9180 102.129 -76.416\n- X71   1    4.2088 102.420 -75.847\n\nStep:  AIC=-83.08\ny ~ X1 + X2 + X3 + X5 + X7 + X13 + X20 + X23 + X30 + X37 + X42 + \n    X45 + X46 + X47 + X48 + X64 + X65 + X66 + X71 + X75 + X80 + \n    X81 + X87 + X88 + X89 + X90 + X94 + X100\n\n       Df Sum of Sq     RSS     AIC\n<none>               98.781 -83.082\n- X66   1    0.9984  99.780 -83.071\n- X87   1    1.0854  99.867 -82.896\n- X65   1    1.2345 100.016 -82.598\n- X5    1    1.2539 100.035 -82.559\n- X45   1    1.3881 100.169 -82.291\n- X90   1    1.6825 100.464 -81.704\n- X81   1    1.6985 100.480 -81.672\n- X64   1    1.7795 100.561 -81.511\n- X80   1    1.8899 100.671 -81.292\n- X46   1    1.9645 100.746 -81.144\n- X94   1    2.0016 100.783 -81.070\n- X30   1    2.0506 100.832 -80.973\n- X2    1    2.0695 100.851 -80.935\n- X42   1    2.1883 100.970 -80.700\n- X23   1    2.2841 101.065 -80.510\n- X89   1    2.3144 101.096 -80.450\n- X3    1    2.3193 101.100 -80.440\n- X100  1    2.3224 101.104 -80.434\n- X37   1    2.3448 101.126 -80.390\n- X20   1    2.4934 101.275 -80.096\n- X47   1    2.5230 101.304 -80.038\n- X1    1    2.7047 101.486 -79.679\n- X88   1    2.7626 101.544 -79.565\n- X13   1    2.8464 101.628 -79.400\n- X7    1    3.0141 101.795 -79.071\n- X75   1    3.7561 102.537 -77.618\n- X71   1    4.0437 102.825 -77.058\n- X48   1    4.0522 102.833 -77.041\n\nsum.sel <- summary(selection)\nmean(sum.sel$coefficients[,4] < 0.05)\n\n[1] 0.5172414\n\n# 0.48: Now almost 50 % of our results are false positives!!!"
  },
  {
    "objectID": "5-MultipleRegression.html#exercises",
    "href": "5-MultipleRegression.html#exercises",
    "title": "5  Multiple regression",
    "section": "5.5 Exercises",
    "text": "5.5 Exercises\n\nFormula syntax\n\n\n\n\n\n\n\nFormula\nMeaning\nDetails\n\n\n\n\ny~x_1\n\\(y=a_0 +a_1*x_1\\)\nSlope+Intercept\n\n\ny~x_1 - 1\n\\(y=a_1*x_1\\)\nSlope, no intercept\n\n\ny~I(x_1^2)\n\\(y=a_0 + a_1*(x_1^2)\\)\nQuadratic effect\n\n\ny~x_1+x_2\n\\(y=a_0+a_1*x_1+a_2*x_2\\)\nMultiple linear regression (two variables)\n\n\ny~x_1:x_2\n\\(y=a_0+a_1*(x_1*x_2)\\)\nInteraction between x1 and x2\n\n\ny~x_1*x_2\n\\(y=a_0+a_1*(x_1*x_2)+a_2*x_1+a_3*x_2\\)\nInteraction and main effects\n\n\n\nIn this exercise you will:\n\nperform multiple linear regressions\ninterpret regression output and check the residuals\nplot model predictions including interactions\n\nBefore you start, remember to clean your global environment (if you haven’t already) using rm(list=ls()).\nTo conduct the exercise, please load the following packages:\n\nlibrary(effects)\nlibrary(MuMIn)\n\nYou will work with the following datasets:\n\nmtcars\nCement{MuMIn}\n\nThe second dataset is from the MuMIn package (as shown by the curly brackets).\n\n5.5.0.1 Useful functions\nfor multiple linear regression\nlm() - fit linear model\nsummary(fit) - apply to fitted model object to display regression table\nplot(fit) - plot residuals for model validation\nanova(fit) - apply type I ANOVA (variables included sequentially) to model to test for effects all levels of a factor\nAnova(fit) - car package; use type II ANOVA (effects for predictors when all other predictors are already included) for overall effects\nscale() - scale variable\nsqrt() - square-root\nlog() - calculates natural logarithm\nplot(allEffects(fit)) - apply to fitted model object to plot marginal effect; effects package\npar() - change graphical parameters\nuse oldpar <- par(mfrow = c(number_rows, number_cols)) to change figure layout including more than 1 plot per figure\nuse par(oldpar) to reset graphic parameter\nfor model selection\nstepAIC(fullModel) - perform stepwise AIC model selection; apply to full model object, MASS package\ndredge(fullModel) - perform global model selection, MuMIn package\nmodel.avg() - perform model averaging\nAIC(fit) - get AIC for a fitted model\nanova(fit1, fit2) - compare two fitted models via Likelihood Ratio Test (LRT)\n\n\n5.5.1 Analyzing the mtcars dataset\nImagine a start up company wants to rebuild a car with a nice retro look from the 70ies. The car should be modern though, meaning the fuel consumption should be as low as possible. They’ve discovered the mtcars dataset with all the necessary measurements and they’ve somehow heard about you and your R skills and asked you for help. And of course you promised to help, kind as you are.\nThe company wants you to find out which of the following characteristics affects the fuel consumption measured in miles per gallon (mpg). Lower values for mpg thus reflect a higher fuel consumption. The company wants you to include the following variables into your analysis:\n\nnumber of cylinders (cyl)\nweight (wt)\nhorsepower (hp)\nwhether the car is driven manually or with automatic (am)\n\nIn addition, Pawl, one of the founders of the company suggested that the effect of weight (wt) might be irrelevant for powerful cars (high hp values). You are thus asked to test for this interaction in your analysis as well.\n\n\n\n\n\n\nQuestion\n\n\n\nCarry out the following tasks:\n\nPerform a multiple linear regression (change class for cyl and am to factor)\nCheck the model residuals\nInterpret and plot all effects\n\nYou may need the following functions:\n\nas.factor()\nlm()\nsummary()\nanova()\nplot()\nallEffects()\n\nUse your results to answer the questions on elearning-extern.\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThis is the code that you need to interpret the results.\n\n# change am and cyl from numeric to factor\nmtcars$am <- as.factor(mtcars$am)\nmtcars$cyl <- as.factor(mtcars$cyl)\n\n# multiple linear regression and results:\ncarsfit <- lm(mpg ~ wt + hp + am + cyl + wt:hp, dat = mtcars) \n#weight is included as the first predictor in order to have \n#it as the grouping factor in the allEffects plot \nsummary(carsfit)\n## \n## Call:\n## lm(formula = mpg ~ wt + hp + am + cyl + wt:hp, data = mtcars)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -3.4121 -1.6789 -0.4446  1.3752  4.4338 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 46.80077    6.36663   7.351 1.06e-07 ***\n## wt          -7.12241    2.23721  -3.184  0.00387 ** \n## hp          -0.10209    0.03395  -3.007  0.00594 ** \n## am1          0.18975    1.49087   0.127  0.89974    \n## cyl6        -1.28179    1.52905  -0.838  0.40981    \n## cyl8        -1.39420    2.15630  -0.647  0.52380    \n## wt:hp        0.02330    0.01047   2.224  0.03538 *  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 2.246 on 25 degrees of freedom\n## Multiple R-squared:  0.888,  Adjusted R-squared:  0.8612 \n## F-statistic: 33.05 on 6 and 25 DF,  p-value: 1.021e-10\nanova(carsfit)\n## Analysis of Variance Table\n## \n## Response: mpg\n##           Df Sum Sq Mean Sq  F value    Pr(>F)    \n## wt         1 847.73  847.73 168.1015 1.344e-12 ***\n## hp         1  83.27   83.27  16.5130 0.0004207 ***\n## am         1  14.76   14.76   2.9262 0.0995352 .  \n## cyl        2  29.27   14.63   2.9016 0.0735853 .  \n## wt:hp      1  24.95   24.95   4.9480 0.0353827 *  \n## Residuals 25 126.07    5.04                       \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# check residuals\nold.par = par(mfrow = c(2, 2))\nplot(carsfit)\n\n\n\npar(old.par)\n\n#plot effects\nplot(allEffects(carsfit))\n\n\n\n\n\n\n\n\n\n5.5.2 Model-selection with the Cement dataset\nThe process of cement hardening involves exogenous chemical reactions and thus produces heat. The amount of heat produced by the cement depends on the mixture of its constituents. The Cement dataset includes heat measurements for different types of cement that consist of different relative amounts calcium aluminate (X1), tricalcium silicate (X2), tetracalcium alumino ferrite (X3) and dicalcium silicate (X4). A cement producing company wants to optimize the composition of its product and wants to know, which of these compounds are mainly responsible for heat production.\n\n\n\n\n\n\nWarning\n\n\n\nWe only do here a model selection because of educational reasons. For your analysis, and if your goal is not a predictive model, think about the model structure before you do the analysis and then stick to it! See here the section about p-hacking (and also consider that AIC selection will/can remove confounders which will violate causality and can lead to spurious correlations!\n\n\n\n\n\n\n\n\nQuestions\n\n\n\nCarry out the following tasks:\n\nPerform a multiple linear regression including all predictor variables and all two-way interactions (remember the notation (var1 + var2 + var3)^2.\nPerform backward, forward and global model selection and compare the results\nFit the model considered optimal by global model selection and compare it with the full model based on AIC (or AICc) and LRT.\n\nYou may need the following functions:\n\nlm()\nsummary()\nstepAIC()\noptions()\ndredge()\nAIC() or AICc() (for small datasets)\nanova()\n\nUse your results to answer the questions on elearning-extern (“03_Test for Exercise in R - multiple regression”).\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThis is the code that you need to obtain the results.\n\nlibrary(MuMIn)\n# full model \nfull = lm(y ~ (X1 + X2 + X3 + X4)^2, data = Cement)\nsummary(full)\n\n# backward model selection\nred1 = stepAIC(full, direction = \"backward\")\nsummary(red1)\n\n# forward model selection\nred2 = stepAIC(full, direction = \"forward\")\nsummary(red2)\n\n# global model selection\noptions(na.action = \"na.fail\")\ndd = dredge(full)\nhead(dd)\n\nopt = lm(y ~ X1 + X2, data = Cement)\nsummary(opt)\n\nAIC(opt)\nAIC(full) # full model is better\nanova(opt, full) # no difference between the models\n\n# sample size in the Cement dataset:\nstr(Cement) #or\nnrow(Cement)\n\n# If the sample size is low, a corrected version of the AIC is recommended to avoid overfitting:\nAICc(opt)\nAICc(full) # This is inf! opt model is better"
  },
  {
    "objectID": "6-GLM.html#classroom-demo",
    "href": "6-GLM.html#classroom-demo",
    "title": "\n6  Generalized linear models\n",
    "section": "\n6.1 Classroom demo",
    "text": "6.1 Classroom demo\n\n# options(na.action = \"na.omit\") # reset conditions after model selection\nlibrary(EcoData)\nlibrary(effects)\n\nLoading required package: carData\n\n\nlattice theme set by effectsTheme()\nSee ?effectsTheme for details.\n\nlibrary(DHARMa)\n\nThis is DHARMa 0.4.6. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\n\n# Logistic ----------------------------------------------------------------\n\n\n# save pclass as.factor\nstr(titanic) #from EcoData package\n\n'data.frame':   1309 obs. of  14 variables:\n $ pclass   : int  1 1 1 1 1 1 1 1 1 1 ...\n $ survived : int  1 1 0 0 0 1 1 0 1 0 ...\n $ name     : chr  \"Allen, Miss. Elisabeth Walton\" \"Allison, Master. Hudson Trevor\" \"Allison, Miss. Helen Loraine\" \"Allison, Mr. Hudson Joshua Creighton\" ...\n $ sex      : chr  \"female\" \"male\" \"female\" \"male\" ...\n $ age      : num  29 0.917 2 30 25 ...\n $ sibsp    : int  0 1 1 1 1 0 1 0 2 0 ...\n $ parch    : int  0 2 2 2 2 0 0 0 0 0 ...\n $ ticket   : chr  \"24160\" \"113781\" \"113781\" \"113781\" ...\n $ fare     : num  211 152 152 152 152 ...\n $ cabin    : chr  \"B5\" \"C22 C26\" \"C22 C26\" \"C22 C26\" ...\n $ embarked : chr  \"S\" \"S\" \"S\" \"S\" ...\n $ boat     : chr  \"2\" \"11\" \"\" \"\" ...\n $ body     : int  NA NA NA 135 NA NA NA NA NA 22 ...\n $ home.dest: chr  \"St Louis, MO\" \"Montreal, PQ / Chesterville, ON\" \"Montreal, PQ / Chesterville, ON\" \"Montreal, PQ / Chesterville, ON\" ...\n\ntitanic$Fpclass = as.factor(titanic$pclass)\n\n\n# another way of getting a mosaic plot (no table required)\nmosaicplot(  ~  survived + sex + pclass, data = titanic)\n\n\n\n# lm will not give you an error, but residuals are clearly not normal\nfit <- lm(survived ~ age, data = titanic)\nsummary(fit)\n\n\nCall:\nlm(formula = survived ~ age, data = titanic)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.4642 -0.4156 -0.3796  0.5806  0.6867 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.464814   0.034973  13.291   <2e-16 ***\nage         -0.001894   0.001054  -1.796   0.0727 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4912 on 1044 degrees of freedom\n  (263 observations deleted due to missingness)\nMultiple R-squared:  0.003082,  Adjusted R-squared:  0.002127 \nF-statistic: 3.227 on 1 and 1044 DF,  p-value: 0.07271\n\npar(mfrow = c(2,2))\nplot(fit)\n\n\n\n# logistic regression with categorial predictor\nm1 = glm(survived ~ sex, data = titanic, family = \"binomial\")\nsummary(m1)\n\n\nCall:\nglm(formula = survived ~ sex, family = \"binomial\", data = titanic)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.6124  -0.6511  -0.6511   0.7977   1.8196  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   0.9818     0.1040   9.437   <2e-16 ***\nsexmale      -2.4254     0.1360 -17.832   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1741.0  on 1308  degrees of freedom\nResidual deviance: 1368.1  on 1307  degrees of freedom\nAIC: 1372.1\n\nNumber of Fisher Scoring iterations: 4\n\n# 2 groups: sexmale = difference of mean for male from mean for female\n# intercept = linear term for female: \n0.98 \n\n[1] 0.98\n\n#but: this has to be transformed back to original scale before being interpreted!!!\n# survival probability for females\nplogis(0.98)\n\n[1] 0.7271082\n\n# applies inverse logit function\n\n\n# linear term for male\n0.98 - 2.43\n\n[1] -1.45\n\n# survival probability\nplogis(0.98 - 2.43)\n\n[1] 0.1900016\n\n# predicted linear term\ntable(predict(m1))\n\n\n-1.44362529285895 0.981813020919237 \n              843               466 \n\n# predicted response\ntable(predict(m1, type = \"response\"))\n\n\n0.190984578884942 0.727467811158278 \n              843               466 \n\nplot(allEffects(m1))\n\n\n\n# more predictors\nm2 = glm(survived ~ sex + age, titanic, family = binomial)\nsummary(m2)\n\n\nCall:\nglm(formula = survived ~ sex + age, family = binomial, data = titanic)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.7247  -0.6859  -0.6603   0.7555   1.8737  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  1.235414   0.192032   6.433 1.25e-10 ***\nsexmale     -2.460689   0.152315 -16.155  < 2e-16 ***\nage         -0.004254   0.005207  -0.817    0.414    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1414.6  on 1045  degrees of freedom\nResidual deviance: 1101.3  on 1043  degrees of freedom\n  (263 observations deleted due to missingness)\nAIC: 1107.3\n\nNumber of Fisher Scoring iterations: 4\n\n# Calculate Pseudo R2: 1 - Residual deviance / Null deviance\n1 - 1101.3/1414.6 # Pseudo R2 of model\n\n[1] 0.221476\n\n# Anova\nanova(m2, test = \"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: survived\n\nTerms added sequentially (first to last)\n\n     Df Deviance Resid. Df Resid. Dev Pr(>Chi)    \nNULL                  1045     1414.6             \nsex   1  312.612      1044     1102.0   <2e-16 ***\nage   1    0.669      1043     1101.3   0.4133    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nplot(allEffects(m2))\n\n\n\n# Model diagnostics\n# do not use the plot(model) residual checks\n# use DHARMa package\nlibrary(DHARMa)\nres = simulateResiduals(m2)\nplot(res)\n\n\n\n# Poisson -----------------------------------------------------------------\n\nhead(birdfeeding)\n\n  feeding attractiveness\n1       3              1\n2       6              1\n3       8              1\n4       4              1\n5       2              1\n6       7              2\n\nplot(feeding ~ attractiveness, birdfeeding)\n\nfit = glm(feeding ~ attractiveness, birdfeeding, family = \"poisson\")\nsummary(fit)\n\n\nCall:\nglm(formula = feeding ~ attractiveness, family = \"poisson\", data = birdfeeding)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.55377  -0.72834   0.03699   0.59093   1.54584  \n\nCoefficients:\n               Estimate Std. Error z value Pr(>|z|)    \n(Intercept)     1.47459    0.19443   7.584 3.34e-14 ***\nattractiveness  0.14794    0.05437   2.721  0.00651 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 25.829  on 24  degrees of freedom\nResidual deviance: 18.320  on 23  degrees of freedom\nAIC: 115.42\n\nNumber of Fisher Scoring iterations: 4\n\n# feeding for a bird with attractiveness 3\n# linear term\n1.47 + 0.148 * 3\n\n[1] 1.914\n\n# pieces of food, using inverse of the link function, log --> exp\nexp(1.47 + 0.148 * 3)\n\n[1] 6.780155\n\nplot(allEffects(fit))\n\n\n\n# checking residuals\nres = simulateResiduals(fit)\nplot(res, quantreg = F)\n\n\n\n\nWarning in smooth.spline(pred, res, df = 10): not using invalid df; must have 1\n< df <= n := #{unique x} = 5\n\n\n\n\n# the warning is because of a recent change in DHARMa \n# qgam requires more data points\n\n\n\n# test for overdispersion\ntestDispersion(fit)\n\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.74488, p-value = 0.384\nalternative hypothesis: two.sided\n\n# Dispersion test is necessary for all poisson or binomial models with k/n \n# if positive, you can chose family = quasi-poisson or quasi-binomial\n# or use negative binomial distribution instead of poisson"
  },
  {
    "objectID": "6-GLM.html#exercises",
    "href": "6-GLM.html#exercises",
    "title": "\n6  Generalized linear models\n",
    "section": "\n6.2 Exercises",
    "text": "6.2 Exercises\nIn this exercise you will practice to:\n\nchoose the correct model for your data\ninterpret the model output of generalized linear models\ncheck the residuals using the DHARMa package\n\nBefore you start, remember to clean your global environment (if you haven’t already) using rm(list=ls()).\nFor your analyses, you will use the datasets nitrofen and melanoma which are both implemented in the boot package. You will also need the packages DHARMa and effects. Please install and load these packages, if you haven’t done this yet:\n\nlibrary(boot)\n\n\nAttaching package: 'boot'\n\n\nThe following objects are masked from 'package:EcoData':\n\n    melanoma, nitrofen\n\nlibrary(DHARMa)\nlibrary(effects)\n\n\n6.2.1 Analyzing the nitrofen dataset\nThe Ministry of Agriculture has appointed your university to investigate the toxicity of the herbicide nitrofen on the fertility of the waterflea species Ceriodaphnia dubia in order to asses the implications of the herbicide for ecosystems.\nIn an experiment conducted by your fellow researchers, the offspring of the waterflea species Ceriodaphnia dubia were counted as a function of different concentrations of the herbicide. Your job is to do the analysis.\n\n\n\n\n\n\nQuestion\n\n\n\nCarry out the following tasks:\n\nConvert the variable conc into a factor.\nFit a suitable model for the relationship between total amount of offspring (total) and nitrofen concentration (conc).\nTest for overdispersion.\nInterpret and plot the effect.\nTest for the overall effect of nitrofen concentration.\n\nYou may need the following functions:\n\nstr()\nas.factor()\nglm()\nsummary()\ntestDispersion()\nplot()\nallEffects()\nanova(…, test = “Chisq”)\n\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nnitrofen$conc <- as.factor(nitrofen$conc) # change variable conc to a factor\n\nfit <- glm(total ~ conc, family = \"poisson\", data=nitrofen)\nsummary(fit)\n\n\nCall:\nglm(formula = total ~ conc, family = \"poisson\", data = nitrofen)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-3.4641  -0.4339   0.0444   0.3164   3.0804  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  3.44681    0.05643  61.078  < 2e-16 ***\nconc80       0.00318    0.07974   0.040    0.968    \nconc160     -0.10395    0.08196  -1.268    0.205    \nconc235     -0.60190    0.09486  -6.345 2.22e-10 ***\nconc310     -1.65505    0.14089 -11.747  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 312.484  on 49  degrees of freedom\nResidual deviance:  50.719  on 45  degrees of freedom\nAIC: 297.81\n\nNumber of Fisher Scoring iterations: 5\n\n# test for overdispersion\ntestDispersion(fit)\n\n\n\n\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.62249, p-value = 0.048\nalternative hypothesis: two.sided\n\n# plot effect\nplot(allEffects(fit))\n\n\n\n# log link to calculate predicted values at the response scale:\n# predicted response = exp(Intercept + Estimate * predictor)\nexp(3.44681) # or\n\n[1] 31.40007\n\nexp(coef(fit)[1])\n\n(Intercept) \n       31.4 \n\n# test the overall effect of *conc* on the total number of offspring\nanova(fit, test = \"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: poisson, link: log\n\nResponse: total\n\nTerms added sequentially (first to last)\n\n     Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    \nNULL                    49    312.484              \nconc  4   261.76        45     50.719 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n6.2.2 Analyzing the melanoma dataset\nIn the following, you will investigate the melanoma dataset provided by the University Hospital of Odense, Denmark. The data are of patients with malignant melanomas. You can find a more detailed description in the help of melanoma. The question you want to investigate is whether the occurance of ulceration (ulcer, yes = 1, no = 0) is related to the thickness of the tumour (thickness in mm) and the sex of the patient (sex, male = 1, female = 0) and the interaction of the two.\n\n\n\n\n\n\nQuestion\n\n\n\nCarry out the following tasks:\n\nFit an appropriate model to answer the research question.\nCheck the model residuals.\nInterpret and plot all effects including an analysis of the deviance.\n\nYou may need the following functions:\n\nstr()\nglm()\nsummary()\nanova()\nsimulateResiduals()\nplot()\nallEffects()\n\nUse your results to answer the questions on elearning-extern.\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ndat <- melanoma\ndat$sex <- as.factor(dat$sex) # change variable sex to factor, facultative: with 0 1 not necessary\nfit <- glm(ulcer ~ thickness * sex, family = \"binomial\", data=dat)\n\n# residuals\nres <- simulateResiduals(fit, n = 500)\nplot(res)\n\n\n\n# model interpretation\nsummary(fit)\n\n\nCall:\nglm(formula = ulcer ~ thickness * sex, family = \"binomial\", data = dat)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-3.4966  -0.8155  -0.7043   1.0172   1.7767  \n\nCoefficients:\n               Estimate Std. Error z value Pr(>|z|)    \n(Intercept)    -1.40642    0.31902  -4.409 1.04e-05 ***\nthickness       0.36927    0.11368   3.248  0.00116 ** \nsex1           -0.02579    0.55535  -0.046  0.96296    \nthickness:sex1  0.14527    0.17656   0.823  0.41064    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 281.13  on 204  degrees of freedom\nResidual deviance: 234.04  on 201  degrees of freedom\nAIC: 242.04\n\nNumber of Fisher Scoring iterations: 5\n\nanova(fit, test = \"Chisq\")\n\nAnalysis of Deviance Table\n\nModel: binomial, link: logit\n\nResponse: ulcer\n\nTerms added sequentially (first to last)\n\n              Df Deviance Resid. Df Resid. Dev  Pr(>Chi)    \nNULL                            204     281.13              \nthickness      1   45.374       203     235.76 1.628e-11 ***\nsex            1    1.039       202     234.72    0.3080    \nthickness:sex  1    0.681       201     234.04    0.4094    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# Calculate Pseudo R2: 1 - Residual deviance / Null deviance\n1 - 234.04/281.13 # Pseudo R2 of model\n\n[1] 0.1675026\n\n# plot effects\nplot(allEffects(fit))\n\n\n\n\nAs the residuals look quite suspicious and all quantile regressions significantly deviate, we can try to improve the model with a quadratic term for thickness.\n\nfit <- glm(ulcer ~ thickness * sex + I(thickness^2), family = \"binomial\", data=dat)\nsummary(fit)\n\n\nCall:\nglm(formula = ulcer ~ thickness * sex + I(thickness^2), family = \"binomial\", \n    data = dat)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.2511  -0.7302  -0.5116   0.7949   2.1875  \n\nCoefficients:\n                Estimate Std. Error z value Pr(>|z|)    \n(Intercept)    -2.466019   0.411511  -5.993 2.07e-09 ***\nthickness       1.066836   0.193715   5.507 3.65e-08 ***\nsex1            0.236510   0.518545   0.456    0.648    \nI(thickness^2) -0.057746   0.012766  -4.523 6.09e-06 ***\nthickness:sex1 -0.009476   0.133618  -0.071    0.943    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 281.13  on 204  degrees of freedom\nResidual deviance: 214.05  on 200  degrees of freedom\nAIC: 224.05\n\nNumber of Fisher Scoring iterations: 4\n\nres <- simulateResiduals(fit)\nplot(res)\n\n\n\n# plot effects\nplot(allEffects(fit))\n\n\n\n\nThe quadratic term solves the problem of the residuals. The effects plots look quite different. There seems to be a maximum of ulcer around a thickness of 10 that we would have missed without the quadratic term."
  },
  {
    "objectID": "7-Multivariate.html#classroom-demo",
    "href": "7-Multivariate.html#classroom-demo",
    "title": "\n7  Multivariate Statistics\n",
    "section": "\n7.1 Classroom demo",
    "text": "7.1 Classroom demo\n\n# Part 3\n# Multivariate statistics\n\n\n\n# Method 1: unconstrained ------------------------------------------------\n\n\n\n## PCA\n# we use the same dataset of flower characteristics of three species of iris\npairs(iris, col = iris$Species)\n\n\n\nhead(iris)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n\npca = prcomp(iris[, 1:4], scale = T) # always set scale = T\n# when data is very skewed --> better transform e.g. log\n\nsummary(pca)\n\nImportance of components:\n                          PC1    PC2     PC3     PC4\nStandard deviation     1.7084 0.9560 0.38309 0.14393\nProportion of Variance 0.7296 0.2285 0.03669 0.00518\nCumulative Proportion  0.7296 0.9581 0.99482 1.00000\n\n# standard deviation^2 is variance!!!\n# cum prop of PC2 is the variance that is visualized in a biplot\n\n\n# plot the result\n# absolute variance of each component\nplot(pca) # see row1 of the summary(pca): (sd)^2 = variance\n\n\n\n# rel variance of each component\nbarplot(summary(pca)$importance[2, ], \n        ylab=\"proportion of variance explained\") # displays % of variance explained by PCs\n\n\n\n# Biplot\nbiplot(pca) # displays PC1 and PC2 AND rotation (vectors) of the different variables AND observations\n\n\n\n\n## distance-based approach: NMDS\n\nlibrary(vegan)\n\nLoading required package: permute\n\n\nLoading required package: lattice\n\n\nThis is vegan 2.6-4\n\n\n\n\n?vegan\n\n# community dataset for plants in dunes (included in vegan package):\n\ndata(\"dune\")\nstr(dune) # display structure of the dataset\n\n'data.frame':   20 obs. of  30 variables:\n $ Achimill: num  1 3 0 0 2 2 2 0 0 4 ...\n $ Agrostol: num  0 0 4 8 0 0 0 4 3 0 ...\n $ Airaprae: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Alopgeni: num  0 2 7 2 0 0 0 5 3 0 ...\n $ Anthodor: num  0 0 0 0 4 3 2 0 0 4 ...\n $ Bellpere: num  0 3 2 2 2 0 0 0 0 2 ...\n $ Bromhord: num  0 4 0 3 2 0 2 0 0 4 ...\n $ Chenalbu: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Cirsarve: num  0 0 0 2 0 0 0 0 0 0 ...\n $ Comapalu: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Eleopalu: num  0 0 0 0 0 0 0 4 0 0 ...\n $ Elymrepe: num  4 4 4 4 4 0 0 0 6 0 ...\n $ Empenigr: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Hyporadi: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Juncarti: num  0 0 0 0 0 0 0 4 4 0 ...\n $ Juncbufo: num  0 0 0 0 0 0 2 0 4 0 ...\n $ Lolipere: num  7 5 6 5 2 6 6 4 2 6 ...\n $ Planlanc: num  0 0 0 0 5 5 5 0 0 3 ...\n $ Poaprat : num  4 4 5 4 2 3 4 4 4 4 ...\n $ Poatriv : num  2 7 6 5 6 4 5 4 5 4 ...\n $ Ranuflam: num  0 0 0 0 0 0 0 2 0 0 ...\n $ Rumeacet: num  0 0 0 0 5 6 3 0 2 0 ...\n $ Sagiproc: num  0 0 0 5 0 0 0 2 2 0 ...\n $ Salirepe: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Scorautu: num  0 5 2 2 3 3 3 3 2 3 ...\n $ Trifprat: num  0 0 0 0 2 5 2 0 0 0 ...\n $ Trifrepe: num  0 5 2 1 2 5 2 2 3 6 ...\n $ Vicilath: num  0 0 0 0 0 0 0 0 0 1 ...\n $ Bracruta: num  0 0 2 2 2 6 2 2 2 2 ...\n $ Callcusp: num  0 0 0 0 0 0 0 0 0 0 ...\n\n?dune\nsummary(dune) # display summary of the dataset (summary statistics for each variable)\n\n    Achimill      Agrostol      Airaprae       Alopgeni       Anthodor   \n Min.   :0.0   Min.   :0.0   Min.   :0.00   Min.   :0.00   Min.   :0.00  \n 1st Qu.:0.0   1st Qu.:0.0   1st Qu.:0.00   1st Qu.:0.00   1st Qu.:0.00  \n Median :0.0   Median :1.5   Median :0.00   Median :0.00   Median :0.00  \n Mean   :0.8   Mean   :2.4   Mean   :0.25   Mean   :1.80   Mean   :1.05  \n 3rd Qu.:2.0   3rd Qu.:4.0   3rd Qu.:0.00   3rd Qu.:3.25   3rd Qu.:2.25  \n Max.   :4.0   Max.   :8.0   Max.   :3.00   Max.   :8.00   Max.   :4.00  \n    Bellpere       Bromhord       Chenalbu       Cirsarve      Comapalu  \n Min.   :0.00   Min.   :0.00   Min.   :0.00   Min.   :0.0   Min.   :0.0  \n 1st Qu.:0.00   1st Qu.:0.00   1st Qu.:0.00   1st Qu.:0.0   1st Qu.:0.0  \n Median :0.00   Median :0.00   Median :0.00   Median :0.0   Median :0.0  \n Mean   :0.65   Mean   :0.75   Mean   :0.05   Mean   :0.1   Mean   :0.2  \n 3rd Qu.:2.00   3rd Qu.:0.50   3rd Qu.:0.00   3rd Qu.:0.0   3rd Qu.:0.0  \n Max.   :3.00   Max.   :4.00   Max.   :1.00   Max.   :2.0   Max.   :2.0  \n    Eleopalu       Elymrepe      Empenigr      Hyporadi       Juncarti   \n Min.   :0.00   Min.   :0.0   Min.   :0.0   Min.   :0.00   Min.   :0.00  \n 1st Qu.:0.00   1st Qu.:0.0   1st Qu.:0.0   1st Qu.:0.00   1st Qu.:0.00  \n Median :0.00   Median :0.0   Median :0.0   Median :0.00   Median :0.00  \n Mean   :1.25   Mean   :1.3   Mean   :0.1   Mean   :0.45   Mean   :0.90  \n 3rd Qu.:1.00   3rd Qu.:4.0   3rd Qu.:0.0   3rd Qu.:0.00   3rd Qu.:0.75  \n Max.   :8.00   Max.   :6.0   Max.   :2.0   Max.   :5.00   Max.   :4.00  \n    Juncbufo       Lolipere      Planlanc      Poaprat       Poatriv    \n Min.   :0.00   Min.   :0.0   Min.   :0.0   Min.   :0.0   Min.   :0.00  \n 1st Qu.:0.00   1st Qu.:0.0   1st Qu.:0.0   1st Qu.:0.0   1st Qu.:0.00  \n Median :0.00   Median :2.0   Median :0.0   Median :3.0   Median :4.00  \n Mean   :0.65   Mean   :2.9   Mean   :1.3   Mean   :2.4   Mean   :3.15  \n 3rd Qu.:0.00   3rd Qu.:6.0   3rd Qu.:3.0   3rd Qu.:4.0   3rd Qu.:5.00  \n Max.   :4.00   Max.   :7.0   Max.   :5.0   Max.   :5.0   Max.   :9.00  \n    Ranuflam      Rumeacet      Sagiproc    Salirepe       Scorautu  \n Min.   :0.0   Min.   :0.0   Min.   :0   Min.   :0.00   Min.   :0.0  \n 1st Qu.:0.0   1st Qu.:0.0   1st Qu.:0   1st Qu.:0.00   1st Qu.:2.0  \n Median :0.0   Median :0.0   Median :0   Median :0.00   Median :2.0  \n Mean   :0.7   Mean   :0.9   Mean   :1   Mean   :0.55   Mean   :2.7  \n 3rd Qu.:2.0   3rd Qu.:0.5   3rd Qu.:2   3rd Qu.:0.00   3rd Qu.:3.0  \n Max.   :4.0   Max.   :6.0   Max.   :5   Max.   :5.00   Max.   :6.0  \n    Trifprat       Trifrepe       Vicilath      Bracruta       Callcusp  \n Min.   :0.00   Min.   :0.00   Min.   :0.0   Min.   :0.00   Min.   :0.0  \n 1st Qu.:0.00   1st Qu.:1.00   1st Qu.:0.0   1st Qu.:1.50   1st Qu.:0.0  \n Median :0.00   Median :2.00   Median :0.0   Median :2.00   Median :0.0  \n Mean   :0.45   Mean   :2.35   Mean   :0.2   Mean   :2.45   Mean   :0.5  \n 3rd Qu.:0.00   3rd Qu.:3.00   3rd Qu.:0.0   3rd Qu.:4.00   3rd Qu.:0.0  \n Max.   :5.00   Max.   :6.00   Max.   :2.0   Max.   :6.00   Max.   :4.0  \n\nNMDS = metaMDS(dune)\n\nRun 0 stress 0.1192678 \nRun 1 stress 0.1886532 \nRun 2 stress 0.1192678 \n... Procrustes: rmse 1.258026e-05  max resid 3.164268e-05 \n... Similar to previous best\nRun 3 stress 0.1183186 \n... New best solution\n... Procrustes: rmse 0.02027014  max resid 0.06496123 \nRun 4 stress 0.1183186 \n... Procrustes: rmse 4.230386e-06  max resid 1.475206e-05 \n... Similar to previous best\nRun 5 stress 0.1192678 \nRun 6 stress 0.1809578 \nRun 7 stress 0.1889638 \nRun 8 stress 0.1808911 \nRun 9 stress 0.3680059 \nRun 10 stress 0.1183186 \n... Procrustes: rmse 1.16265e-05  max resid 3.451986e-05 \n... Similar to previous best\nRun 11 stress 0.1183186 \n... Procrustes: rmse 4.643335e-06  max resid 1.388314e-05 \n... Similar to previous best\nRun 12 stress 0.2361935 \nRun 13 stress 0.1192679 \nRun 14 stress 0.1192679 \nRun 15 stress 0.1183186 \n... Procrustes: rmse 1.447333e-05  max resid 4.510486e-05 \n... Similar to previous best\nRun 16 stress 0.1192679 \nRun 17 stress 0.1192678 \nRun 18 stress 0.1192679 \nRun 19 stress 0.1808911 \nRun 20 stress 0.1808911 \n*** Best solution repeated 4 times\n\n# algorithm is iterative\n\nNMDS # gives information on NMDS: distance measure, stress (should be low)\n\n\nCall:\nmetaMDS(comm = dune) \n\nglobal Multidimensional Scaling using monoMDS\n\nData:     dune \nDistance: bray \n\nDimensions: 2 \nStress:     0.1183186 \nStress type 1, weak ties\nBest solution was repeated 4 times in 20 tries\nThe best solution was from try 3 (random start)\nScaling: centring, PC rotation, halfchange scaling \nSpecies: expanded scores based on 'dune' \n\n# stress of >= 0.2 = be suspicious, stress >=0.3 indicates that ordination is arbitrary\n# in crease Dimensions if k is too high\nordiplot(NMDS, type = \"t\") #\"t\" = text\n\n\n\n# if we have time:\n# distance measure can be changed (default is Bray-Curtis): see \n?vegdist # some recommendations there\nNMDS2 = metaMDS(dune, distance=\"euclidean\")\n\nRun 0 stress 0.1174523 \nRun 1 stress 0.1174523 \n... Procrustes: rmse 3.580249e-06  max resid 1.150625e-05 \n... Similar to previous best\nRun 2 stress 0.1174523 \n... Procrustes: rmse 2.054651e-06  max resid 3.818306e-06 \n... Similar to previous best\nRun 3 stress 0.1174523 \n... Procrustes: rmse 2.128171e-06  max resid 5.656827e-06 \n... Similar to previous best\nRun 4 stress 0.1174523 \n... Procrustes: rmse 2.022272e-06  max resid 6.26572e-06 \n... Similar to previous best\nRun 5 stress 0.1174523 \n... Procrustes: rmse 2.488733e-06  max resid 8.218602e-06 \n... Similar to previous best\nRun 6 stress 0.1177339 \n... Procrustes: rmse 0.01706434  max resid 0.05525565 \nRun 7 stress 0.1174523 \n... New best solution\n... Procrustes: rmse 1.353658e-06  max resid 2.894393e-06 \n... Similar to previous best\nRun 8 stress 0.1174523 \n... Procrustes: rmse 1.402024e-06  max resid 4.031045e-06 \n... Similar to previous best\nRun 9 stress 0.1174523 \n... Procrustes: rmse 2.805576e-06  max resid 7.787809e-06 \n... Similar to previous best\nRun 10 stress 0.1174523 \n... Procrustes: rmse 1.140971e-06  max resid 2.993735e-06 \n... Similar to previous best\nRun 11 stress 0.1177339 \n... Procrustes: rmse 0.0170643  max resid 0.05525551 \nRun 12 stress 0.1174523 \n... Procrustes: rmse 1.964847e-06  max resid 5.765074e-06 \n... Similar to previous best\nRun 13 stress 0.1174523 \n... Procrustes: rmse 1.231263e-06  max resid 2.345061e-06 \n... Similar to previous best\nRun 14 stress 0.1174523 \n... Procrustes: rmse 1.05504e-06  max resid 2.45264e-06 \n... Similar to previous best\nRun 15 stress 0.1177339 \n... Procrustes: rmse 0.01706422  max resid 0.05525614 \nRun 16 stress 0.1177339 \n... Procrustes: rmse 0.01706442  max resid 0.05525521 \nRun 17 stress 0.1177339 \n... Procrustes: rmse 0.01706456  max resid 0.05525899 \nRun 18 stress 0.1177339 \n... Procrustes: rmse 0.01706413  max resid 0.05525604 \nRun 19 stress 0.1177339 \n... Procrustes: rmse 0.01706403  max resid 0.05525579 \nRun 20 stress 0.1174523 \n... Procrustes: rmse 2.00709e-06  max resid 5.652376e-06 \n... Similar to previous best\n*** Best solution repeated 8 times\n\nNMDS2 \n\n\nCall:\nmetaMDS(comm = dune, distance = \"euclidean\") \n\nglobal Multidimensional Scaling using monoMDS\n\nData:     dune \nDistance: euclidean \n\nDimensions: 2 \nStress:     0.1174523 \nStress type 1, weak ties\nBest solution was repeated 8 times in 20 tries\nThe best solution was from try 7 (random start)\nScaling: centring, PC rotation \nSpecies: expanded scores based on 'dune' \n\nordiplot(NMDS2, type = \"t\")\n\n\n\n# Method 2: constrained  ------------------------------------------------\n\n\n# 2 multivariate datasets (abundances + environment)\n\n\n## RDA\nstr(dune) # species composition\n\n'data.frame':   20 obs. of  30 variables:\n $ Achimill: num  1 3 0 0 2 2 2 0 0 4 ...\n $ Agrostol: num  0 0 4 8 0 0 0 4 3 0 ...\n $ Airaprae: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Alopgeni: num  0 2 7 2 0 0 0 5 3 0 ...\n $ Anthodor: num  0 0 0 0 4 3 2 0 0 4 ...\n $ Bellpere: num  0 3 2 2 2 0 0 0 0 2 ...\n $ Bromhord: num  0 4 0 3 2 0 2 0 0 4 ...\n $ Chenalbu: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Cirsarve: num  0 0 0 2 0 0 0 0 0 0 ...\n $ Comapalu: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Eleopalu: num  0 0 0 0 0 0 0 4 0 0 ...\n $ Elymrepe: num  4 4 4 4 4 0 0 0 6 0 ...\n $ Empenigr: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Hyporadi: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Juncarti: num  0 0 0 0 0 0 0 4 4 0 ...\n $ Juncbufo: num  0 0 0 0 0 0 2 0 4 0 ...\n $ Lolipere: num  7 5 6 5 2 6 6 4 2 6 ...\n $ Planlanc: num  0 0 0 0 5 5 5 0 0 3 ...\n $ Poaprat : num  4 4 5 4 2 3 4 4 4 4 ...\n $ Poatriv : num  2 7 6 5 6 4 5 4 5 4 ...\n $ Ranuflam: num  0 0 0 0 0 0 0 2 0 0 ...\n $ Rumeacet: num  0 0 0 0 5 6 3 0 2 0 ...\n $ Sagiproc: num  0 0 0 5 0 0 0 2 2 0 ...\n $ Salirepe: num  0 0 0 0 0 0 0 0 0 0 ...\n $ Scorautu: num  0 5 2 2 3 3 3 3 2 3 ...\n $ Trifprat: num  0 0 0 0 2 5 2 0 0 0 ...\n $ Trifrepe: num  0 5 2 1 2 5 2 2 3 6 ...\n $ Vicilath: num  0 0 0 0 0 0 0 0 0 1 ...\n $ Bracruta: num  0 0 2 2 2 6 2 2 2 2 ...\n $ Callcusp: num  0 0 0 0 0 0 0 0 0 0 ...\n\ndata(\"dune.env\")\nstr(dune.env) # environmental variables\n\n'data.frame':   20 obs. of  5 variables:\n $ A1        : num  2.8 3.5 4.3 4.2 6.3 4.3 2.8 4.2 3.7 3.3 ...\n $ Moisture  : Ord.factor w/ 4 levels \"1\"<\"2\"<\"4\"<\"5\": 1 1 2 2 1 1 1 4 3 2 ...\n $ Management: Factor w/ 4 levels \"BF\",\"HF\",\"NM\",..: 4 1 4 4 2 2 2 2 2 1 ...\n $ Use       : Ord.factor w/ 3 levels \"Hayfield\"<\"Haypastu\"<..: 2 2 2 2 1 2 3 3 1 1 ...\n $ Manure    : Ord.factor w/ 5 levels \"0\"<\"1\"<\"2\"<\"3\"<..: 5 3 5 5 3 3 4 4 2 2 ...\n\nRDA = rda(dune ~ as.numeric(Manure) + as.numeric(Moisture), \n         data = dune.env)\nplot(RDA)\n\n\n\nsummary(RDA)\n\n\nCall:\nrda(formula = dune ~ as.numeric(Manure) + as.numeric(Moisture),      data = dune.env) \n\nPartitioning of variance:\n              Inertia Proportion\nTotal           84.12     1.0000\nConstrained     31.20     0.3709\nUnconstrained   52.92     0.6291\n\nEigenvalues, and their contribution to the variance \n\nImportance of components:\n                         RDA1    RDA2     PC1     PC2     PC3    PC4     PC5\nEigenvalue            19.0185 12.1864 10.7889 7.85393 6.67657 6.2084 5.12380\nProportion Explained   0.2261  0.1449  0.1283 0.09336 0.07937 0.0738 0.06091\nCumulative Proportion  0.2261  0.3709  0.4992 0.59255 0.67192 0.7457 0.80663\n                          PC6     PC7     PC8     PC9    PC10    PC11    PC12\nEigenvalue            3.50320 3.10988 2.47760 1.83130 1.63276 1.03305 0.87265\nProportion Explained  0.04164 0.03697 0.02945 0.02177 0.01941 0.01228 0.01037\nCumulative Proportion 0.84827 0.88524 0.91469 0.93646 0.95587 0.96815 0.97852\n                          PC13     PC14     PC15     PC16     PC17\nEigenvalue            0.642862 0.469072 0.301387 0.215853 0.177610\nProportion Explained  0.007642 0.005576 0.003583 0.002566 0.002111\nCumulative Proportion 0.986164 0.991740 0.995323 0.997889 1.000000\n\nAccumulated constrained eigenvalues\nImportance of components:\n                         RDA1    RDA2\nEigenvalue            19.0185 12.1864\nProportion Explained   0.6095  0.3905\nCumulative Proportion  0.6095  1.0000\n\nScaling 2 for species and site scores\n* Species are scaled proportional to eigenvalues\n* Sites are unscaled: weighted dispersion equal on all dimensions\n* General scaling constant of scores:  6.322924 \n\n\nSpecies scores\n\n             RDA1     RDA2       PC1        PC2        PC3      PC4\nAchimill -0.47851  0.09403 -0.235988 -0.3197353  0.3103983 -0.28427\nAgrostol  1.23296 -0.81601  0.315190  0.4660974 -0.5315336 -0.32248\nAiraprae  0.09460  0.19968 -0.076754 -0.0507504  0.2022189  0.36738\nAlopgeni  0.62089 -1.06991 -0.607808  0.4085202 -0.7675817  0.14890\nAnthodor -0.30489  0.37796 -0.285364 -0.7314654  0.3530155  0.28189\nBellpere -0.35166 -0.06186 -0.191560  0.2159228  0.0656089 -0.21926\nBromhord -0.40174 -0.11438 -0.328850  0.0020272  0.3311781 -0.38313\nChenalbu  0.04451 -0.03993 -0.058797 -0.0133695 -0.0062794  0.01141\nCirsarve -0.02004 -0.10831  0.015724  0.0909001  0.0063718  0.02241\nComapalu  0.16471  0.14225  0.075038  0.0042984  0.0452944 -0.15780\nEleopalu  1.06943 -0.01682  0.956570 -0.1633735 -0.0681172 -0.57630\nElymrepe -0.46520 -0.51974 -0.379373  0.6613239 -0.0042671 -0.34204\nEmpenigr  0.08235  0.07112 -0.057452 -0.0408164  0.1097807  0.19686\nHyporadi  0.09461  0.32440 -0.082603 -0.0367101  0.3251675  0.62435\nJuncarti  0.65768  0.03291  0.308049  0.1056579 -0.2072807 -0.34406\nJuncbufo  0.17582 -0.14056 -0.532656  0.0587424 -0.4920012  0.08088\nLolipere -1.37550 -0.76492  0.066647  0.0244836  0.5992907 -0.19415\nPlanlanc -0.91473  0.29200  0.034350 -0.8292224 -0.1507798 -0.02191\nPoaprat  -0.79237 -0.54275 -0.258875  0.2664459  0.2614175 -0.18998\nPoatriv  -0.31279 -1.25438 -1.230700 -0.1907205 -0.2493570 -0.49014\nRanuflam  0.59648  0.04493  0.299763 -0.0445985 -0.0309806 -0.25792\nRumeacet -0.49744 -0.03945 -0.219023 -0.8330211 -0.5462675 -0.10570\nSagiproc  0.26038 -0.27567 -0.367494  0.2918690 -0.1864142  0.53458\nSalirepe  0.20256  0.44038  0.242168  0.1056696 -0.0521776  0.24572\nScorautu -0.30711  0.52183 -0.365094 -0.0004242  0.1648603  0.30468\nTrifprat -0.35833 -0.03560  0.006885 -0.6508879 -0.2073384 -0.06693\nTrifrepe -0.23813  0.30248 -0.700492 -0.2593107  0.1604908 -0.54832\nVicilath -0.13798  0.12689  0.043562  0.0653852  0.0278102  0.03656\nBracruta -0.07231  0.35720  0.477998 -0.2964003 -0.7549203  0.23978\nCallcusp  0.42177  0.12915  0.374847 -0.0305725  0.0002153 -0.33309\n\n\nSite scores (weighted sums of species scores)\n\n       RDA1     RDA2     PC1       PC2     PC3     PC4\n1  -1.20433 -0.66993  1.9859  1.074660  2.0108  0.8005\n2  -1.63761 -1.22512 -1.8071  1.724159  1.1211 -2.1875\n3  -0.41325 -2.98426 -0.3938  1.380869 -0.1922  0.1239\n4   0.09600 -2.56866  0.3143  1.817064  0.1274  0.4481\n5  -1.79219  0.23179 -0.7176 -1.888869 -0.8907 -0.7317\n6  -2.29807  0.77565  0.2429 -3.590960 -1.4197 -0.2869\n7  -2.04152 -0.05247  0.2480 -2.144774  0.2954  0.1111\n8   1.11426 -1.42188  0.1640 -0.499303  0.9258 -0.0638\n9   0.17152 -1.55487 -2.1156  1.667963 -1.4793 -1.2478\n10 -2.05972  0.47751 -1.4807 -1.049874  2.3911 -1.6675\n11 -1.41282  1.17178  1.0315  1.096567  0.2632  1.2017\n12  1.40040 -1.21998 -1.5692  0.392422 -3.3976  1.6584\n13  1.21063 -2.23426 -2.3507 -0.534503 -0.2510  0.4563\n14  1.68764  1.47758  0.1848 -0.008859  1.1639 -2.1575\n15  1.93732  1.38809  1.3152  0.094782 -0.2584 -0.9969\n16  3.10493 -0.43010  2.8191 -0.847596 -0.8985 -0.7305\n17 -0.01732  2.06719  0.1884  0.209376  0.7506  1.4412\n18 -0.62775  2.16502  1.1592  1.470799 -1.8057  0.7257\n19  0.37978  2.98990 -1.1484 -0.815907  2.1945  3.9351\n20  2.40211  1.61704  1.9299  0.451985 -0.6505 -0.8317\n\n\nSite constraints (linear combinations of constraining variables)\n\n      RDA1    RDA2     PC1       PC2     PC3     PC4\n1  -1.5128 -1.9466  1.9859  1.074660  2.0108  0.8005\n2  -1.6016  0.0654 -1.8071  1.724159  1.1211 -2.1875\n3  -0.4006 -2.1652 -0.3938  1.380869 -0.1922  0.1239\n4  -0.4006 -2.1652  0.3143  1.817064  0.1274  0.4481\n5  -1.6016  0.0654 -0.7176 -1.888869 -0.8907 -0.7317\n6  -1.6016  0.0654  0.2429 -3.590960 -1.4197 -0.2869\n7  -1.5572 -0.9406  0.2480 -2.144774  0.2954  0.1111\n8   1.7795 -1.5963  0.1640 -0.499303  0.9258 -0.0638\n9   0.5784  0.6343 -2.1156  1.667963 -1.4793 -1.2478\n10 -0.5338  0.8529 -1.4807 -1.049874  2.3911 -1.6675\n11 -1.6461  1.0714  1.0315  1.096567  0.2632  1.2017\n12  0.6228 -0.3717 -1.5692  0.392422 -3.3976  1.6584\n13  1.7795 -1.5963 -2.3507 -0.534503 -0.2510  0.4563\n14  1.6462  1.4218  0.1848 -0.008859  1.1639 -2.1575\n15  1.6462  1.4218  1.3152  0.094782 -0.2584 -0.9969\n16  1.7795 -1.5963  2.8191 -0.847596 -0.8985 -0.7305\n17 -0.5783  1.8589  0.1884  0.209376  0.7506  1.4412\n18 -1.6905  2.0774  1.1592  1.470799 -1.8057  0.7257\n19  1.6462  1.4218 -1.1484 -0.815907  2.1945  3.9351\n20  1.6462  1.4218  1.9299  0.451985 -0.6505 -0.8317\n\n\nBiplot scores for constraining variables\n\n                        RDA1     RDA2 PC1 PC2 PC3 PC4\nas.numeric(Manure)   -0.1928 -0.98124   0   0   0   0\nas.numeric(Moisture)  0.9990  0.04412   0   0   0   0\n\n# important part at the top\n# variance explained by the two variables = prop constrained = 37.09%\n# how much is explained by each RDA = see importance of components prop explained\n# PCs are the unconstrained axes\n\n# species scores = coordinates of species in the plot\n# site scores = coordinates of sites in the plot\n# biplot scores = coordinates of environmental variable vectors\n\n\nbarplot(summary(RDA)$cont$importance[2, ],  las = 2,\n        col = c(rep ('red', 2), \n                rep ('black', length(summary(RDA)$cont$importance[2, ])-2)),\n        ylab=\"proportion of variance explained\") # displays % of variance explained by PCs\n\n\n\n# Method 3: Clustering ---------------------------------------------------\n\n# hierarchical clustering: \n\nlibrary(cluster) # clustering\nlibrary(ape) # phylogenetic analyses, here to get pretty dendrogram\n\n# example for distance matrix\ndist(iris[1:3, 1:4]) # creates a distance matrix (comparison of all possible sample pairs), \n\n          1         2\n2 0.5385165          \n3 0.5099020 0.3000000\n\n# default method =\"euclidean\", but can be changed\n\n# get Hierarchical Clustering\nhc = hclust(dist(iris[, 1:4]))\nplot(hc)\n\n\n\n# for colors use package ape\nplot(as.phylo(hc), tip.color = as.numeric(iris$Species)) # as.phylo converts object type \"hcclust\" into object type \"phylo\"\n\n\n\n# change plotting type:\nplot(as.phylo(hc), tip.color = as.numeric(iris$Species), type = \"fan\")\n\n\n\n# lets try another clustering algorithm\ndata(animals)\nstr(animals)\n\n'data.frame':   20 obs. of  6 variables:\n $ war: int  1 1 2 1 2 2 2 2 2 1 ...\n $ fly: int  1 2 1 1 1 1 2 2 1 2 ...\n $ ver: int  1 1 2 1 2 2 2 2 2 1 ...\n $ end: int  1 1 1 1 2 1 1 2 2 1 ...\n $ gro: int  2 2 1 1 2 2 2 1 2 1 ...\n $ hai: int  1 2 2 2 2 2 1 1 1 1 ...\n\n# Agglomerative Nesting \naa <- agnes(animals)\nplot(aa, which.plots = 2) #which.plots: plots only plot 2\n\n\n\n# first is banner plot...\n\n\n\n### non-hierarchical\n# kmeans \n\nset.seed(123) # choice of first k centers is random and depends on (random) seed\ncl = kmeans(iris[, 1:4], centers = 3) # centers = number of clusters to be generated\n\ncl$cluster\n\n  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n [75] 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 3 3 3 3 2 3 3 3 3\n[112] 3 3 2 2 3 3 3 3 2 3 2 3 2 3 3 2 2 3 3 3 3 3 2 3 3 3 3 2 3 3 3 2 3 3 3 2 3\n[149] 3 2\n\nas.numeric(iris$Species)\n\n  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n [75] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3\n[112] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n[149] 3 3\n\n# without the same seed you may have to exchange cluster 2 and 3 to be able to compare assignment to species with real species in the plot\ntemp = cl$cluster\n# temp[cl$cluster==2] = 3\n# temp[cl$cluster==3] = 2\n\ntemp\n\n  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n [75] 2 2 2 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 2 3 3 3 3 2 3 3 3 3\n[112] 3 3 2 2 3 3 3 3 2 3 2 3 2 3 3 2 2 3 3 3 3 3 2 3 3 3 3 2 3 3 3 2 3 3 3 2 3\n[149] 3 2\n\nas.numeric(iris$Species)\n\n  [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n [75] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3\n[112] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n[149] 3 3\n\n# original species\npairs(iris[, 1:4], col = as.numeric(iris$Species)) \n\n\n\n# species found by cluster\npairs(iris[, 1:4], col = temp)\n\n\n\n# display samples that have been assigned to the wrong species\nsame = as.numeric(iris$Species) == temp\npairs(iris[, 1:4], col = as.numeric(same) + 1) \n\n\n\npalette()\n\n[1] \"black\"   \"#DF536B\" \"#61D04F\" \"#2297E6\" \"#28E2E5\" \"#CD0BBC\" \"#F5C710\"\n[8] \"gray62\" \n\n# HERE EXERCISE WITH BREAKOUT SESSION\n\n\n\n\n# Attention ---------------------------------------------------------------\n\n\n\n##### type (or copy) the following while students work on their exercise\n# Why we should be careful when interpreting patterns in ordination plots\n\nset.seed(123)\n\nrandom = data.frame(pollution = rnorm(30),\n                    temperature = rnorm(30),\n                    moisture = rnorm(30),\n                    tourists = rnorm(30),\n                    wind = rnorm(30),\n                    dogs = rnorm(30))\nhead(random)\n\n    pollution temperature   moisture   tourists       wind       dogs\n1 -0.56047565   0.4264642  0.3796395  0.9935039  0.1176466  0.7877388\n2 -0.23017749  -0.2950715 -0.5023235  0.5483970 -0.9474746  0.7690422\n3  1.55870831   0.8951257 -0.3332074  0.2387317 -0.4905574  0.3322026\n4  0.07050839   0.8781335 -1.0185754 -0.6279061 -0.2560922 -1.0083766\n5  0.12928774   0.8215811 -1.0717912  1.3606524  1.8438620 -0.1194526\n6  1.71506499   0.6886403  0.3035286 -0.6002596 -0.6519499 -0.2803953\n\npca = prcomp(random, scale = T)\nbiplot(pca)"
  },
  {
    "objectID": "7-Multivariate.html#exercises",
    "href": "7-Multivariate.html#exercises",
    "title": "\n7  Multivariate Statistics\n",
    "section": "\n7.2 Exercises",
    "text": "7.2 Exercises\n\n\n\nIn this exercise you will practice analyzing multivariate datasets using:\n\nordination methods which explore higher-order correlations among variables and similarities between observations\nclustering methods which aggregate individual observations into clusters.\n\n\n7.2.0.1 Useful functions for multivariate data analyses\npairs() - create pairplot (plot all variables against each other)prcomp() - calculate PCAplot(pca_object) - plot variance explained by PC axesbiplot() - plot PCAmetaMDS() - calculate NMDSordiplot(nmds_object) - plot NMDSrda() - calculate RDAplot(rda_object) - plot RDAdist() - create distance matrixhclust() - perform hierarchical clustering; apply to distance matrixplot(as.phylo(hc_object)) - plot dendrogram from hclust outputagnes() - another clustering algorithmkmeans() - perform kmeans non-hierarchical clustering; access cluster assignments using kmeans_object$cluster\n\n7.2.0.2 Background on the dataset\nMarine coastal ecosystems harbor the most productive and diverse communities on Earth. However, they are extremely vulnerable to climate change and human activities (such as landclaim, pollution, recreation purposes, …) As a consequence, the performance of this ecosystem has decreased considerably. To better understand these ecosystems, the dutch governmental institute (RIKZ: Rijksinstituut voor Kust en Zee) started a research project on sandy beaches to investigate the relationship between environmental factors and how they might affect benthic fauna. (from the LMU and Zuur, Ieno, Smith (2007), Chapter 12.8-12.10 and 27)\nQuestion\nWe now want to use ordination methods to explore\n\nthe variability in environmental conditions\nthe variability in species richness\n\nWe also want to use clustering methods to define 3 environmental types and hierarchically cluster the samples with respect to their species richness.\nDataset\nRead in the dataset as follows:\n\ndat = read.table(file = \"http://evol.bio.lmu.de/_statgen/Multivariate/11SS/RIKZGroups.txt\", header = T)\nhead(dat)\n\nYou already know the functions str() and summary() to get an overview of a dataset and to see which variables the dataset contains.\n\ncolumns 2:5 is species richness within four larger faunal groups\ncolumns 7:16 are different environmental variables\n\n\nNot important for us are:\n\ncolumn 6 (week), a time stamp\n\ncolumn 17 (sorting1), variable from the observational design\n\nLet’s get into the analysis!\n\n7.2.1 Unconstrained ordination (PCA)\nCarry out the following analyses:\n\nMake two PCAs, one for the environmental and one for the species richness data (see columns above).\nName the results pca_environment and pca_species.\nCreate a biplot for each PCA.\nCreate a barplot for the variance explained by each component.\n\nFor example, the result for species richness should look like this:\n\n\n\n\n\nYou need the following functions and the package vegan:\n\nprcomp()\n\nbiplot()\n\nbarplot()\nsummary()\n\n\nlibrary(vegan)\n\nHints\n\nDon’t forget to scale the variables in the PCA.\nIn order to get the proportion of the explained variance, have a look at the summary of your analysis. str() shows you what the summary contains. You want to specifically look at the importance, here the second row contains the proportion of variance of all 4 components. So what we want to plot is: summary(pca_species)$importance[2,1:4].\nDon’t forget to give your plots a title.\n\nNow, use your results to answer the questions on elearning-extern.\n\nIn which multivariate dataset do the first and second components explain more variance?\nDescribe the following correlations:\n\nsalinity and humus\nangle1 and exposure\nCrustacea and NAP\nPolychaeta and Mollusca\n\n\nWhich environmental variables would you choose, if you have only the resource to measure three variables?\n\n7.2.2 Clustering\n\n7.2.2.1 K-means\nWe want to use clustering methods to define 3 environmental types. Use the function kmeans() with centers = 3 (number of clusters to be generated). Remember to set a seed; the choice of the first k centers is random.\n\nset.seed(123) \ncl = ####\n\nCompare the three clusters with the result of the PCA using the following code that uses another plotting framework called ggplot2:\n\nlibrary(ggfortify)\nautoplot(pca_environment, colour = cl$cluster, size = 2, loadings = TRUE, loadings.colour = 'black',\n         loadings.label = TRUE, loadings.label.size = 3, loadings.label.colour = \"black\")\n\nThe colors of the points represent the three clusters. Answer the following question on elearning-extern: How is it possible that four observations in the middle (in black if you have used the same seed) belong to a different cluster than the observations around them?\n\n7.2.2.2 Hierarchical clustering\nNow we want to hierarchically cluster the samples with respect to their species richness, as shown in the following plot:\n\n\n\n\n\nCreate the same plot using the functions:\n\n\nhclust()\n\nplot()\nas.phylo()\n\nHave a look at the help for hclust() to read what the function does and look at the examples for further help on how to use the function. Then have a look at what the function as.phylo() does.\nNow, color the labels using the variable week. You can do this using the argument “tip.color =”. Choose the correct statements about the species richness and its sampling on elearning-extern."
  },
  {
    "objectID": "8-MachineLearning.html#classroom-demo",
    "href": "8-MachineLearning.html#classroom-demo",
    "title": "\n8  Machine Learning\n",
    "section": "\n8.1 Classroom demo",
    "text": "8.1 Classroom demo\n\n# Machine Learning --------------------------------------------------------\n\nlibrary(tree)\nlibrary(randomForest)\n## randomForest 4.7-1.1\n## Type rfNews() to see new features/changes/bug fixes.\n#library(forestFloor)\n\n\n# 1. Regression with random forest:------------------------\n# We want to compare performance (%variability explained by the model) of lm \n# with performance of randomforest\n\nozone.lm <- lm(Ozone ~ ., data=airquality, na.action=na.omit)\nsummary(ozone.lm)\n## \n## Call:\n## lm(formula = Ozone ~ ., data = airquality, na.action = na.omit)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -37.014 -12.284  -3.302   8.454  95.348 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -64.11632   23.48249  -2.730  0.00742 ** \n## Solar.R       0.05027    0.02342   2.147  0.03411 *  \n## Wind         -3.31844    0.64451  -5.149 1.23e-06 ***\n## Temp          1.89579    0.27389   6.922 3.66e-10 ***\n## Month        -3.03996    1.51346  -2.009  0.04714 *  \n## Day           0.27388    0.22967   1.192  0.23576    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 20.86 on 105 degrees of freedom\n##   (42 observations deleted due to missingness)\n## Multiple R-squared:  0.6249, Adjusted R-squared:  0.6071 \n## F-statistic: 34.99 on 5 and 105 DF,  p-value: < 2.2e-16\n# lm explains about 62% of the variance in the data\n\n \n# Let's look now at how a decision tree looks like:\n\n#install.packages(\"tree\") # not available for R version 3.5.3\n#devtools::install_version('tree', version = '1.0-39')\n# we use this, because newest version of tree does not work with R version\n\nozone.tree = tree(Ozone ~ ., data=airquality[complete.cases(airquality),])\nplot(ozone.tree)\ntext(ozone.tree)\n\n\n\n# this is based on all variables and all observations\n#### explain how decision trees are produced with 2-variable-example on the blackboard:\n#### correlation of variable A with Ozone > split at a point so that variance left and right of the split is minimized, remember outcome \n#### correlate Ozone with variable B > split > minimze variance >> compare this with performance of variable A >> if A removes more variability, choose splitof A for first node\n#### then split dataset according to the split  and redo the wholethingfor the two groups that wer generated >>> leads to 1 decision tree for the dataset\n\n# plot:\n# split-points are given at nodes of the tree\n# importacne of different variables related to how often they appear at these nodes\n\n\n\n# Now, let's look at the random forest\n# Difference here: for each iteration, only a random subset \n# (about 66%) of observations) and a random subset of the variables is used\n# > we get a large number of different trees whose prediction ability is worse \n# than a tree derived from the whole data\n# > then: average over these trees (similar to model averaging)\n# >> get 1 final tree which predicts better than each single tree \n\n\nozone.rf <- randomForest(Ozone ~ ., data=airquality, mtry=3,\n                         importance=TRUE, na.action=na.omit, keep.inbag=T)\n# mtry = number of predictors used in each split\nprint(ozone.rf) # explains about 72% of the variance >> = better than lm!\n## \n## Call:\n##  randomForest(formula = Ozone ~ ., data = airquality, mtry = 3,      importance = TRUE, keep.inbag = T, na.action = na.omit) \n##                Type of random forest: regression\n##                      Number of trees: 500\n## No. of variables tried at each split: 3\n## \n##           Mean of squared residuals: 308.604\n##                     % Var explained: 71.88\n\n# random forest does not give p-values for explanatory variables, but \n# you can get the variables importance for predictions (no causal assumptions here!):\n \nimportance(ozone.rf)\n##           %IncMSE IncNodePurity\n## Solar.R  9.832887     10903.699\n## Wind    22.007222     41648.054\n## Temp    43.631946     56064.801\n## Month    2.044271      1597.533\n## Day      1.022438      6334.784\n# the same as a plot:\nvarImpPlot(ozone.rf)\n\n\n\n\n\n\n# 2. Classification with random forest:-------------------\n#Let's do a decision tree on the whole data first (all observations, all predictors):\niris.tree <- tree(Species ~ ., data=iris)\nplot(iris.tree)\ntext(iris.tree)\n\n\n\n\n# then try randomforest:\nmodel <- randomForest(Species ~ ., data=iris, importance=TRUE, ntree=500, mtry = 2, do.trace=100,  keep.inbag=T)\n## ntree      OOB      1      2      3\n##   100:   4.00%  0.00%  6.00%  6.00%\n##   200:   4.00%  0.00%  6.00%  6.00%\n##   300:   4.00%  0.00%  6.00%  6.00%\n##   400:   4.00%  0.00%  6.00%  6.00%\n##   500:   4.00%  0.00%  6.00%  6.00%\n# two random steps in RF:\n# 1. bootstrap for each tree\n# 2. mtry: random subset of predictors in each split\n\n#plot importance of predictors:\nvarImpPlot(model)\n\n\n\nimportance(model)\n##                 setosa  versicolor virginica MeanDecreaseAccuracy\n## Sepal.Length  5.648370  6.80421839  7.960420            10.692420\n## Sepal.Width   4.090753 -0.05394849  4.868079             4.709399\n## Petal.Length 23.149126 34.86959187 29.210133            35.454773\n## Petal.Width  21.444086 33.68284448 30.343499            33.669313\n##              MeanDecreaseGini\n## Sepal.Length         9.267761\n## Sepal.Width          2.080905\n## Petal.Length        44.127351\n## Petal.Width         43.836169\n#how many samples were distributed to the wrong species?\nprint(model)\n## \n## Call:\n##  randomForest(formula = Species ~ ., data = iris, importance = TRUE,      ntree = 500, mtry = 2, do.trace = 100, keep.inbag = T) \n##                Type of random forest: classification\n##                      Number of trees: 500\n## No. of variables tried at each split: 2\n## \n##         OOB estimate of  error rate: 4%\n## Confusion matrix:\n##            setosa versicolor virginica class.error\n## setosa         50          0         0        0.00\n## versicolor      0         47         3        0.06\n## virginica       0          3        47        0.06\n#> 4% average error rate"
  },
  {
    "objectID": "9-DataScienceSkills.html#exercise",
    "href": "9-DataScienceSkills.html#exercise",
    "title": "\n9  Data handling\n",
    "section": "\n9.1 Exercise",
    "text": "9.1 Exercise\nIn this exercise you will practice common steps of the data preparation procedure using a dataset that was gathered in a forest in Switzerland.\nThe main steps are as follows (to solve the tasks, please carefully read the detailed instructions and hints below):\n\nRead the provided datasets treedata.csv and species.csv to R.\nHave a look at the dataset properties.\n\nFind values that prevent a column you expect to be numeric to do so.\n\nDoes the dataset contain NA-values in height? How many?\n\nHave a look at the data: Check for implausible values. For now, remove these values.\n\nAdd the species names to the dataset.\n\nCreate a new dataset containing only trees with both, height and dbh measurements.\n\nAre there any correlations within the new dataset?\n\nRemove all trees with rem = F4 from the dataset\n\nCalculate mean dbh by species.\n\n\nTo thorougly check the dataset and perform the operations, you will need the following functions:\n\n\nread.csv(): Check the different options using ?read.csv\n\n\nstr(): Structure of an object\n\n\ntable(): Check the optional arguments!\n\n\nmerge(): Combine to data.frames\n\n\nas.character(): Change a vector’s class to character\n\nas.numeric(): Change a vector’s class to numeric.\n%in%\n\nis.na()\n\nmax()\n\nsummary()\n\n\ncomplete.cases()\n\ncor.test()\n\n%>% and group_by() and summarize() from the dlyr package (check demonstration Part 2)\n\nRegarding the solutions, note we don’t expect you to come up with exactly this code - there are many ways to solve the problem. The solutions just give you an idea of a possible solution\n\n9.1.1 1. Read data\nRead the provided datasets treedata.csv and species.csv to R. Use the option stringsAsFactors = FALSE in the function read.csv.\nRead the dataset treedata.csv and call it treedata. It has the following columns:\n\n\nspecies_code: tree species code\n\n\ndbh: diameter at breast height (1.3 m) [cm]\n\n\nheight: total height of the tree [m]. Measured only on a subset of trees.\n\n\nrem: coded values, containing remarks\n\nRead the dataset species.csv and call it species. The dataset consists of the following columns:\n\n\nspecies_code: tree species code (matching the one used in treedata.csv)\n\n\nspecies_scientific: Scientific species name\n\n\nspecies_english: English species name\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nFirst, you read in the file using read.csv. You have to specify the correct separator for your dataset, here this is “;”.\n\ntreedata <- read.csv('Where/ever/you/put/it/treedata.csv', sep = \";\")\nspecies <- read.csv('Hopefully/in/the/same/folder/species.csv', sep = \";\")\n\n\n\n\n\n9.1.2 2. Dataset properties\nHave a look at the properties of the dataset:\n\nWhich classes do the columns have?\n\nDid you expect these classes?\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThe data.frame dat contains 4 columns: species, dbh (diameter at breast height [cm]), height [m] and bem1, a remark.\nWe expect the following formats:\n\n\ncolumn\nformat\n\n\n\nspecies\ncharacter\n\n\ndbh\nnumeric\n\n\nheight\nnumeric\n\n\nrem\nfactor\n\n\n\nUsing str we get an overview of the structure of a dataset:\n\nstr(treedata)\n\n'data.frame':   287 obs. of  4 variables:\n $ species_code: int  121 121 411 411 411 431 411 411 411 121 ...\n $ dbh         : chr  \"19.3\" \"21.3\" \"43\" \"25.8\" ...\n $ height      : num  NA NA 37.7 NA 34.4 44.4 NA NA NA NA ...\n $ rem         : chr  \"\" \"\" \"P7\" \"F2\" ...\n\n\nColumn dbh is a character, altough we would have expected this one to be class numeric. This indicates, that a letter or special characters are in that column (we do not want these to be in there at all!).\n\n\n\n\n9.1.3 3. Turn character to numeric\nOne column, which we expect to be numeric, is of class character. Find the value causing this column to be character, set it to NA and turn the column into class numeric.\nNote that using ‘is.numeric()’ is not enough, if the column is a factor. This may be the case if you have used the option stringAsFactor = T in read.csv or an older version of R. Use a combination of ‘as.character()’ and ‘as.numeric()’ in that case.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nWe suspect dbh to contain a character and we want to remove this. With the function ‘table()’, we can check all existing values in the column. There seems to be an ‘X’ in the data.\n\ntable(treedata$dbh)\n\n\n10.1 10.2 10.4 10.6 10.7 10.9 11.2 11.4 11.5 11.9 12.3 12.5   13 13.2 13.3 13.4 \n   1    2    2    1    1    1    2    1    1    1    1    2    1    1    1    1 \n13.8 13.9   14 14.4 14.8 14.9 15.2 15.4 15.5 15.8   16 16.2 16.4 16.6 16.8 17.1 \n   3    1    1    6    1    1    3    1    1    1    1    1    1    1    4    1 \n17.2 17.4 17.5 17.6 17.8 17.9 18.1 18.2 18.3 18.7 18.8   19 19.1 19.2 19.3 19.4 \n   2    1    1    1    1    2    1    1    1    1    1    1    1    1    1    1 \n19.5 19.8   20 20.2 20.4 20.7 20.8 20.9 2030 21.3 21.6 21.8 21.9   22 22.2 22.3 \n   3    3    1    2    1    1    2    2    1    1    4    1    1    1    2    1 \n22.6 22.7 22.9 23.2 23.3 23.6 23.7 23.8   24 24.2 24.3 24.4 24.9   25 25.2 25.3 \n   2    1    2    1    1    2    1    1    2    2    2    1    2    1    1    1 \n25.4 25.8   26 26.2 26.3 26.4 26.6 27.4 27.5 27.6 27.8 28.2 28.4 28.6 28.8 29.2 \n   4    3    1    2    1    1    1    2    2    1    1    1    2    1    1    1 \n29.4 29.6 29.7 29.8 30.1 30.2 30.4 30.8 31.2 31.3 31.4 31.9   32 32.2 32.3 32.4 \n   2    1    1    2    1    1    1    2    1    1    2    1    1    3    1    1 \n32.9   33 33.2 33.3 33.4 33.8 33.9 34.2 34.4 34.6 34.7 34.8   35 35.8 36.5 36.6 \n   1    1    1    1    1    3    1    5    1    1    1    1    1    1    1    1 \n36.8 37.1 37.2 37.4 37.8 38.1 38.2 38.3 38.5 39.2 39.4 39.7 39.8    4  4.2  4.6 \n   2    1    1    1    2    1    1    1    1    1    1    1    1    3    3    1 \n 4.7   40 40.6 40.8 41.3 41.4 41.5 42.3 42.4   43 43.2 43.4 43.6 44.2 44.5 44.8 \n   1    1    2    1    1    1    1    1    1    1    1    1    1    1    1    1 \n45.2 45.7 47.8   48 48.7 48.8   49 49.7 49.8  5.1  5.2  5.4  5.5  5.6  5.7  5.8 \n   1    1    1    1    1    1    1    1    1    1    3    3    1    1    1    2 \n 5.9 51.2  6.2  6.3  6.4  6.5  6.6  6.8  6.9    7  7.2  7.3  7.4  7.6  7.8  8.1 \n   2    1    4    2    1    1    2    1    2    1    1    1    2    1    2    1 \n 8.2  8.3  8.5  8.8  8.9    9  9.4  9.5  9.6  9.9    X \n   3    2    1    1    2    1    1    2    2    1    1 \n\n\nTo automatically search for characters, we can check if dbh contains a character that is part of LETTERS (capital letters) or letters:\n\ntreedata[treedata$dbh %in% LETTERS | treedata$dbh %in% letters,]\n\n    species_code dbh height rem\n159          411   X   27.2  F4\n\n\nA more advanced option would be to use grepl. If we are using the solution above, we will only find the value if it is exactly one character. Things get a bit more complicated, if we have special characters, e.g, a *.\n\nx <- rep(c(1, 3, 5, '*', 'AA', ',', 9), 2)\nx[grepl(\"^[A-Za-z]+$\", x, perl = T)]\n\n[1] \"AA\" \"AA\"\n\nx[!grepl('[^[:punct:]]', x, perl =T)]\n\n[1] \"*\" \",\" \"*\" \",\"\n\n\nWe want to set the X in dbh to NA (probably, this is a transcription error, so one could also have a look at the field forms…).\n\ntreedata$dbh[treedata$dbh == 'X'] <- NA\nstr(treedata)\n\n'data.frame':   287 obs. of  4 variables:\n $ species_code: int  121 121 411 411 411 431 411 411 411 121 ...\n $ dbh         : chr  \"19.3\" \"21.3\" \"43\" \"25.8\" ...\n $ height      : num  NA NA 37.7 NA 34.4 44.4 NA NA NA NA ...\n $ rem         : chr  \"\" \"\" \"P7\" \"F2\" ...\n\n\nJust removing the ‘X’ does not turn a character to numeric! R provides the function as.numeric, which might be of use in this case.\n\ntreedata$dbh <- as.numeric(treedata$dbh)\nhead(treedata$dbh)\n\n[1] 19.3 21.3 43.0 25.8 38.5 36.8\n\n\n\n\n\n\n9.1.4 4. NA- values in height\n\nCheck for NA’s in the column height:\n\nHow many NA’s do appear in this column?\n\nDid you expect this column to contain NA’s? Why?\n\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nsummary(treedata)\n\n  species_code        dbh              height           rem           \n Min.   :101.0   Min.   :   4.00   Min.   :  4.60   Length:287        \n 1st Qu.:121.0   1st Qu.:  11.60   1st Qu.: 21.75   Class :character  \n Median :411.0   Median :  21.60   Median : 29.10   Mode  :character  \n Mean   :329.8   Mean   :  29.22   Mean   : 26.30                     \n 3rd Qu.:411.0   3rd Qu.:  31.40   3rd Qu.: 32.62                     \n Max.   :920.0   Max.   :2030.00   Max.   :110.88                     \n                 NA's   :1         NA's   :221                        \n\nsum(is.na(treedata$height))\n\n[1] 221\n\ntable(is.na(treedata$height))\n\n\nFALSE  TRUE \n   66   221 \n\nnrow(treedata[is.na(treedata$height),])\n\n[1] 221\n\ntable(treedata$height, useNA = 'ifany')\n\n\n   4.6    4.7    4.8    5.7    5.8    6.1    6.2    6.8    7.3    7.9   10.8 \n     1      2      1      1      1      1      1      1      1      1      1 \n  11.1   11.3   11.5   14.2   21.7   21.9     22   22.4   23.3   23.8   24.5 \n     1      1      1      1      1      1      1      2      1      2      1 \n  24.8   26.1   27.2   27.5   27.8   28.6     29   29.2   29.4   29.8   29.9 \n     1      1      1      2      1      1      1      1      1      1      1 \n  30.2   30.3   30.4   31.3   31.5   31.9     32   32.1   32.3   32.4   32.7 \n     1      2      1      1      1      1      2      1      1      1      1 \n  32.8   33.2   33.5   33.8   34.2   34.4   35.4   35.8   37.7   38.2   38.6 \n     1      1      1      1      1      1      1      1      2      1      1 \n    39   40.8   44.4 110.88   <NA> \n     1      1      1      1    221 \n\n\n\nAs only on a subset of the trees, height has been measured, we expect this column to contain NA-values.\n\nThe dataset contains 221 NA.\n\n\n\n\n\n9.1.5 5. Implausible values\nThe dataset contains some implausible values (completely out of range!). Find and replace these values with NA.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nWhat values are implausible? The dataset contains different species. A value which is plausible for species A might be implausible for species B. However, for now, we will not go into the details here.\nDo a visual check of the dataset\n\nboxplot(treedata$height, main = 'Height')\n\n\n\nboxplot(treedata$dbh, main ='DBH')\n\n\n\nmax(treedata$dbh, na.rm = T)\n\n[1] 2030\n\nmax(treedata$height, na.rm = T)\n\n[1] 110.88\n\ntreedata[treedata$dbh > 500 & !is.na(treedata$dbh),]\n\n    species_code  dbh height rem\n114          411 2030     NA  F2\n\ntreedata[treedata$height > 50 & !is.na(treedata$height),]\n\n    species_code  dbh height rem\n234          411 36.6 110.88    \n\n\nThere seems to be one outlier in both datasets which can be seen as implausible: No tree is more than 100 m of height and no tree has a diameter > 20 m (These values can be considered implausible for trees in Switzerland).\nWe will now remove these values from our dataset by setting them to NA - this might not always be the best option, there are also statistical models that can account for such errors!\n\ntreedata$dbh[treedata$dbh > 500] <- NA\ntreedata$height[treedata$height > 50] <- NA\n\nboxplot(treedata$dbh, main = 'DBH')\n\n\n\nboxplot(treedata$height, main = 'Height')\n\n\n\n\n\n\n\n\n9.1.6 6. Add species names\nAdd the species names from the species dataset to the treedata dataset.Hint: ?merge\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nUse merge to add species names to the dataset treedata. For adding only one column, match is a helpful function.\n\ntreedata = merge(treedata, species, by = \"species_code\")\nhead(treedata)\n\n  species_code  dbh height rem         species_scientific species_english\n1          101  8.1    5.7     Picea abies (L.) H. Karst.   Norway Spruce\n2          101 10.4     NA     Picea abies (L.) H. Karst.   Norway Spruce\n3          101  5.2     NA  S0 Picea abies (L.) H. Karst.   Norway Spruce\n4          101  9.6     NA     Picea abies (L.) H. Karst.   Norway Spruce\n5          101  8.2    6.2     Picea abies (L.) H. Karst.   Norway Spruce\n6          101  7.4    6.1     Picea abies (L.) H. Karst.   Norway Spruce\n\n# treedata$species_english <- species$species_english[match(treedata$species_code, species$species_code)]\n\n\n\n\n\n9.1.7 7. Remove F4\nThe remark F4 indicates, that the dbh-measurments might be flawed. Remove these trees from treedata.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ntreedata <- treedata[!treedata$rem %in% 'F4',]\n\n\n\n\n\n9.1.8 8. Select trees that contain both dbh and height measurements\nSubset treedata to trees where both height and dbh measurements were carried out. Call the result dbh_height.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\nThis can be done using complete.cases using\n\ndbh_height <- treedata[complete.cases(treedata$dbh, treedata$height),]\n\n\n\n\n\n9.1.9 9. Correlations?\nCheck for correlations in the dataset dbh_height. Use a test and plot dbh vs height.\n\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\ncor.test(dbh_height$dbh\n         , dbh_height$height)\n\n\n    Pearson's product-moment correlation\n\ndata:  dbh_height$dbh and dbh_height$height\nt = 13.147, df = 47, p-value < 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.8066074 0.9348068\nsample estimates:\n      cor \n0.8866893 \n\nplot(dbh_height$dbh\n     , dbh_height$height\n     , ylab = 'Height'\n     , xlab = 'DBH')\n\n\n\n\n\n\n\n\n9.1.10 10. Calculate mean dbh per species.\nFor calculating summary statistics, the dplyr package is really helpful. It is part of the tidyverse environment, which was designed for data science. If you work with large and complex datasets or if you have to derive many new variables, I really recommend that you have a look at this. Also, the syntax for dplyr is quite intuitive.\nFor help on this, check the demonstration of Part 2 where we calculated summary statistics for groups using the dplyr package!\n\n\n\n\n\n\nSolution\n\n\n\n\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\ntreedata %>% \n  group_by(species_english) %>% \n  summarize(N = n(),\n            meanDBH = mean(dbh, na.rm = T), \n            sdDBH = sd(dbh, na.rm = T))\n\n# A tibble: 10 × 4\n   species_english         N meanDBH  sdDBH\n   <chr>               <int>   <dbl>  <dbl>\n 1 Beech                 131   29.6  10.1  \n 2 Commom Yew              2   18.8   0.212\n 3 European Ash           12   30.6   4.14 \n 4 European Silver Fir    75   11.8   5.55 \n 5 Ivy                     6    5.13  0.927\n 6 Little Leaf Linden      4   13.3   9.88 \n 7 Norway Maple            9   28.2  11.1  \n 8 Norway Spruce          15    7.77  1.89 \n 9 Scotch Elm              1   17.9  NA    \n10 Sycamore               12   24.0   3.91"
  },
  {
    "objectID": "4-SimpleRegression.html#the-theory-behind-of-linear-regression",
    "href": "4-SimpleRegression.html#the-theory-behind-of-linear-regression",
    "title": "4  Simple linear regression",
    "section": "4.2 The theory behind of linear regression",
    "text": "4.2 The theory behind of linear regression\nSo, if we want to test if there is an association between two continous variables, we can calculate the correlation between the two - and with the cor.test function we can test even for significance. But, the correlation doesn’t report the magnitude, the strength, of the effect:\n\nX = runif(100)\npar(mfrow = c(1,1))\nplot(X, 0.5*X, ylim = c(0, 1), type = \"p\", pch = 15, col = \"red\", xlab = \"X\", ylab = \"Y\")\npoints(X, 1.0*X, ylim = c(0, 1), type = \"p\", pch = 15, col = \"blue\", xlab = \"X\", ylab = \"Y\")\n\n\n\ncor(X, 0.5*X)\n## [1] 1\ncor(X, 1.0*X)\n## [1] 1\n\nBoth have a correlation factor of 1.0! But we see clearly that the blue line has an stronger effect on Y then the red line.\nSolution: Linear regression models\nThey describe the relationship between a dependent variable and one or more explanatory variables:\n\\[\ny = a_0 +a_1*x\n\\]\n(x = explanatory variable; y = dependent variable; a0=intercept; a1= slope)\nExamples:\n\nplot(X, 0.5*X, ylim = c(0, 1), type = \"p\", pch = 16, col = \"black\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\npoints(X, 0.5*X, col = \"red\", type = \"l\", lwd = 1.5)\npoints(X, 1.0*X, ylim = c(0, 1), type = \"p\", pch = 16, col = \"black\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\npoints(X, 1.0*X, ylim = c(0, 1), type = \"l\", pch = 16, col = \"blue\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\nlegend(\"topleft\", col = c(\"red\", \"blue\"), lty = 1,legend = c('Y = 0.5*X+0', 'Y = 1.0**X+0'))\n\n\n\n\nWe can get the parameters (slope and intercept) with the MLE. However, we need first to make another assumptions, usually the model line doesn’t perfectly the data because there is an observational error on Y, so the points scatter around the line:\n\nplot(X, 0.5*X+rnorm(100, sd = 0.05), ylim = c(0, 1), type = \"p\", pch = 16, col = \"black\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\npoints(X, 0.5*X, col = \"red\", type = \"l\", lwd = 1.5)\npoints(X, 1.0*X+rnorm(100, sd = 0.05), ylim = c(0, 1), type = \"p\", pch = 16, col = \"black\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\npoints(X, 1.0*X, ylim = c(0, 1), type = \"l\", pch = 16, col = \"blue\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\nlegend(\"topleft\", col = c(\"red\", \"blue\"), lty = 1,legend = c('Y = 0.5*X+0', 'Y = 1.0**X+0'))\n\n\n\n\nAnd the model extends to:\n\\[\ny = a_0 + a_1*x +\\epsilon, \\epsilon \\sim N(0, sd)\n\\]\nWhich we can also rewrite into:\n\\[\ny = N(a_0 + a_1*x, sd)\n\\]\nWhich is very similar to our previous MLE, right? The only difference is now that the mean depends now on x, let’s optimize it again:\n\nXobs = rnorm(100, sd = 1.0)\nY = Xobs + rnorm(100,sd = 0.2)\nlikelihood = function(par) { # three parameters now\n  lls = dnorm(Y, mean = Xobs*par[2]+par[1], sd = par[3], log = TRUE) # calculate for each observation the probability to observe the data given our model\n  # we use the logLikilihood because of numerical reasons\n  return(sum(lls))\n}\n\nlikelihood(c(0, 0, 0.2))\n## [1] -1162.229\nopt = optim(c(0.0, 0.0, 1.0), fn = function(par) -likelihood(par), hessian = TRUE )\n\nopt$par\n## [1] 0.002927292 0.997608527 0.216189328\n\nOur true parameters are 0.0 for the intercept, 1.0 for the slope, and 0.22 for the sd of the observational error.\nNow, we want to test whether the effect (slope) is statistically significant different from 0:\n\ncalculate standard error\ncalculate t-statistic\ncalculate p-value\n\n\nst_errors = sqrt(diag(solve(opt$hessian)))\nst_errors[2]\n## [1] 0.02226489\nt_statistic = opt$par[2] / st_errors[2]\npt(t_statistic, df = 100-3, lower.tail = FALSE)*2\n## [1] 1.264962e-66\n\nThe p-value is smaller than alpha, so the effect is significant! However, it would be tedious to do that always by hand, and because it is probably one of the most used analysis, there’s a function for it in R:\n\nmodel = lm(Y~Xobs) # 1. Get estimates, MLE\nmodel\n## \n## Call:\n## lm(formula = Y ~ Xobs)\n## \n## Coefficients:\n## (Intercept)         Xobs  \n##    0.002927     0.997569\nsummary(model) # 2. Calculate standard errors, CI, and p-values\n## \n## Call:\n## lm(formula = Y ~ Xobs)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -0.49919 -0.13197 -0.01336  0.14239  0.64505 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 0.002927   0.021838   0.134    0.894    \n## Xobs        0.997569   0.022490  44.355   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.2184 on 98 degrees of freedom\n## Multiple R-squared:  0.9526, Adjusted R-squared:  0.9521 \n## F-statistic:  1967 on 1 and 98 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "4-SimpleRegression.html#understanding-the-linear-regression",
    "href": "4-SimpleRegression.html#understanding-the-linear-regression",
    "title": "4  Simple linear regression",
    "section": "4.3 Understanding the linear regression",
    "text": "4.3 Understanding the linear regression\n\nBesides the MLE, there are also several tests in a regression. The most important are\n\nsignificance of each parameter. \u000bt-test: H0 = variable has no effect, that means the estimator for the parameter is 0\u000b\nsignificance of the model. \u000bF-test: H0 = none of the explanatory variables has an effect, that means all estimators are 0\n\nExample:\n\npairs(airquality)\n\n\n\n# first think about what is explanatory / predictor \n# and what is the dependent variable (e.g. in Ozone and Temp)\n\n# par(mfrow = c(1, 1))\nplot(Ozone ~ Temp, data = airquality)\n\n\n\nfit1 = lm(Ozone ~ Temp, data = airquality)\nsummary(fit1)\n## \n## Call:\n## lm(formula = Ozone ~ Temp, data = airquality)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -40.729 -17.409  -0.587  11.306 118.271 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -146.9955    18.2872  -8.038 9.37e-13 ***\n## Temp           2.4287     0.2331  10.418  < 2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 23.71 on 114 degrees of freedom\n##   (37 observations deleted due to missingness)\n## Multiple R-squared:  0.4877, Adjusted R-squared:  0.4832 \n## F-statistic: 108.5 on 1 and 114 DF,  p-value: < 2.2e-16\n# gives a negative values for the intercept = negative Ozone levels when Temp = 0\n# this does not make sense (>extrapolation)\n\n# we can also fit a model without intercept, \n# without means: intercept = 0; y = a*x \n# although this doesn't make much sense here\nfit2 = lm(Ozone ~ Temp - 1, data = airquality)\nsummary(fit2)\n## \n## Call:\n## lm(formula = Ozone ~ Temp - 1, data = airquality)\n## \n## Residuals:\n##    Min     1Q Median     3Q    Max \n## -38.47 -23.26 -12.46  15.15 121.96 \n## \n## Coefficients:\n##      Estimate Std. Error t value Pr(>|t|)    \n## Temp  0.56838    0.03498   16.25   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 29.55 on 115 degrees of freedom\n##   (37 observations deleted due to missingness)\n## Multiple R-squared:  0.6966, Adjusted R-squared:  0.6939 \n## F-statistic:   264 on 1 and 115 DF,  p-value: < 2.2e-16\n\nplot(Ozone ~ Temp, data = airquality, xlim = c(0,100), ylim = c(-150, 150))\nabline(fit1, col = \"green\")\nabline(fit2, col = \"red\", lty = 2)\n\n\n\n\n# there is no need to check normality of Ozone\nhist(airquality$Ozone) # this is not normal, and that's no problem !\n\n\n\n\n\n4.3.1 Model diagnostics\nThe regression optimizes the parameters under the condition that the model is correct (e.g. there is really a linear relationship). If the model is not specified correctly, the parameter values are still estimated - to the best of the model’s ability, but the result will be misleading, e.g. p-values and effect sizes\nWhat could be wrong:\n\nthe distribution (e.g. error not normal)\nthe shape of the relationship between explanatory variable and dependent variable (e.g., could be non-linear)\n\nThe model’s assumptions must always be checked!\nWe can check the model by looking at the residuals (which are predicted - observed values) which should be normally distributed and should show no patterns:\n\nX = runif(50)\nY = X + rnorm(50, sd = 0.2)\nfit = lm(Y~X)\npar(mfrow = c(1, 3))\nplot(X, Y)\nabline(fit, col = \"red\")\nplot(X, predict(fit) - Y, ylab = \"Residuals\")\nabline(h = 0, col = \"red\")\nhist(predict(fit) - Y, main = \"\", xlab = \"Residuals\")\n\n\n\npar(mfrow = c(1,1))\n\nThe residuals should match the model assumptions. For linear regression:\n\nnormal distribution\nconstant variance\nindependence of the data points\n\nExample:\n\nfit1 = lm(Ozone~Temp, data = airquality)\nresiduals(fit1)\n##           1           2           3           4           6           7 \n##  25.2723695   8.1288530 -20.7285536  14.4158861  14.7010729  12.1297762 \n##           8           9          11          12          13          14 \n##  22.7019960   6.8445894 -25.7285536  -4.5850371  -2.2989271  -4.1563338 \n##          15          16          17          18          19          20 \n##  24.1306993   5.5584795  20.7010729  14.5594026  11.8436662   7.4158861 \n##          21          22          23          24          28          29 \n##   4.7019960 -19.2998503   2.8445894  30.8445894   7.2723695  -4.7294767 \n##          30          31          38          40          41          44 \n##  70.1279299  -0.5859602 -23.1581800  -0.5878065 -25.3016966 -29.1581800 \n##          47          48          49          50          51          62 \n## -19.0146635   9.1288530   9.1297762 -18.2998503 -24.5859602  77.9844134 \n##          63          64          66          67          68          69 \n## -10.4442899 -17.7294767   9.4131167 -14.5868833  10.2696001  20.5547869 \n##          70          71          73          74          76          77 \n##  20.5547869  15.8408968 -20.2998503 -22.7294767 -40.3007734  -1.7294767 \n##          78          79          80          81          82          85 \n## -17.1581800   3.9844134  14.6983034   3.5557101 -16.7285536  18.1270068 \n##          86          87          88          89          90          91 \n##  48.5557101 -32.1581800  -9.8729932  15.2696001 -11.8729932   9.4131167 \n##          92          93          94          95          96          97 \n##   9.2705233 -10.7294767 -40.7294767 -36.1581800  16.1270068 -24.4442899 \n##          98          99         100         101         104         105 \n##   1.6983034  52.8408968  17.4121935  38.4121935 -17.8729932 -24.1581800 \n##         106         108         109         110         111         112 \n##  17.6992266 -18.0146635  14.1279299 -14.5859602 -11.4433668   1.5566332 \n##         113         114         116         117         118         120 \n## -19.0146635 -18.8711470   0.1279299 118.2705233  11.1270068 -12.5887296 \n##         121         122         123         124         125         126 \n##  36.6973803  -2.1600263   3.6973803  21.9834902   1.5547869  -5.8739164 \n##         127         128         129         130         131         132 \n##  12.1260836 -17.3016966 -25.0155866 -27.3007734 -19.4433668 -14.1572569 \n##         133         134         135         136         137         138 \n##  -6.2998503  -5.7294767 -16.5859602 -12.0146635 -16.4424437 -12.4424437 \n##         139         140         141         142         143         144 \n##   3.5566332   2.2723695 -24.5859602   5.8436662 -36.1581800   4.5584795 \n##         145         146         147         148         149         151 \n##  -2.4424437 -13.7294767 -13.5850371   7.9871828   6.9862596 -21.1572569 \n##         152         153 \n## -19.5859602   1.8436662\nhist(residuals(fit1))\n\n\n\n# residuals are not normally distributed\n# we do not use a test for this, but instead look at the residuals visually\n\n# let's plot residuals versus predictor\nplot(airquality$Temp[!is.na(airquality$Ozone)], residuals(fit1))\n\n\n\n\n# model checking plots\noldpar= par(mfrow = c(2,2))\nplot(fit1)\n\n\n\npar(oldpar)\n#> there's a pattern in the residuals > the model does not fit very well!\n\n\n\n4.3.2 Linear regression with a categorical variable\nWe can also use categorical variables as an explanatory variable:\n\nm = lm(weight~group, data = PlantGrowth)\nsummary(m)\n## \n## Call:\n## lm(formula = weight ~ group, data = PlantGrowth)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -1.0710 -0.4180 -0.0060  0.2627  1.3690 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)   5.0320     0.1971  25.527   <2e-16 ***\n## grouptrt1    -0.3710     0.2788  -1.331   0.1944    \n## grouptrt2     0.4940     0.2788   1.772   0.0877 .  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.6234 on 27 degrees of freedom\n## Multiple R-squared:  0.2641, Adjusted R-squared:  0.2096 \n## F-statistic: 4.846 on 2 and 27 DF,  p-value: 0.01591\n\nThe lm estimates an effect/intercept for each level in the categorical variable. The first level of the categorical variable is used as a reference, i.e. the true effect for grouptrt1 is Intercept+grouptrt1 = 4.661 and grouptrt2 is 5.5242. Moreover, the lm tests for a difference of the reference to the other levels. So with this model we know whether the control is significant different from treatment 1 and 2 but we cannot say anything about the difference between trt1 and trt2.\nIf we are interested in testing trt1 vs trt2 we can, for example, change the reference level of our variable:\n\ntmp = PlantGrowth\ntmp$group = relevel(tmp$group, ref = \"trt1\")\nm = lm(weight~group, data = tmp)\nsummary(m)\n## \n## Call:\n## lm(formula = weight ~ group, data = tmp)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -1.0710 -0.4180 -0.0060  0.2627  1.3690 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)   4.6610     0.1971  23.644  < 2e-16 ***\n## groupctrl     0.3710     0.2788   1.331  0.19439    \n## grouptrt2     0.8650     0.2788   3.103  0.00446 ** \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.6234 on 27 degrees of freedom\n## Multiple R-squared:  0.2641, Adjusted R-squared:  0.2096 \n## F-statistic: 4.846 on 2 and 27 DF,  p-value: 0.01591\n\nAnother example:\n\nlibrary(effects)\n## Loading required package: carData\n## lattice theme set by effectsTheme()\n## See ?effectsTheme for details.\nlibrary(jtools)\n\nsummary(chickwts)\n##      weight             feed   \n##  Min.   :108.0   casein   :12  \n##  1st Qu.:204.5   horsebean:10  \n##  Median :258.0   linseed  :12  \n##  Mean   :261.3   meatmeal :11  \n##  3rd Qu.:323.5   soybean  :14  \n##  Max.   :423.0   sunflower:12\n\nplot(weight ~ feed, chickwts)\n\n\n\nfit4 = lm(weight ~ feed, chickwts)\n\nsummary(fit4)\n## \n## Call:\n## lm(formula = weight ~ feed, data = chickwts)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -123.909  -34.413    1.571   38.170  103.091 \n## \n## Coefficients:\n##               Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)    323.583     15.834  20.436  < 2e-16 ***\n## feedhorsebean -163.383     23.485  -6.957 2.07e-09 ***\n## feedlinseed   -104.833     22.393  -4.682 1.49e-05 ***\n## feedmeatmeal   -46.674     22.896  -2.039 0.045567 *  \n## feedsoybean    -77.155     21.578  -3.576 0.000665 ***\n## feedsunflower    5.333     22.393   0.238 0.812495    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 54.85 on 65 degrees of freedom\n## Multiple R-squared:  0.5417, Adjusted R-squared:  0.5064 \n## F-statistic: 15.36 on 5 and 65 DF,  p-value: 5.936e-10\nanova(fit4) #get overall effect of feeding treatment\n## Analysis of Variance Table\n## \n## Response: weight\n##           Df Sum Sq Mean Sq F value    Pr(>F)    \n## feed       5 231129   46226  15.365 5.936e-10 ***\n## Residuals 65 195556    3009                      \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nplot(allEffects(fit4))\n\n\n\nplot(allEffects(fit4, partial.residuals = T))\n\n\n\neffect_plot(fit4, pred = feed, interval = TRUE, plot.points = F)\n\n\n\n\nold.par = par(mfrow = c(2, 2))\nplot(fit4)\n\n\n\npar(old.par)\n\nboxplot(residuals(fit4) ~ chickwts$feed)\n\n\n\n\n\n\n4.3.3 Linear regression with a quadratic term\n\n## what does simple linear regression mean?\n# simple = one predictor!\n# linear = linear in the parameters\n# a0 + a1 * x + a2 * x^2 \n# even if we add a quadratic term, this is a linear combination\n# this is called polynomial\n\nfit3 = lm(Ozone ~ Temp + I(Temp^2), data = airquality)\nsummary(fit3)\n## \n## Call:\n## lm(formula = Ozone ~ Temp + I(Temp^2), data = airquality)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -37.619 -12.513  -2.736   9.676 123.909 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 305.48577  122.12182   2.501 0.013800 *  \n## Temp         -9.55060    3.20805  -2.977 0.003561 ** \n## I(Temp^2)     0.07807    0.02086   3.743 0.000288 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 22.47 on 113 degrees of freedom\n##   (37 observations deleted due to missingness)\n## Multiple R-squared:  0.5442, Adjusted R-squared:  0.5362 \n## F-statistic: 67.46 on 2 and 113 DF,  p-value: < 2.2e-16\n\noldpar= par(mfrow = c(2,2))\nplot(fit3)\n\n\n\npar(oldpar)\n\n\n# Residual vs. fitted looks okay, but Outliers are still there, and additionally\n# too wide. But for now, let's plot prediction with uncertainty (plot line plus confidence interval)\n\nplot(Ozone ~ Temp, data = airquality)\n\n# if the relationship between x and y is not linear, we cannot use abline\n# instead we predict values of x for different values of y based on the model \nnewDat = data.frame(Temp = 55:100)\npredictions = predict(fit3, newdata = newDat, se.fit = T)\n# and plot these into our figure:\nlines(newDat$Temp, predictions$fit, col= \"red\")\n# let's also plot the confidence intervals:\nlines(newDat$Temp, predictions$fit + 1.96*predictions$se.fit, col= \"red\", lty = 2)\nlines(newDat$Temp, predictions$fit - 1.96*predictions$se.fit, col= \"red\", lty = 2)\n\n# add a polygon (shading for confidence interval)\nx = c(newDat$Temp, rev(newDat$Temp))\ny = c(predictions$fit - 1.96*predictions$se.fit, \n      rev(predictions$fit + 1.96*predictions$se.fit))\n\npolygon(x,y, col=\"#99009922\", border = F )\n\n\n\n\n\n# alternative: use package effects\n#install.packages(\"effects\")\nlibrary(effects)\nplot(allEffects(fit3))\n\n\n\nplot(allEffects(fit3, partial.residuals = T)) \n\n\n\n#to check patterns in residuals (plots measurements and partial residuals)\n\n# or jtools package\nlibrary(jtools)\neffect_plot(fit3, pred = Temp, interval = TRUE, plot.points = TRUE)"
  },
  {
    "objectID": "4-SimpleRegression.html#the-theory-of-linear-regression",
    "href": "4-SimpleRegression.html#the-theory-of-linear-regression",
    "title": "4  Simple linear regression",
    "section": "4.2 The theory of linear regression",
    "text": "4.2 The theory of linear regression\nIf we want to test for an association between two continuous variables, we can calculate the correlation between the two - and with the cor.test function we can test even for significance. But, the correlation doesn’t report the magnitude, the strength, of the effect:\n\nX = runif(100)\npar(mfrow = c(1,1))\nplot(X, 0.5*X, ylim = c(0, 1), type = \"p\", pch = 15, col = \"red\", xlab = \"X\", ylab = \"Y\")\npoints(X, 1.0*X, ylim = c(0, 1), type = \"p\", pch = 15, col = \"blue\", xlab = \"X\", ylab = \"Y\")\n\n\n\ncor(X, 0.5*X)\n## [1] 1\ncor(X, 1.0*X)\n## [1] 1\n\nBoth have a correlation factor of 1.0! But we see clearly that the blue line has an stronger effect on Y then the red line.\nSolution: Linear regression models\nThey describe the relationship between a dependent variable and one or more explanatory variables:\n\\[\ny = a_0 +a_1*x\n\\]\n(x = explanatory variable; y = dependent variable; a0=intercept; a1= slope)\nExamples:\n\nplot(X, 0.5*X, ylim = c(0, 1), type = \"p\", pch = 16, col = \"black\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\npoints(X, 0.5*X, col = \"red\", type = \"l\", lwd = 1.5)\npoints(X, 1.0*X, ylim = c(0, 1), type = \"p\", pch = 16, col = \"black\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\npoints(X, 1.0*X, ylim = c(0, 1), type = \"l\", pch = 16, col = \"blue\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\nlegend(\"topleft\", col = c(\"red\", \"blue\"), lty = 1,legend = c('Y = 0.5*X+0', 'Y = 1.0**X+0'))\n\n\n\n\nWe can get the parameters (slope and intercept) with the MLE. However, we need first to make another assumptions, usually the model line doesn’t perfectly the data because there is an observational error on Y, so the points scatter around the line:\n\nplot(X, 0.5*X+rnorm(100, sd = 0.05), ylim = c(0, 1), type = \"p\", pch = 16, col = \"black\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\npoints(X, 0.5*X, col = \"red\", type = \"l\", lwd = 1.5)\npoints(X, 1.0*X+rnorm(100, sd = 0.05), ylim = c(0, 1), type = \"p\", pch = 16, col = \"black\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\npoints(X, 1.0*X, ylim = c(0, 1), type = \"l\", pch = 16, col = \"blue\", xlab = \"X\", ylab = \"Y\", lwd = 1.5)\nlegend(\"topleft\", col = c(\"red\", \"blue\"), lty = 1,legend = c('Y = 0.5*X+0', 'Y = 1.0**X+0'))\n\n\n\n\nAnd the model extends to:\n\\[\ny = a_0 + a_1*x +\\epsilon, \\epsilon \\sim N(0, sd)\n\\]\nWhich we can also rewrite into:\n\\[\ny = N(a_0 + a_1*x, sd)\n\\]\nWhich is very similar to our previous MLE, right? The only difference is now that the mean depends now on x, let’s optimize it again:\n\nXobs = rnorm(100, sd = 1.0)\nY = Xobs + rnorm(100,sd = 0.2)\nlikelihood = function(par) { # three parameters now\n  lls = dnorm(Y, mean = Xobs*par[2]+par[1], sd = par[3], log = TRUE) # calculate for each observation the probability to observe the data given our model\n  # we use the logLikilihood because of numerical reasons\n  return(sum(lls))\n}\n\nlikelihood(c(0, 0, 0.2))\n## [1] -1162.229\nopt = optim(c(0.0, 0.0, 1.0), fn = function(par) -likelihood(par), hessian = TRUE )\n\nopt$par\n## [1] 0.002927292 0.997608527 0.216189328\n\nOur true parameters are 0.0 for the intercept, 1.0 for the slope, and 0.22 for the sd of the observational error.\nNow, we want to test whether the effect (slope) is statistically significant different from 0:\n\ncalculate standard error\ncalculate t-statistic\ncalculate p-value\n\n\nst_errors = sqrt(diag(solve(opt$hessian)))\nst_errors[2]\n## [1] 0.02226489\nt_statistic = opt$par[2] / st_errors[2]\npt(t_statistic, df = 100-3, lower.tail = FALSE)*2\n## [1] 1.264962e-66\n\nThe p-value is smaller than \\(\\alpha\\), so the effect is significant! However, it would be tedious to do that always by hand, and because it is probably one of the most used analysis, there’s a function for it in R:\n\nmodel = lm(Y~Xobs) # 1. Get estimates, MLE\nmodel\n## \n## Call:\n## lm(formula = Y ~ Xobs)\n## \n## Coefficients:\n## (Intercept)         Xobs  \n##    0.002927     0.997569\nsummary(model) # 2. Calculate standard errors, CI, and p-values\n## \n## Call:\n## lm(formula = Y ~ Xobs)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -0.49919 -0.13197 -0.01336  0.14239  0.64505 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 0.002927   0.021838   0.134    0.894    \n## Xobs        0.997569   0.022490  44.355   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.2184 on 98 degrees of freedom\n## Multiple R-squared:  0.9526, Adjusted R-squared:  0.9521 \n## F-statistic:  1967 on 1 and 98 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "5-MultipleRegression.html#confounder",
    "href": "5-MultipleRegression.html#confounder",
    "title": "5  Multiple regression",
    "section": "5.1 Confounder",
    "text": "5.1 Confounder\nConfounders have effects on the response and another predictor.\n\nClimate = runif(100)\nTemp = Climate + rnorm(100, sd = 0.2)\nGrowth = 0.5*Temp - 1.0*Climate + rnorm(100, sd = 0.2)\n\nsummary(lm(Growth~Temp))\n## \n## Call:\n## lm(formula = Growth ~ Temp)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -0.55719 -0.18748 -0.01354  0.18858  0.59337 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -0.16604    0.04228  -3.927  0.00016 ***\n## Temp        -0.19311    0.06602  -2.925  0.00428 ** \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.2472 on 98 degrees of freedom\n## Multiple R-squared:  0.0803, Adjusted R-squared:  0.07091 \n## F-statistic: 8.556 on 1 and 98 DF,  p-value: 0.004279\nsummary(lm(Growth~Temp+Climate)) # correct effects!!\n## \n## Call:\n## lm(formula = Growth ~ Temp + Climate)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -0.41912 -0.13228 -0.00661  0.12988  0.41630 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)  0.009234   0.038203   0.242     0.81    \n## Temp         0.568083   0.102652   5.534 2.66e-07 ***\n## Climate     -1.088041   0.127964  -8.503 2.27e-13 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.1881 on 97 degrees of freedom\n## Multiple R-squared:  0.473,  Adjusted R-squared:  0.4622 \n## F-statistic: 43.54 on 2 and 97 DF,  p-value: 3.205e-14\n\nIdentifying confounders is the most important challenge in observational studies: For example, several studies showed that overweight adults have lower mortality. However, another study shows that these earlier results might have come up due to confounding: smoking!\n\nsmokers: higher mortality and lower BMI people with lower BMI have higher mortality rates\nWhen we correct for the confounder smoking, the correlation between BMI and mortality goes in the other direction (obese people have higher mortality!)\n\nConfounders can even lead to observed correlations where in reality there is no such correlation. This is called spurious correlations.\n\n\n\n\n\n\nWarning\n\n\n\nConclusion: confounders can cause correlations where no causal relationship exists."
  },
  {
    "objectID": "5-MultipleRegression.html#multiple-lm",
    "href": "5-MultipleRegression.html#multiple-lm",
    "title": "5  Multiple regression",
    "section": "5.2 Multiple LM",
    "text": "5.2 Multiple LM\nThe multiple linear regression can deal with confounders:\n\nUnivariate (simple) linear regression describes how y depends on x using a polynomial of x1 e.g.: y = a0 + a1 * x1 + a2 * x12\nMultiple linear regression expands simple linear regression to a polynomial of several explanatory variables x1, x2… e.g.: y = a0 + a1 * x1 + a2 * x2 + a3 * x3\nIdea: when we jointly consider “all” variables in the model formula, the influence of confounding variables is incorporated\n\n\n## first remove observations with NA values\nnewAirquality = airquality[complete.cases(airquality),]\nsummary(newAirquality)\n##      Ozone          Solar.R           Wind            Temp      \n##  Min.   :  1.0   Min.   :  7.0   Min.   : 2.30   Min.   :57.00  \n##  1st Qu.: 18.0   1st Qu.:113.5   1st Qu.: 7.40   1st Qu.:71.00  \n##  Median : 31.0   Median :207.0   Median : 9.70   Median :79.00  \n##  Mean   : 42.1   Mean   :184.8   Mean   : 9.94   Mean   :77.79  \n##  3rd Qu.: 62.0   3rd Qu.:255.5   3rd Qu.:11.50   3rd Qu.:84.50  \n##  Max.   :168.0   Max.   :334.0   Max.   :20.70   Max.   :97.00  \n##      Month            Day       \n##  Min.   :5.000   Min.   : 1.00  \n##  1st Qu.:6.000   1st Qu.: 9.00  \n##  Median :7.000   Median :16.00  \n##  Mean   :7.216   Mean   :15.95  \n##  3rd Qu.:9.000   3rd Qu.:22.50  \n##  Max.   :9.000   Max.   :31.00\n\n# simple regression\nm0 = lm(Ozone ~ Temp , data = newAirquality)\nsummary(m0)\n## \n## Call:\n## lm(formula = Ozone ~ Temp, data = newAirquality)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -40.922 -17.459  -0.874  10.444 118.078 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -147.6461    18.7553  -7.872 2.76e-12 ***\n## Temp           2.4391     0.2393  10.192  < 2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 23.92 on 109 degrees of freedom\n## Multiple R-squared:  0.488,  Adjusted R-squared:  0.4833 \n## F-statistic: 103.9 on 1 and 109 DF,  p-value: < 2.2e-16\nplot(m0)\n\n\n\n\n\n\n\n\n\n\n\n\nplot(Ozone ~ Temp , data = newAirquality)\nabline(m0, col = \"blue\", lwd = 3)\n\n\n\n\n# Today: multiple linear regression\nm1 = lm(Ozone ~ Temp + Wind , data = newAirquality)\n# have a look at the residuals:\nop <- par(mfrow = c(2,2))\nplot(m1)\n\n\n\npar(op)\n\nsummary(m1)\n## \n## Call:\n## lm(formula = Ozone ~ Temp + Wind, data = newAirquality)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -42.156 -13.216  -3.123  10.598  98.492 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -67.3220    23.6210  -2.850  0.00524 ** \n## Temp          1.8276     0.2506   7.294 5.29e-11 ***\n## Wind         -3.2948     0.6711  -4.909 3.26e-06 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 21.73 on 108 degrees of freedom\n## Multiple R-squared:  0.5814, Adjusted R-squared:  0.5736 \n## F-statistic: 74.99 on 2 and 108 DF,  p-value: < 2.2e-16\n\n# plotting multiple regression outputs\nlibrary(effects)\n## Loading required package: carData\n## lattice theme set by effectsTheme()\n## See ?effectsTheme for details.\nplot(allEffects(m1))\n\n\n\n\n\n## Omitted variable bias\nboth = lm(Ozone ~ Wind + Temp, newAirquality)\nwind = lm(Ozone ~ Wind , newAirquality)\ntemp = lm(Ozone ~ Temp, newAirquality)\nsummary(both)\n## \n## Call:\n## lm(formula = Ozone ~ Wind + Temp, data = newAirquality)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -42.156 -13.216  -3.123  10.598  98.492 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -67.3220    23.6210  -2.850  0.00524 ** \n## Wind         -3.2948     0.6711  -4.909 3.26e-06 ***\n## Temp          1.8276     0.2506   7.294 5.29e-11 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 21.73 on 108 degrees of freedom\n## Multiple R-squared:  0.5814, Adjusted R-squared:  0.5736 \n## F-statistic: 74.99 on 2 and 108 DF,  p-value: < 2.2e-16\nsummary(wind)\n## \n## Call:\n## lm(formula = Ozone ~ Wind, data = newAirquality)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -43.513 -18.597  -5.035  15.814  88.437 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)  99.0413     7.4724   13.25  < 2e-16 ***\n## Wind         -5.7288     0.7082   -8.09 9.09e-13 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 26.42 on 109 degrees of freedom\n## Multiple R-squared:  0.3752, Adjusted R-squared:  0.3694 \n## F-statistic: 65.44 on 1 and 109 DF,  p-value: 9.089e-13\n\nslopes <- data.frame(\n  predictor = c(\"Wind\", \"Temp\"),\n  both.pred = round(coef(both)[2:3], digits = 2),\n  only.wind = c(round(coef(wind)[2], digits = 2), \"NA\"),\n  only.temp = c(\"NA\", round(coef(temp)[2], digits = 2))\n)\nslopes\n##      predictor both.pred only.wind only.temp\n## Wind      Wind     -3.29     -5.73        NA\n## Temp      Temp      1.83        NA      2.44\n\nOmitting Wind makes the effect of Temperature larger.\nProblem: Multiple regression can separate the effect of collinear explanatory variables, but only, if collinearity is not too strong.\nSolution: If the correlation is really strong, we can omit one variable and interpret the remaining collinear variable as representing both."
  },
  {
    "objectID": "5-MultipleRegression.html#interactions-between-variables",
    "href": "5-MultipleRegression.html#interactions-between-variables",
    "title": "5  Multiple regression",
    "section": "5.3 Interactions between variables",
    "text": "5.3 Interactions between variables\nIf one predictor influences the effect of the other predictor, we can include an interaction term into our model:\n\\[\ny \\sim a + b + a:b\n\\]\nor:\n\\[\ny \\sim a*b\n\\]\n\n# Include interaction\nm2 = lm(Ozone ~  scale(Wind)* scale(Temp) , data = newAirquality)\n# if including interactions, always scale your predictor variables!\n# scale: subtracts the mean and divides by standard deviation\nsummary(m2)\n## \n## Call:\n## lm(formula = Ozone ~ scale(Wind) * scale(Temp), data = newAirquality)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -40.930 -11.193  -3.034   8.193  97.456 \n## \n## Coefficients:\n##                         Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)               38.469      2.137  18.002  < 2e-16 ***\n## scale(Wind)              -11.758      2.238  -5.253 7.68e-07 ***\n## scale(Temp)               17.544      2.239   7.837 3.62e-12 ***\n## scale(Wind):scale(Temp)   -7.367      1.848  -3.987 0.000123 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 20.37 on 107 degrees of freedom\n## Multiple R-squared:  0.6355, Adjusted R-squared:  0.6253 \n## F-statistic: 62.19 on 3 and 107 DF,  p-value: < 2.2e-16\nop <- par(mfrow = c(2,2))\nplot(m2)\n\n\n\npar(op)\n\nThe influence of temperature on growth depends on the amount of precipitation, or: If there’s not enough water, also higher temperatures cannot increase growth.\nExample:\n\n# How does everything change, if we have factorial predictors?\nnewAirquality$MonthFactor = as.factor(newAirquality$Month)\n\nm4 = lm(sqrt(Ozone) ~ MonthFactor + scale(Wind) * scale(Temp) * scale(Solar.R) , \n        data = newAirquality)\nsummary(m4)\n## \n## Call:\n## lm(formula = sqrt(Ozone) ~ MonthFactor + scale(Wind) * scale(Temp) * \n##     scale(Solar.R), data = newAirquality)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -2.6096 -0.8869 -0.2067  0.7647  4.3191 \n## \n## Coefficients:\n##                                        Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)                             6.12172    0.37148  16.479  < 2e-16 ***\n## MonthFactor6                           -0.54487    0.60633  -0.899 0.371025    \n## MonthFactor7                           -0.37571    0.51347  -0.732 0.466072    \n## MonthFactor8                           -0.03770    0.52839  -0.071 0.943262    \n## MonthFactor9                           -0.74343    0.43308  -1.717 0.089179 .  \n## scale(Wind)                            -0.76983    0.16456  -4.678 9.18e-06 ***\n## scale(Temp)                             1.35350    0.20937   6.465 3.86e-09 ***\n## scale(Solar.R)                          0.65689    0.16212   4.052 0.000101 ***\n## scale(Wind):scale(Temp)                -0.30440    0.14655  -2.077 0.040379 *  \n## scale(Wind):scale(Solar.R)             -0.07695    0.17222  -0.447 0.655999    \n## scale(Temp):scale(Solar.R)              0.22985    0.15451   1.488 0.140040    \n## scale(Wind):scale(Temp):scale(Solar.R)  0.03202    0.15179   0.211 0.833366    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 1.328 on 99 degrees of freedom\n## Multiple R-squared:  0.7335, Adjusted R-squared:  0.7039 \n## F-statistic: 24.78 on 11 and 99 DF,  p-value: < 2.2e-16\n\nm5 = lm(sqrt(Ozone) ~ MonthFactor + scale(Wind) + scale(Temp) + scale(Solar.R) \n                      + scale(Wind):scale(Temp)\n                      + scale(Wind):scale(Solar.R)\n                      + scale(Temp):scale(Solar.R), \n        data = newAirquality)\nsummary(m5)\n## \n## Call:\n## lm(formula = sqrt(Ozone) ~ MonthFactor + scale(Wind) + scale(Temp) + \n##     scale(Solar.R) + scale(Wind):scale(Temp) + scale(Wind):scale(Solar.R) + \n##     scale(Temp):scale(Solar.R), data = newAirquality)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -2.6023 -0.9182 -0.2180  0.7713  4.3209 \n## \n## Coefficients:\n##                            Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)                 6.12350    0.36960  16.568  < 2e-16 ***\n## MonthFactor6               -0.54871    0.60315  -0.910   0.3652    \n## MonthFactor7               -0.39194    0.50524  -0.776   0.4397    \n## MonthFactor8               -0.04701    0.52402  -0.090   0.9287    \n## MonthFactor9               -0.74873    0.43028  -1.740   0.0849 .  \n## scale(Wind)                -0.75588    0.14997  -5.040 2.07e-06 ***\n## scale(Temp)                 1.35192    0.20823   6.492 3.29e-09 ***\n## scale(Solar.R)              0.65178    0.15953   4.086 8.88e-05 ***\n## scale(Wind):scale(Temp)    -0.31305    0.14002  -2.236   0.0276 *  \n## scale(Wind):scale(Solar.R) -0.09259    0.15469  -0.599   0.5508    \n## scale(Temp):scale(Solar.R)  0.23573    0.15126   1.558   0.1223    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 1.321 on 100 degrees of freedom\n## Multiple R-squared:  0.7334, Adjusted R-squared:  0.7068 \n## F-statistic: 27.51 on 10 and 100 DF,  p-value: < 2.2e-16\n\n# short form for including only two-wac interactions:\n\nm5 = lm(sqrt(Ozone) ~ MonthFactor + (scale(Wind) + scale(Temp) + scale(Solar.R))^2,\n        data = newAirquality)\nsummary(m5)\n## \n## Call:\n## lm(formula = sqrt(Ozone) ~ MonthFactor + (scale(Wind) + scale(Temp) + \n##     scale(Solar.R))^2, data = newAirquality)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -2.6023 -0.9182 -0.2180  0.7713  4.3209 \n## \n## Coefficients:\n##                            Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)                 6.12350    0.36960  16.568  < 2e-16 ***\n## MonthFactor6               -0.54871    0.60315  -0.910   0.3652    \n## MonthFactor7               -0.39194    0.50524  -0.776   0.4397    \n## MonthFactor8               -0.04701    0.52402  -0.090   0.9287    \n## MonthFactor9               -0.74873    0.43028  -1.740   0.0849 .  \n## scale(Wind)                -0.75588    0.14997  -5.040 2.07e-06 ***\n## scale(Temp)                 1.35192    0.20823   6.492 3.29e-09 ***\n## scale(Solar.R)              0.65178    0.15953   4.086 8.88e-05 ***\n## scale(Wind):scale(Temp)    -0.31305    0.14002  -2.236   0.0276 *  \n## scale(Wind):scale(Solar.R) -0.09259    0.15469  -0.599   0.5508    \n## scale(Temp):scale(Solar.R)  0.23573    0.15126   1.558   0.1223    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 1.321 on 100 degrees of freedom\n## Multiple R-squared:  0.7334, Adjusted R-squared:  0.7068 \n## F-statistic: 27.51 on 10 and 100 DF,  p-value: < 2.2e-16\n# get overall effect of Month:\nanova(m5)\n## Analysis of Variance Table\n## \n## Response: sqrt(Ozone)\n##                             Df  Sum Sq Mean Sq F value    Pr(>F)    \n## MonthFactor                  4 158.726  39.681 22.7249 2.261e-13 ***\n## scale(Wind)                  1 149.523 149.523 85.6296 4.282e-15 ***\n## scale(Temp)                  1 126.124 126.124 72.2290 1.899e-13 ***\n## scale(Solar.R)               1  19.376  19.376 11.0961 0.0012129 ** \n## scale(Wind):scale(Temp)      1  20.639  20.639 11.8198 0.0008556 ***\n## scale(Wind):scale(Solar.R)   1   1.803   1.803  1.0328 0.3119518    \n## scale(Temp):scale(Solar.R)   1   4.241   4.241  2.4288 0.1222856    \n## Residuals                  100 174.616   1.746                      \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n# this is doing a type I ANOVA = sequential\n# order in which you include the predictors changes the estimates and p-values\n\n# If you want to do a type II ANOVA, use ANova() from the car package\nlibrary(car)\nAnova(m5) # Anova with capital A\n## Anova Table (Type II tests)\n## \n## Response: sqrt(Ozone)\n##                             Sum Sq  Df F value    Pr(>F)    \n## MonthFactor                  9.557   4  1.3683 0.2503349    \n## scale(Wind)                 41.993   1 24.0488 3.641e-06 ***\n## scale(Temp)                 78.938   1 45.2067 1.112e-09 ***\n## scale(Solar.R)              23.189   1 13.2797 0.0004276 ***\n## scale(Wind):scale(Temp)      8.728   1  4.9983 0.0275955 *  \n## scale(Wind):scale(Solar.R)   0.626   1  0.3582 0.5508395    \n## scale(Temp):scale(Solar.R)   4.241   1  2.4288 0.1222856    \n## Residuals                  174.616 100                      \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#type II ANOVA: all other predictors have already been taken into account\n# Does an additional predictor explain some of the variance on top of that?"
  },
  {
    "objectID": "5-MultipleRegression.html#model-selection",
    "href": "5-MultipleRegression.html#model-selection",
    "title": "5  Multiple regression",
    "section": "5.4 Model selection",
    "text": "5.4 Model selection\nWe’ve learned that we should include variables in the model that are collinear, that is they correlate with other predictors, but how many and which factors should we include?\nFamous example: Female hurricanes are deadlier than male hurricanes (Jung et al., 2014)\nThey have analyzed the number of fatalities of hurricane and claimed that there is an effect of femininity of the name on the number of deads (while correcting for confounders). They recommend to give hurricans only male names because it would considerably reduce the number of deads.\n\nlibrary(DHARMa)\n## This is DHARMa 0.4.6. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\nlibrary(effects)\n?hurricanes\nstr(hurricanes)\n## Classes 'tbl_df', 'tbl' and 'data.frame':    92 obs. of  14 variables:\n##  $ Year                    : num  1950 1950 1952 1953 1953 ...\n##  $ Name                    : chr  \"Easy\" \"King\" \"Able\" \"Barbara\" ...\n##  $ MasFem                  : num  6.78 1.39 3.83 9.83 8.33 ...\n##  $ MinPressure_before      : num  958 955 985 987 985 960 954 938 962 987 ...\n##  $ Minpressure_Updated_2014: num  960 955 985 987 985 960 954 938 962 987 ...\n##  $ Gender_MF               : num  1 0 0 1 1 1 1 1 1 1 ...\n##  $ Category                : num  3 3 1 1 1 3 3 4 3 1 ...\n##  $ alldeaths               : num  2 4 3 1 0 60 20 20 0 200 ...\n##  $ NDAM                    : num  1590 5350 150 58 15 ...\n##  $ Elapsed_Yrs             : num  63 63 61 60 60 59 59 59 58 58 ...\n##  $ Source                  : chr  \"MWR\" \"MWR\" \"MWR\" \"MWR\" ...\n##  $ ZMasFem                 : num  -0.000935 -1.670758 -0.913313 0.945871 0.481075 ...\n##  $ ZMinPressure_A          : num  -0.356 -0.511 1.038 1.141 1.038 ...\n##  $ ZNDAM                   : num  -0.439 -0.148 -0.55 -0.558 -0.561 ...\n\nlibrary(glmmTMB)\n## Warning in checkDepPackageVersion(dep_pkg = \"TMB\"): Package version inconsistency detected.\n## glmmTMB was built with TMB version 1.9.3\n## Current TMB version is 1.9.4\n## Please re-install glmmTMB from source or restore original 'TMB' package (see '?reinstalling' for more information)\n\nm1 = glmmTMB(alldeaths ~ MasFem*\n                             (Minpressure_Updated_2014 + scale(NDAM)),\n                           data = hurricanes, family = nbinom2)\nsummary(m1)\n##  Family: nbinom2  ( log )\n## Formula:          alldeaths ~ MasFem * (Minpressure_Updated_2014 + scale(NDAM))\n## Data: hurricanes\n## \n##      AIC      BIC   logLik deviance df.resid \n##    660.7    678.4   -323.4    646.7       85 \n## \n## \n## Dispersion parameter for nbinom2 family (): 0.787 \n## \n## Conditional model:\n##                                  Estimate Std. Error z value Pr(>|z|)    \n## (Intercept)                     69.661590  23.425598   2.974 0.002942 ** \n## MasFem                          -5.855078   2.716589  -2.155 0.031138 *  \n## Minpressure_Updated_2014        -0.069870   0.024251  -2.881 0.003964 ** \n## scale(NDAM)                     -0.494094   0.455968  -1.084 0.278536    \n## MasFem:Minpressure_Updated_2014  0.006108   0.002813   2.171 0.029901 *  \n## MasFem:scale(NDAM)               0.205418   0.061956   3.316 0.000915 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nInteractions -> we need to scale variables:\n\nm2 = glmmTMB(alldeaths ~ scale(MasFem)*\n                             (scale(Minpressure_Updated_2014) + scale(NDAM)+scale(sqrt(NDAM))),\n                           data = hurricanes, family = nbinom2)\nsummary(m2)\n##  Family: nbinom2  ( log )\n## Formula:          \n## alldeaths ~ scale(MasFem) * (scale(Minpressure_Updated_2014) +  \n##     scale(NDAM) + scale(sqrt(NDAM)))\n## Data: hurricanes\n## \n##      AIC      BIC   logLik deviance df.resid \n##    634.9    657.6   -308.4    616.9       83 \n## \n## \n## Dispersion parameter for nbinom2 family (): 1.12 \n## \n## Conditional model:\n##                                               Estimate Std. Error z value\n## (Intercept)                                    2.28082    0.10850  21.022\n## scale(MasFem)                                  0.05608    0.10672   0.525\n## scale(Minpressure_Updated_2014)               -0.14267    0.17804  -0.801\n## scale(NDAM)                                   -1.11104    0.28030  -3.964\n## scale(sqrt(NDAM))                              2.10764    0.36487   5.776\n## scale(MasFem):scale(Minpressure_Updated_2014)  0.07371    0.19618   0.376\n## scale(MasFem):scale(NDAM)                     -0.10159    0.27080  -0.375\n## scale(MasFem):scale(sqrt(NDAM))                0.32960    0.36594   0.901\n##                                               Pr(>|z|)    \n## (Intercept)                                    < 2e-16 ***\n## scale(MasFem)                                    0.599    \n## scale(Minpressure_Updated_2014)                  0.423    \n## scale(NDAM)                                   7.38e-05 ***\n## scale(sqrt(NDAM))                             7.63e-09 ***\n## scale(MasFem):scale(Minpressure_Updated_2014)    0.707    \n## scale(MasFem):scale(NDAM)                        0.708    \n## scale(MasFem):scale(sqrt(NDAM))                  0.368    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nThe effect of femininity is gone! Already with the scaled variables, but also with the transformation with the NDAM variable. The question was raised which of both is more reasonable, whether the relationship between damage and mortality isn’t a straight line or that the gender of the hurricane names affect deaths (Bob O’Hara and GrrlScientist). They argue that the model with the transformed variable fits the data better which brings us to the topic of this section, how to choose between different models? Answering this question if the goal of model selection.\nWhy not include all the variables we can measure in our model? Problem with the full model:\n\nIf you have more parameters than data points, the model cannot be fitted at all\nEven with n (samples) ~ k (number of parameters), model properties become very unfavorable (high p-values and uncertainties/standard errors) –> Overfitting\n\nA “good model” depends on the goal of the analysis, do we want to optimize:\n\nPredictive ability – how well can we predict with the model?\nInferential ability – do we identify the true values for the parameters (true effects), are the p-values correct, can we correctly say that a variable has an effect?\n\nThe more complex a model gets, the better it fits to the data, but there’s a downside, the bias-variance tradeoff.\nExplanation bias-variance tradeoff\nExplanation LRT and AIC\nProblem of p-hacking\nExample:\n\n# Compare different competing models:\n# let's compare models m3 and m5 to decide which one explains our data better:\n# 1. LRT\nanova(m3, m5)\n# RSS = residual sum of squares = variance not explained by the model\n# smaller RSS = better model\n# p-value\n\n#2. AIC\nAIC(m3)\nAIC(m5)\n# also here, model m5 is better\n\n\n#### Demonstration: Why interpretation of effect sizes and p-values \n### after extensive model selection is not a good idea:\nlibrary(MASS)\nset.seed(1)\n#make up predictors:\ndat = data.frame(matrix(runif(20000), ncol = 100))\n# create a response variable\ndat$y = rnorm(200)\nfullModel = lm(y ~ ., data = dat)\nsum <- summary(fullModel)\nmean(sum$coefficients[,4] < 0.05)\n# 0.019: less than 2 % false positives = type I error rate\n\nselection = stepAIC(fullModel)\nsum.sel <- summary(selection)\nmean(sum.sel$coefficients[,4] < 0.05)\n# 0.48: Now almost 50 % of our results are false positives!!!"
  }
]