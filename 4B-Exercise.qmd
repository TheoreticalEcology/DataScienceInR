---
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
set.seed(42)
```

# Exercise - Multiple Linear Regression

| Formula      | Meaning                               | Details                                    |
|----------------|--------------------------|------------------------------|
| `y~x_1`      | $y=a_0 +a_1*x_1$                      | Slope+Intercept                            |
| `y~x_1 - 1`  | $y=a_1*x_1$                           | Slope, no intercept                        |
| `y~I(x_1^2)` | $y=a_0 + a_1*(x_1^2)$                 | Quadratic effect                           |
| `y~x_1+x_2`  | $y=a_0+a_1*x_1+a_2*x_2$               | Multiple linear regression (two variables) |
| `y~x_1:x_2`  | $y=a_0+a_1*(x_1*x_2)$                 | Interaction between x~1~ and x~2~          |
| `y~x_1*x_2`  | $y=a_0+a_1*(x_1*x_2)+a_2*x_1+a_3*x_2$ | Interaction and main effects               |

: Formula syntax

In this exercise you will:

-   perform multiple linear regressions
-   interpret regression output and check the residuals
-   plot model predictions including interactions

Before you start, remember to clean your global environment (if you haven't already) using *rm(list=ls())*.

To conduct the exercise, please load the following packages:

```{r, eval=TRUE}
library(effects)
library(MuMIn)
```

You will work with the following datasets:

-   mtcars
-   Cement{MuMIn}

The second dataset is from the MuMIn package (as shown by the curly brackets).

### Useful functions

for multiple linear regression

`lm()` - fit linear model\
`summary(fit)` - apply to fitted model object to display regression table\
`plot(fit)` - plot residuals for model validation\
`anova(fit)` - apply type I ANOVA (variables included sequentially) to model to test for effects all levels of a factor\
`Anova(fit)` - `car` package; use type II ANOVA (effects for predictors when all other predictors are already included) for overall effects\
`scale()` - scale variable\
`sqrt()` - square-root\
`log()` - calculates natural logarithm\
`plot(allEffects(fit))` - apply to fitted model object to plot marginal effect; `effects` package\
`par()` - change graphical parameters\
use `oldpar \<- par(mfrow = c(number_rows, number_cols))` to change figure layout including more than 1 plot per figure\
use `par(oldpar)` to reset graphic parameter

for model selection

`stepAIC(fullModel)` - perform stepwise AIC model selection; apply to full model object, `MASS` package\
`dredge(fullModel)` - perform global model selection, `MuMIn` package\
`model.avg()` - perform model averaging\
`AIC(fit)` - get AIC for a fitted model\
`anova(fit1, fit2)` - compare two fitted models via Likelihood Ratio Test (LRT)

## Analyzing the `mtcars` dataset

Imagine a start up company wants to rebuild a car with a nice retro look from the 70ies. The car should be modern though, meaning the fuel consumption should be as low as possible. They've discovered the `mtcars` dataset with all the necessary measurements and they've somehow heard about you and your R skills and asked you for help. And of course you promised to help, kind as you are.

The company wants you to find out which of the following characteristics affects the fuel consumption measured in miles per gallon (`mpg`). Lower values for `mpg` thus reflect a higher fuel consumption. The company wants you to include the following variables into your analysis:

-   number of cylinders (`cyl`)
-   weight (`wt`)
-   horsepower (`hp`)
-   whether the car is driven manually or with automatic (`am`)

In addition, Pawl, one of the founders of the company suggested that the effect of weight (`wt`) might be irrelevant for powerful cars (high `hp` values). You are thus asked to test for this interaction in your analysis as well.

::: {.callout-caution icon="false"}
### Question

Carry out the following tasks:

-   Perform a multiple linear regression (change class for `cyl` and `am` to factor)
-   Check the model residuals
-   Interpret and plot all effects

You may need the following functions:

-   as.factor()
-   lm()
-   summary()
-   anova()
-   plot()
-   allEffects()

Use your results to **answer the questions on elearning-extern** (Q 1-2) [("05_Test for Exercise in R - multiple regression")](https://elearning.uni-regensburg.de/mod/quiz/view.php?id=2046701).
:::

::: {.callout-tip collapse="true" appearance="minimal" icon="false"}
### Solution

This is the code that you need to interpret the results.

```{r mtcars}
# change am and cyl from numeric to factor
mtcars$am <- as.factor(mtcars$am)
mtcars$cyl <- as.factor(mtcars$cyl)

# multiple linear regression and results:
# (we need to scale (standardize) the predictors wt and hp, since we include their interaction)
carsfit <- lm(mpg ~ am + cyl + scale(wt) * scale(hp), dat = mtcars)
# weight is included as the first predictor in order to have
# it as the grouping factor in the allEffects plot

summary(carsfit)
# The first level of each factor is used as a reference, i.e. in this case a manual gear shift with 4 gears.
# From the coefficient cyl6 we see that there is no significant difference in fuel consumption (= our response) between 4 gears (the reference) and 6 gears.
# In contrast, the predictors weight (wt) and horsepower (hp) have a significant negative effect on the range (mpg), so that they both increase fuel consumption.

# check residuals
old.par = par(mfrow = c(2, 2))
plot(carsfit)
par(old.par)

# plot effects
plot(allEffects(carsfit))
# We can see in the wt*hp plot, that for high values of hp wt has no effect on the response mpg. We conclude that Pawl was right.
```
:::

## Model-selection with the `Cement` dataset

The process of cement hardening involves exogenous chemical reactions and thus produces heat. The amount of heat produced by the cement depends on the mixture of its constituents. The `Cement` dataset includes heat measurements for different types of cement that consist of different relative amounts of calcium aluminate (`X1`), tricalcium silicate (`X2`), tetracalcium alumino ferrite (`X3`) and dicalcium silicate (`X4`). A cement producing company wants to optimize the composition of its product and wants to know, which of these compounds are mainly responsible for heat production.

::: callout-warning
We only do a model selection here for educational reasons. For your analysis, and if your goal is not a predictive model, think about the model structure before you do the analysis and then stick to it! See here the section about [p-hacking](https://theoreticalecology.github.io/AdvancedRegressionModels/3C-ModelSelection.html#pHacking) (and also consider that AIC selection will/can remove confounders which will violate causality and can lead to spurious correlations!
:::

::: {.callout-caution icon="false"}
### Questions

Carry out the following tasks:

-   Perform a multiple linear regression including all predictor variables and all two-way interactions (remember the notation `(var1 + var2 + var3)\^2`.
-   Perform forward, backward, and global model selection and compare the results
-   Fit the model considered optimal by global model selection and compare it with the full model based on AIC (or AICc) and LRT.

You may need the following functions:

-   lm()
-   summary()
-   stepAIC()
-   options()
-   dredge()
-   AIC() or AICc() (for small datasets)
-   anova()

Use your results to **answer the questions on elearning-extern** (Q 3-5) [("05_Test for Exercise in R - multiple regression")](https://elearning.uni-regensburg.de/mod/quiz/view.php?id=2046701).
:::

::: {.callout-tip collapse="true" appearance="minimal" icon="false"}
### Solution

This is the code that you need to obtain the results.

```{r  Cement}
#| eval: false

library(MuMIn)
library(MASS)

# full model ->  has 11 coefficients
full = lm(y ~ (X1 + X2 + X3 + X4)^2, data = Cement)
summary(full)

# forward model selection
ms_forw = stepAIC(full, direction = "forward")
summary(ms_forw)
# lists 11 coefficients (i.e. selects full model)

# backward model selection
ms_back = stepAIC(full, direction = "backward")
summary(ms_back)
# lists 10 coefficients

# global model selection
options(na.action = "na.fail")
dd = dredge(full)
head(dd)
# The first row lists the best performing model: it includes only the intercept and effects for X1 and X2 (= 3 coefficients).

# Fit the model considered optimal by global model selection and compare it with the full model based on AIC (or AICc) and LRT:
opt = lm(y ~ X1 + X2, data = Cement)
summary(opt)

AIC(opt,full) # full model is better according to AIC (lower AIC)
anova(opt, full) # -> LRT: no significant difference between the models

# sample size in the Cement dataset:
str(Cement)  # or
nrow(Cement)

# If the sample size is low, a corrected version of the AIC is recommended to avoid overfitting:
AICc(opt,full) # This is inf! -> optimal model is better according to AICc

```
:::
